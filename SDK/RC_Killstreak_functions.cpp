// RogueCompany (4.24) SDK

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

#include "../SDK.hpp"

namespace SDK
{
//---------------------------------------------------------------------------
//Functions
//---------------------------------------------------------------------------

// Function Killstreak.AttachmentCollection.GetCompatibleAttachmentsForWeaponType
// ()

void UAttachmentCollection::GetCompatibleAttachmentsForWeaponType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.AttachmentCollection.GetCompatibleAttachmentsForWeaponType");

	UAttachmentCollection_GetCompatibleAttachmentsForWeaponType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.AudioOcclusionComponent.GetPathedOcclusion
// ()

void UAudioOcclusionComponent::GetPathedOcclusion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.AudioOcclusionComponent.GetPathedOcclusion");

	UAudioOcclusionComponent_GetPathedOcclusion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EchoBlueprintLibrary.RequestEchoFromActor
// ()

void UEchoBlueprintLibrary::RequestEchoFromActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EchoBlueprintLibrary.RequestEchoFromActor");

	UEchoBlueprintLibrary_RequestEchoFromActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EchoBlueprintLibrary.RequestEcho
// ()

void UEchoBlueprintLibrary::RequestEcho()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EchoBlueprintLibrary.RequestEcho");

	UEchoBlueprintLibrary_RequestEcho_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentActorInterface.TrackerLeave
// ()

void UEnvironmentActorInterface::TrackerLeave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentActorInterface.TrackerLeave");

	UEnvironmentActorInterface_TrackerLeave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentActorInterface.TrackerEnter
// ()

void UEnvironmentActorInterface::TrackerEnter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentActorInterface.TrackerEnter");

	UEnvironmentActorInterface_TrackerEnter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentActorInterface.GetEnvironmentTag
// ()

void UEnvironmentActorInterface::GetEnvironmentTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentActorInterface.GetEnvironmentTag");

	UEnvironmentActorInterface_GetEnvironmentTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentListenerComponent.ViewTargetEnvironmentChanged
// ()

void UEnvironmentListenerComponent::ViewTargetEnvironmentChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentListenerComponent.ViewTargetEnvironmentChanged");

	UEnvironmentListenerComponent_ViewTargetEnvironmentChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentListenerComponent.OnEnvironmentChanged
// ()

void UEnvironmentListenerComponent::OnEnvironmentChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentListenerComponent.OnEnvironmentChanged");

	UEnvironmentListenerComponent_OnEnvironmentChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentListenerComponent.GetCurrentEnvironment
// ()

void UEnvironmentListenerComponent::GetCurrentEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentListenerComponent.GetCurrentEnvironment");

	UEnvironmentListenerComponent_GetCurrentEnvironment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.ReevalulateEnvironment
// ()

void UEnvironmentTrackerComponent::ReevalulateEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.ReevalulateEnvironment");

	UEnvironmentTrackerComponent_ReevalulateEnvironment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.OnRep_CurrentEnvironment
// ()

void UEnvironmentTrackerComponent::OnRep_CurrentEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.OnRep_CurrentEnvironment");

	UEnvironmentTrackerComponent_OnRep_CurrentEnvironment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.GetCurrentEnvironment
// ()

void UEnvironmentTrackerComponent::GetCurrentEnvironment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.GetCurrentEnvironment");

	UEnvironmentTrackerComponent_GetCurrentEnvironment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.EndTouchingOwnerUpdatedComponent
// ()

void UEnvironmentTrackerComponent::EndTouchingOwnerUpdatedComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.EndTouchingOwnerUpdatedComponent");

	UEnvironmentTrackerComponent_EndTouchingOwnerUpdatedComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.BlueprintEnvironmentChanged
// ()

void UEnvironmentTrackerComponent::BlueprintEnvironmentChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.BlueprintEnvironmentChanged");

	UEnvironmentTrackerComponent_BlueprintEnvironmentChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.EnvironmentTrackerComponent.BeginTouchingOwnerUpdatedComponent
// ()

void UEnvironmentTrackerComponent::BeginTouchingOwnerUpdatedComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.EnvironmentTrackerComponent.BeginTouchingOwnerUpdatedComponent");

	UEnvironmentTrackerComponent_BeginTouchingOwnerUpdatedComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobRole.GetRoleIcon
// ()

void UKSJobRole::GetRoleIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobRole.GetRoleIcon");

	UKSJobRole_GetRoleIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KickbackModule.MakeKickbackInstance
// ()

void UKickbackModule::MakeKickbackInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KickbackModule.MakeKickbackInstance");

	UKickbackModule_MakeKickbackInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KickbackModule.GetMaximumVerticalKick
// ()

void UKickbackModule::GetMaximumVerticalKick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KickbackModule.GetMaximumVerticalKick");

	UKickbackModule_GetMaximumVerticalKick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KickbackModule.GetMaximumHorizontalKick
// ()

void UKickbackModule::GetMaximumHorizontalKick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KickbackModule.GetMaximumHorizontalKick");

	UKickbackModule_GetMaximumHorizontalKick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.StartTracking
// ()

void UKSAccoladeTracker::StartTracking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.StartTracking");

	UKSAccoladeTracker_StartTracking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.ResetTracker
// ()

void UKSAccoladeTracker::ResetTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.ResetTracker");

	UKSAccoladeTracker_ResetTracker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.NativeHandleElimEvent
// ()

void UKSAccoladeTracker::NativeHandleElimEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.NativeHandleElimEvent");

	UKSAccoladeTracker_NativeHandleElimEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.NativeHandleDownEvent
// ()

void UKSAccoladeTracker::NativeHandleDownEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.NativeHandleDownEvent");

	UKSAccoladeTracker_NativeHandleDownEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.HandleElimEvent
// ()

void UKSAccoladeTracker::HandleElimEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.HandleElimEvent");

	UKSAccoladeTracker_HandleElimEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.HandleDownEvent
// ()

void UKSAccoladeTracker::HandleDownEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.HandleDownEvent");

	UKSAccoladeTracker_HandleDownEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.GetPrimaryAccoladeDisplayInfo
// ()

void UKSAccoladeTracker::GetPrimaryAccoladeDisplayInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.GetPrimaryAccoladeDisplayInfo");

	UKSAccoladeTracker_GetPrimaryAccoladeDisplayInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.GetOwningGameMode
// ()

void UKSAccoladeTracker::GetOwningGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.GetOwningGameMode");

	UKSAccoladeTracker_GetOwningGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAccoladeTracker.DispatchGameStateAccoladeDisplay
// ()

void UKSAccoladeTracker::DispatchGameStateAccoladeDisplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAccoladeTracker.DispatchGameStateAccoladeDisplay");

	UKSAccoladeTracker_DispatchGameStateAccoladeDisplay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAcquisition.IsVoucherAcquisition
// ()

void UKSAcquisition::IsVoucherAcquisition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAcquisition.IsVoucherAcquisition");

	UKSAcquisition_IsVoucherAcquisition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAcquisition.IsPurchase
// ()

void UKSAcquisition::IsPurchase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAcquisition.IsPurchase");

	UKSAcquisition_IsPurchase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAcquisition.IsBundleAcquisition
// ()

void UKSAcquisition::IsBundleAcquisition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAcquisition.IsBundleAcquisition");

	UKSAcquisition_IsBundleAcquisition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAcquisitionManager.GetNextAcquistion
// ()

void UKSAcquisitionManager::GetNextAcquistion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAcquisitionManager.GetNextAcquistion");

	UKSAcquisitionManager_GetNextAcquistion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAcquisitionManager.CreateAcquisitionForItem
// ()

void UKSAcquisitionManager::CreateAcquisitionForItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAcquisitionManager.CreateAcquisitionForItem");

	UKSAcquisitionManager_CreateAcquisitionForItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivity.InitNewlyCreatedActivity
// ()

void UKSActivity::InitNewlyCreatedActivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivity.InitNewlyCreatedActivity");

	UKSActivity_InitNewlyCreatedActivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivity.GetTierDataForProgress
// ()

void UKSActivity::GetTierDataForProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivity.GetTierDataForProgress");

	UKSActivity_GetTierDataForProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivity.GetInstanceForPlayer
// ()

void UKSActivity::GetInstanceForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivity.GetInstanceForPlayer");

	UKSActivity_GetInstanceForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.UpdateActivityTiers
// ()

void UKSActivityInstance::UpdateActivityTiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.UpdateActivityTiers");

	UKSActivityInstance_UpdateActivityTiers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.OnEventTrackerTriggered
// ()

void UKSActivityInstance::OnEventTrackerTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.OnEventTrackerTriggered");

	UKSActivityInstance_OnEventTrackerTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.IsUnlocked
// ()

void UKSActivityInstance::IsUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IsUnlocked");

	UKSActivityInstance_IsUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.IsFinished
// ()

void UKSActivityInstance::IsFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IsFinished");

	UKSActivityInstance_IsFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.IsActive
// ()

void UKSActivityInstance::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IsActive");

	UKSActivityInstance_IsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.IncrementProgress
// ()

void UKSActivityInstance::IncrementProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.IncrementProgress");

	UKSActivityInstance_IncrementProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.HasAuthority
// ()

void UKSActivityInstance::HasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.HasAuthority");

	UKSActivityInstance_HasAuthority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetTiersForXpRange
// ()

void UKSActivityInstance::GetTiersForXpRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetTiersForXpRange");

	UKSActivityInstance_GetTiersForXpRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetTiers
// ()

void UKSActivityInstance::GetTiers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetTiers");

	UKSActivityInstance_GetTiers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetTierDataForProgress
// ()

void UKSActivityInstance::GetTierDataForProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetTierDataForProgress");

	UKSActivityInstance_GetTierDataForProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetProgressTierForSpecifiedProgressCount
// ()

void UKSActivityInstance::GetProgressTierForSpecifiedProgressCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressTierForSpecifiedProgressCount");

	UKSActivityInstance_GetProgressTierForSpecifiedProgressCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetProgressTier
// ()

void UKSActivityInstance::GetProgressTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressTier");

	UKSActivityInstance_GetProgressTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetProgressPercentageToNextTier
// ()

void UKSActivityInstance::GetProgressPercentageToNextTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressPercentageToNextTier");

	UKSActivityInstance_GetProgressPercentageToNextTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetProgressPercentageToMaxTier
// ()

void UKSActivityInstance::GetProgressPercentageToMaxTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressPercentageToMaxTier");

	UKSActivityInstance_GetProgressPercentageToMaxTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetProgressEarned
// ()

void UKSActivityInstance::GetProgressEarned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressEarned");

	UKSActivityInstance_GetProgressEarned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetProgressDisplayText
// ()

void UKSActivityInstance::GetProgressDisplayText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressDisplayText");

	UKSActivityInstance_GetProgressDisplayText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetProgressCount
// ()

void UKSActivityInstance::GetProgressCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetProgressCount");

	UKSActivityInstance_GetProgressCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetPlayerId
// ()

void UKSActivityInstance::GetPlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetPlayerId");

	UKSActivityInstance_GetPlayerId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetNextTier
// ()

void UKSActivityInstance::GetNextTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetNextTier");

	UKSActivityInstance_GetNextTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetMaxTier
// ()

void UKSActivityInstance::GetMaxTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetMaxTier");

	UKSActivityInstance_GetMaxTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetLastProgressTime
// ()

void UKSActivityInstance::GetLastProgressTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetLastProgressTime");

	UKSActivityInstance_GetLastProgressTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetInventoryProgressCount
// ()

void UKSActivityInstance::GetInventoryProgressCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetInventoryProgressCount");

	UKSActivityInstance_GetInventoryProgressCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.GetInventoryId
// ()

void UKSActivityInstance::GetInventoryId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.GetInventoryId");

	UKSActivityInstance_GetInventoryId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityInstance.CreateTracker
// ()

void UKSActivityInstance::CreateTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityInstance.CreateTracker");

	UKSActivityInstance_CreateTracker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.RequestActivitiesLoad
// ()

void UKSActivityManagerBase::RequestActivitiesLoad()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.RequestActivitiesLoad");

	UKSActivityManagerBase_RequestActivitiesLoad_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.QueryActivityInstancesByTime
// ()

void UKSActivityManagerBase::QueryActivityInstancesByTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.QueryActivityInstancesByTime");

	UKSActivityManagerBase_QueryActivityInstancesByTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.QueryActivityInstances
// ()

void UKSActivityManagerBase::QueryActivityInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.QueryActivityInstances");

	UKSActivityManagerBase_QueryActivityInstances_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnStoreVendorsLoaded
// ()

void UKSActivityManagerBase::OnStoreVendorsLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnStoreVendorsLoaded");

	UKSActivityManagerBase_OnStoreVendorsLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnSetupPhaseStarted
// ()

void UKSActivityManagerBase::OnSetupPhaseStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnSetupPhaseStarted");

	UKSActivityManagerBase_OnSetupPhaseStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnSetupPhaseFinished
// ()

void UKSActivityManagerBase::OnSetupPhaseFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnSetupPhaseFinished");

	UKSActivityManagerBase_OnSetupPhaseFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnServerPlayerPostLogin
// ()

void UKSActivityManagerBase::OnServerPlayerPostLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnServerPlayerPostLogin");

	UKSActivityManagerBase_OnServerPlayerPostLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnServerPlayerLogout
// ()

void UKSActivityManagerBase::OnServerPlayerLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnServerPlayerLogout");

	UKSActivityManagerBase_OnServerPlayerLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnGameModePhaseChanged
// ()

void UKSActivityManagerBase::OnGameModePhaseChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnGameModePhaseChanged");

	UKSActivityManagerBase_OnGameModePhaseChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnGameModeInitialized
// ()

void UKSActivityManagerBase::OnGameModeInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnGameModeInitialized");

	UKSActivityManagerBase_OnGameModeInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnClientLoggedIn
// ()

void UKSActivityManagerBase::OnClientLoggedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnClientLoggedIn");

	UKSActivityManagerBase_OnClientLoggedIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.OnAllActivitiesLoaded
// ()

void UKSActivityManagerBase::OnAllActivitiesLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.OnAllActivitiesLoaded");

	UKSActivityManagerBase_OnAllActivitiesLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.IsSetupFinished
// ()

void UKSActivityManagerBase::IsSetupFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.IsSetupFinished");

	UKSActivityManagerBase_IsSetupFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.GoToNextSetupPhase
// ()

void UKSActivityManagerBase::GoToNextSetupPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GoToNextSetupPhase");

	UKSActivityManagerBase_GoToNextSetupPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.GetActivityInstances
// ()

void UKSActivityManagerBase::GetActivityInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GetActivityInstances");

	UKSActivityManagerBase_GetActivityInstances_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.GetActivityInstanceByItemId
// ()

void UKSActivityManagerBase::GetActivityInstanceByItemId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GetActivityInstanceByItemId");

	UKSActivityManagerBase_GetActivityInstanceByItemId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.GetActivityInstance
// ()

void UKSActivityManagerBase::GetActivityInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.GetActivityInstance");

	UKSActivityManagerBase_GetActivityInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.FindActivity
// ()

void UKSActivityManagerBase::FindActivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.FindActivity");

	UKSActivityManagerBase_FindActivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.FindActivitiesByJob
// ()

void UKSActivityManagerBase::FindActivitiesByJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.FindActivitiesByJob");

	UKSActivityManagerBase_FindActivitiesByJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.DoesRequireSetupPhase
// ()

void UKSActivityManagerBase::DoesRequireSetupPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.DoesRequireSetupPhase");

	UKSActivityManagerBase_DoesRequireSetupPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityManagerBase.AttemptInitialActivityCreation
// ()

void UKSActivityManagerBase::AttemptInitialActivityCreation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityManagerBase.AttemptInitialActivityCreation");

	UKSActivityManagerBase_AttemptInitialActivityCreation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSActivityTestManager.DirectlySetupActivityTrackingForPlayer
// ()

void AKSActivityTestManager::DirectlySetupActivityTrackingForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSActivityTestManager.DirectlySetupActivityTrackingForPlayer");

	AKSActivityTestManager_DirectlySetupActivityTrackingForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.YieldToRealActor
// ()

void AKSLagCompensatedActor::YieldToRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.YieldToRealActor");

	AKSLagCompensatedActor_YieldToRealActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.TryToDestroy
// ()

void AKSLagCompensatedActor::TryToDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.TryToDestroy");

	AKSLagCompensatedActor_TryToDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromWeapon
// ()

void AKSLagCompensatedActor::SetLagCompActorIDFromWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromWeapon");

	AKSLagCompensatedActor_SetLagCompActorIDFromWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromParentProjectile
// ()

void AKSLagCompensatedActor::SetLagCompActorIDFromParentProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromParentProjectile");

	AKSLagCompensatedActor_SetLagCompActorIDFromParentProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromModInstance
// ()

void AKSLagCompensatedActor::SetLagCompActorIDFromModInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.SetLagCompActorIDFromModInstance");

	AKSLagCompensatedActor_SetLagCompActorIDFromModInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.RealActorTakeOver
// ()

void AKSLagCompensatedActor::RealActorTakeOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.RealActorTakeOver");

	AKSLagCompensatedActor_RealActorTakeOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.RealActorDestroyed
// ()

void AKSLagCompensatedActor::RealActorDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.RealActorDestroyed");

	AKSLagCompensatedActor_RealActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnTakeOverAsRealActor
// ()

void AKSLagCompensatedActor::OnTakeOverAsRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnTakeOverAsRealActor");

	AKSLagCompensatedActor_OnTakeOverAsRealActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnRep_LagCompActorID
// ()

void AKSLagCompensatedActor::OnRep_LagCompActorID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnRep_LagCompActorID");

	AKSLagCompensatedActor_OnRep_LagCompActorID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnRealActorSpawn
// ()

void AKSLagCompensatedActor::OnRealActorSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnRealActorSpawn");

	AKSLagCompensatedActor_OnRealActorSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnPlayerStateChanged
// ()

void AKSLagCompensatedActor::OnPlayerStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnPlayerStateChanged");

	AKSLagCompensatedActor_OnPlayerStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.OnPlayerSpawned
// ()

void AKSLagCompensatedActor::OnPlayerSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.OnPlayerSpawned");

	AKSLagCompensatedActor_OnPlayerSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.IsClientPredictedActor
// ()

void AKSLagCompensatedActor::IsClientPredictedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.IsClientPredictedActor");

	AKSLagCompensatedActor_IsClientPredictedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.IsActiveRealActor
// ()

void AKSLagCompensatedActor::IsActiveRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.IsActiveRealActor");

	AKSLagCompensatedActor_IsActiveRealActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.InitializeRealActor
// ()

void AKSLagCompensatedActor::InitializeRealActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.InitializeRealActor");

	AKSLagCompensatedActor_InitializeRealActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.InitializeFakeActor
// ()

void AKSLagCompensatedActor::InitializeFakeActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.InitializeFakeActor");

	AKSLagCompensatedActor_InitializeFakeActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLagCompensatedActor.FakeDestroyCleanup
// ()

void AKSLagCompensatedActor::FakeDestroyCleanup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLagCompensatedActor.FakeDestroyCleanup");

	AKSLagCompensatedActor_FakeDestroyCleanup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.RefundAgentAsset
// ()

void AKSAgentBase::RefundAgentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.RefundAgentAsset");

	AKSAgentBase_RefundAgentAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.OnRep_CurrentHealth
// ()

void AKSAgentBase::OnRep_CurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.OnRep_CurrentHealth");

	AKSAgentBase_OnRep_CurrentHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.OnMissionBegin
// ()

void AKSAgentBase::OnMissionBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.OnMissionBegin");

	AKSAgentBase_OnMissionBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.MovementPlaybackStop
// ()

void AKSAgentBase::MovementPlaybackStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.MovementPlaybackStop");

	AKSAgentBase_MovementPlaybackStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgentBase.BroadcastMissionBegin
// ()

void AKSAgentBase::BroadcastMissionBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgentBase.BroadcastMissionBegin");

	AKSAgentBase_BroadcastMissionBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.UpdateReplicatedTimer
// ()

void AKSAgent_RevealDrone::UpdateReplicatedTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.UpdateReplicatedTimer");

	AKSAgent_RevealDrone_UpdateReplicatedTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.StartNextReveal
// ()

void AKSAgent_RevealDrone::StartNextReveal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.StartNextReveal");

	AKSAgent_RevealDrone_StartNextReveal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.SetPlayerOwner
// ()

void AKSAgent_RevealDrone::SetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.SetPlayerOwner");

	AKSAgent_RevealDrone_SetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.ScrambleEnemies
// ()

void AKSAgent_RevealDrone::ScrambleEnemies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.ScrambleEnemies");

	AKSAgent_RevealDrone_ScrambleEnemies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.RevealOpposingTeam
// ()

void AKSAgent_RevealDrone::RevealOpposingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.RevealOpposingTeam");

	AKSAgent_RevealDrone_RevealOpposingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.Ping
// ()

void AKSAgent_RevealDrone::Ping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.Ping");

	AKSAgent_RevealDrone_Ping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.GetRevealPeriodDuration
// ()

void AKSAgent_RevealDrone::GetRevealPeriodDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.GetRevealPeriodDuration");

	AKSAgent_RevealDrone_GetRevealPeriodDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevealDrone.EndRevealPeriod
// ()

void AKSAgent_RevealDrone::EndRevealPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevealDrone.EndRevealPeriod");

	AKSAgent_RevealDrone_EndRevealPeriod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.TargetStartGuaranteedRevive
// ()

void AKSAgent_RevivalDrone::TargetStartGuaranteedRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.TargetStartGuaranteedRevive");

	AKSAgent_RevivalDrone_TargetStartGuaranteedRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.StartReviveEffects
// ()

void AKSAgent_RevivalDrone::StartReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.StartReviveEffects");

	AKSAgent_RevivalDrone_StartReviveEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.SetOutlineVisibility
// ()

void AKSAgent_RevivalDrone::SetOutlineVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.SetOutlineVisibility");

	AKSAgent_RevivalDrone_SetOutlineVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.SetFriendlyOutlineVisibility
// ()

void AKSAgent_RevivalDrone::SetFriendlyOutlineVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.SetFriendlyOutlineVisibility");

	AKSAgent_RevivalDrone_SetFriendlyOutlineVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnTargetKilled
// ()

void AKSAgent_RevivalDrone::OnTargetKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnTargetKilled");

	AKSAgent_RevivalDrone_OnTargetKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnReviveEnd
// ()

void AKSAgent_RevivalDrone::OnReviveEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnReviveEnd");

	AKSAgent_RevivalDrone_OnReviveEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnRep_OngoingReviveEffectsActive
// ()

void AKSAgent_RevivalDrone::OnRep_OngoingReviveEffectsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnRep_OngoingReviveEffectsActive");

	AKSAgent_RevivalDrone_OnRep_OngoingReviveEffectsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVulnerability
// ()

void AKSAgent_RevivalDrone::OnRep_DroneVulnerability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVulnerability");

	AKSAgent_RevivalDrone_OnRep_DroneVulnerability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVisibility
// ()

void AKSAgent_RevivalDrone::OnRep_DroneVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.OnRep_DroneVisibility");

	AKSAgent_RevivalDrone_OnRep_DroneVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.GetReviveProgress
// ()

void AKSAgent_RevivalDrone::GetReviveProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.GetReviveProgress");

	AKSAgent_RevivalDrone_GetReviveProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.GetMovementStage
// ()

void AKSAgent_RevivalDrone::GetMovementStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.GetMovementStage");

	AKSAgent_RevivalDrone_GetMovementStage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.GetFlightPath
// ()

void AKSAgent_RevivalDrone::GetFlightPath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.GetFlightPath");

	AKSAgent_RevivalDrone_GetFlightPath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.EventStartReviveEffects
// ()

void AKSAgent_RevivalDrone::EventStartReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.EventStartReviveEffects");

	AKSAgent_RevivalDrone_EventStartReviveEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.EventOngoingReviveEffectsStarted
// ()

void AKSAgent_RevivalDrone::EventOngoingReviveEffectsStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.EventOngoingReviveEffectsStarted");

	AKSAgent_RevivalDrone_EventOngoingReviveEffectsStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.EventEndReviveEffects
// ()

void AKSAgent_RevivalDrone::EventEndReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.EventEndReviveEffects");

	AKSAgent_RevivalDrone_EventEndReviveEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastMovementState
// ()

void AKSAgent_RevivalDrone::BroadcastMovementState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastMovementState");

	AKSAgent_RevivalDrone_BroadcastMovementState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastEndReviveEffects
// ()

void AKSAgent_RevivalDrone::BroadcastEndReviveEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastEndReviveEffects");

	AKSAgent_RevivalDrone_BroadcastEndReviveEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVulnerability
// ()

void AKSAgent_RevivalDrone::BroadcastDroneVulnerability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVulnerability");

	AKSAgent_RevivalDrone_BroadcastDroneVulnerability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVisibility
// ()

void AKSAgent_RevivalDrone::BroadcastDroneVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BroadcastDroneVisibility");

	AKSAgent_RevivalDrone_BroadcastDroneVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.BeginRevive
// ()

void AKSAgent_RevivalDrone::BeginRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.BeginRevive");

	AKSAgent_RevivalDrone_BeginRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVulnerabilityInternal
// ()

void AKSAgent_RevivalDrone::ApplyDroneVulnerabilityInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVulnerabilityInternal");

	AKSAgent_RevivalDrone_ApplyDroneVulnerabilityInternal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVisibilityInternal
// ()

void AKSAgent_RevivalDrone::ApplyDroneVisibilityInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.ApplyDroneVisibilityInternal");

	AKSAgent_RevivalDrone_ApplyDroneVisibilityInternal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAgent_RevivalDrone.ActivateDroneOngoingEffects
// ()

void AKSAgent_RevivalDrone::ActivateDroneOngoingEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAgent_RevivalDrone.ActivateDroneOngoingEffects");

	AKSAgent_RevivalDrone_ActivateDroneOngoingEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.SetNavigationInteractTarget
// ()

void AKSAIController::SetNavigationInteractTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.SetNavigationInteractTarget");

	AKSAIController_SetNavigationInteractTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.OnPawnKilled
// ()

void AKSAIController::OnPawnKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.OnPawnKilled");

	AKSAIController_OnPawnKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.HandleTeamSidesFlipped
// ()

void AKSAIController::HandleTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.HandleTeamSidesFlipped");

	AKSAIController_HandleTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.HandleJobChanged
// ()

void AKSAIController::HandleJobChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.HandleJobChanged");

	AKSAIController_HandleJobChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.GetOwnedCharacter
// ()

void AKSAIController::GetOwnedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.GetOwnedCharacter");

	AKSAIController_GetOwnedCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.GetNavigationInteractTarget
// ()

void AKSAIController::GetNavigationInteractTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.GetNavigationInteractTarget");

	AKSAIController_GetNavigationInteractTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.GetKSPerceptionComponent
// ()

void AKSAIController::GetKSPerceptionComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.GetKSPerceptionComponent");

	AKSAIController_GetKSPerceptionComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIController.ClearNavigationInteractTarget
// ()

void AKSAIController::ClearNavigationInteractTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIController.ClearNavigationInteractTarget");

	AKSAIController_ClearNavigationInteractTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIDifficultyComponent.GetCurrentDifficulty
// ()

void UKSAIDifficultyComponent::GetCurrentDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIDifficultyComponent.GetCurrentDifficulty");

	UKSAIDifficultyComponent_GetCurrentDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIDifficultyComponent.ChangeDifficulty
// ()

void UKSAIDifficultyComponent::ChangeDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIDifficultyComponent.ChangeDifficulty");

	UKSAIDifficultyComponent_ChangeDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.InsertPriority
// ()

void UKSAIItemPriorityComponent::InsertPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.InsertPriority");

	UKSAIItemPriorityComponent_InsertPriority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.InsertPriorities
// ()

void UKSAIItemPriorityComponent::InsertPriorities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.InsertPriorities");

	UKSAIItemPriorityComponent_InsertPriorities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetWeightByName
// ()

void UKSAIItemPriorityComponent::GetWeightByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetWeightByName");

	UKSAIItemPriorityComponent_GetWeightByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetWeight
// ()

void UKSAIItemPriorityComponent::GetWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetWeight");

	UKSAIItemPriorityComponent_GetWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeightByName
// ()

void UKSAIItemPriorityComponent::GetShopPurchaseWeightByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeightByName");

	UKSAIItemPriorityComponent_GetShopPurchaseWeightByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeight
// ()

void UKSAIItemPriorityComponent::GetShopPurchaseWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPurchaseWeight");

	UKSAIItemPriorityComponent_GetShopPurchaseWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroupByName
// ()

void UKSAIItemPriorityComponent::GetShopPriorityGroupByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroupByName");

	UKSAIItemPriorityComponent_GetShopPriorityGroupByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroup
// ()

void UKSAIItemPriorityComponent::GetShopPriorityGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetShopPriorityGroup");

	UKSAIItemPriorityComponent_GetShopPriorityGroup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplierByName
// ()

void UKSAIItemPriorityComponent::GetPriorityMultiplierByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplierByName");

	UKSAIItemPriorityComponent_GetPriorityMultiplierByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplier
// ()

void UKSAIItemPriorityComponent::GetPriorityMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.GetPriorityMultiplier");

	UKSAIItemPriorityComponent_GetPriorityMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIItemPriorityComponent.ClearPriorities
// ()

void UKSAIItemPriorityComponent::ClearPriorities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIItemPriorityComponent.ClearPriorities");

	UKSAIItemPriorityComponent_ClearPriorities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.ResetHealth
// ()

void AKSAimAssistActor::ResetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.ResetHealth");

	AKSAimAssistActor_ResetHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.OnRep_HealthInfo
// ()

void AKSAimAssistActor::OnRep_HealthInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.OnRep_HealthInfo");

	AKSAimAssistActor_OnRep_HealthInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.OnKilled
// ()

void AKSAimAssistActor::OnKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.OnKilled");

	AKSAimAssistActor_OnKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.ModifyIncomingDamageTaken
// ()

void AKSAimAssistActor::ModifyIncomingDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.ModifyIncomingDamageTaken");

	AKSAimAssistActor_ModifyIncomingDamageTaken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.IsValidIncomingDamage
// ()

void AKSAimAssistActor::IsValidIncomingDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.IsValidIncomingDamage");

	AKSAimAssistActor_IsValidIncomingDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.GetAAHeadLocation
// ()

void AKSAimAssistActor::GetAAHeadLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.GetAAHeadLocation");

	AKSAimAssistActor_GetAAHeadLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.GetAABodyLocation
// ()

void AKSAimAssistActor::GetAABodyLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.GetAABodyLocation");

	AKSAimAssistActor_GetAABodyLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.CanBeHitByWeapon
// ()

void AKSAimAssistActor::CanBeHitByWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.CanBeHitByWeapon");

	AKSAimAssistActor_CanBeHitByWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistActor.AimAssistRightNow
// ()

void AKSAimAssistActor::AimAssistRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistActor.AimAssistRightNow");

	AKSAimAssistActor_AimAssistRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistComponent.GetScaledProjectionBoundsForActor
// ()

void UKSAimAssistComponent::GetScaledProjectionBoundsForActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetScaledProjectionBoundsForActor");

	UKSAimAssistComponent_GetScaledProjectionBoundsForActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistComponent.GetProjectionSpaceStackBoundary
// ()

void UKSAimAssistComponent::GetProjectionSpaceStackBoundary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetProjectionSpaceStackBoundary");

	UKSAimAssistComponent_GetProjectionSpaceStackBoundary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistComponent.GetPlayerOwner
// ()

void UKSAimAssistComponent::GetPlayerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetPlayerOwner");

	UKSAimAssistComponent_GetPlayerOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistComponent.GetAssistRingScreenSize
// ()

void UKSAimAssistComponent::GetAssistRingScreenSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetAssistRingScreenSize");

	UKSAimAssistComponent_GetAssistRingScreenSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistComponent.GetActorScreenBoundsForActor
// ()

void UKSAimAssistComponent::GetActorScreenBoundsForActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistComponent.GetActorScreenBoundsForActor");

	UKSAimAssistComponent_GetActorScreenBoundsForActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.UnregisterAsAimAssistTarget
// ()

void UKSAimAssistTargetInterface::UnregisterAsAimAssistTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.UnregisterAsAimAssistTarget");

	UKSAimAssistTargetInterface_UnregisterAsAimAssistTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.RegisterAsAimAssistTarget
// ()

void UKSAimAssistTargetInterface::RegisterAsAimAssistTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.RegisterAsAimAssistTarget");

	UKSAimAssistTargetInterface_RegisterAsAimAssistTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.GetHeadLocation
// ()

void UKSAimAssistTargetInterface::GetHeadLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.GetHeadLocation");

	UKSAimAssistTargetInterface_GetHeadLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.GetBodyLocation
// ()

void UKSAimAssistTargetInterface::GetBodyLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.GetBodyLocation");

	UKSAimAssistTargetInterface_GetBodyLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.GetAsActor
// ()

void UKSAimAssistTargetInterface::GetAsActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.GetAsActor");

	UKSAimAssistTargetInterface_GetAsActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAimAssistTargetInterface.CanBeConsideredForAimAssistRightNow
// ()

void UKSAimAssistTargetInterface::CanBeConsideredForAimAssistRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAimAssistTargetInterface.CanBeConsideredForAimAssistRightNow");

	UKSAimAssistTargetInterface_CanBeConsideredForAimAssistRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriority
// ()

void UKSAIObjectivePriorityComponent::UpdatePriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriority");

	UKSAIObjectivePriorityComponent_UpdatePriority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriorities
// ()

void UKSAIObjectivePriorityComponent::UpdatePriorities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.UpdatePriorities");

	UKSAIObjectivePriorityComponent_UpdatePriorities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.Setup
// ()

void UKSAIObjectivePriorityComponent::Setup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.Setup");

	UKSAIObjectivePriorityComponent_Setup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.InsertPriority
// ()

void UKSAIObjectivePriorityComponent::InsertPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.InsertPriority");

	UKSAIObjectivePriorityComponent_InsertPriority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.InsertPriorities
// ()

void UKSAIObjectivePriorityComponent::InsertPriorities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.InsertPriorities");

	UKSAIObjectivePriorityComponent_InsertPriorities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.GetPriority
// ()

void UKSAIObjectivePriorityComponent::GetPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.GetPriority");

	UKSAIObjectivePriorityComponent_GetPriority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.ClearPriorities
// ()

void UKSAIObjectivePriorityComponent::ClearPriorities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.ClearPriorities");

	UKSAIObjectivePriorityComponent_ClearPriorities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIObjectivePriorityComponent.ApplyPrioritiesFromDifficulty
// ()

void UKSAIObjectivePriorityComponent::ApplyPrioritiesFromDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIObjectivePriorityComponent.ApplyPrioritiesFromDifficulty");

	UKSAIObjectivePriorityComponent_ApplyPrioritiesFromDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAIPerceptionComponent.GetCurrentlyPerceivedStimuli
// ()

void UKSAIPerceptionComponent::GetCurrentlyPerceivedStimuli()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAIPerceptionComponent.GetCurrentlyPerceivedStimuli");

	UKSAIPerceptionComponent_GetCurrentlyPerceivedStimuli_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAISense_Objective.ReportObjectiveEvent
// ()

void UKSAISense_Objective::ReportObjectiveEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAISense_Objective.ReportObjectiveEvent");

	UKSAISense_Objective_ReportObjectiveEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StopAmbientSound
// ()

void AKSAkAmbientSound::StopAmbientSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StopAmbientSound");

	AKSAkAmbientSound_StopAmbientSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StopAllKSAmbientSounds
// ()

void AKSAkAmbientSound::StopAllKSAmbientSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StopAllKSAmbientSounds");

	AKSAkAmbientSound_StopAllKSAmbientSounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StartAmbientSound
// ()

void AKSAkAmbientSound::StartAmbientSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StartAmbientSound");

	AKSAkAmbientSound_StartAmbientSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAkAmbientSound.StartAllKSAmbientSounds
// ()

void AKSAkAmbientSound::StartAllKSAmbientSounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAkAmbientSound.StartAllKSAmbientSounds");

	AKSAkAmbientSound_StartAllKSAmbientSounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.ShouldShowViewedItemLabel
// ()

void AKSItemDrop::ShouldShowViewedItemLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.ShouldShowViewedItemLabel");

	AKSItemDrop_ShouldShowViewedItemLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.SetInactiveStencilValue
// ()

void AKSItemDrop::SetInactiveStencilValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.SetInactiveStencilValue");

	AKSItemDrop_SetInactiveStencilValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.SetActiveStencilValue
// ()

void AKSItemDrop::SetActiveStencilValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.SetActiveStencilValue");

	AKSItemDrop_SetActiveStencilValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.PlayDestroyedEffects
// ()

void AKSItemDrop::PlayDestroyedEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.PlayDestroyedEffects");

	AKSItemDrop_PlayDestroyedEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.Pickup
// ()

void AKSItemDrop::Pickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.Pickup");

	AKSItemDrop_Pickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OverridePickupFunction
// ()

void AKSItemDrop::OverridePickupFunction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OverridePickupFunction");

	AKSItemDrop_OverridePickupFunction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRootMeshDetached
// ()

void AKSItemDrop::OnRootMeshDetached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRootMeshDetached");

	AKSItemDrop_OnRootMeshDetached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRep_PendingPickupCharacter
// ()

void AKSItemDrop::OnRep_PendingPickupCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRep_PendingPickupCharacter");

	AKSItemDrop_OnRep_PendingPickupCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRep_ItemAsset
// ()

void AKSItemDrop::OnRep_ItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRep_ItemAsset");

	AKSItemDrop_OnRep_ItemAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.OnRep_DropHidePlayer
// ()

void AKSItemDrop::OnRep_DropHidePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.OnRep_DropHidePlayer");

	AKSItemDrop_OnRep_DropHidePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.GetPickupDelegate
// ()

void AKSItemDrop::GetPickupDelegate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetPickupDelegate");

	AKSItemDrop_GetPickupDelegate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.GetPendingPickupCharacter
// ()

void AKSItemDrop::GetPendingPickupCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetPendingPickupCharacter");

	AKSItemDrop_GetPendingPickupCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.GetLootSiteSpawnRotation
// ()

void AKSItemDrop::GetLootSiteSpawnRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetLootSiteSpawnRotation");

	AKSItemDrop_GetLootSiteSpawnRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.GetLabelInfoForSecondaryTitle
// ()

void AKSItemDrop::GetLabelInfoForSecondaryTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetLabelInfoForSecondaryTitle");

	AKSItemDrop_GetLabelInfoForSecondaryTitle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.GetLabelInfoForPrimaryTitle
// ()

void AKSItemDrop::GetLabelInfoForPrimaryTitle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetLabelInfoForPrimaryTitle");

	AKSItemDrop_GetLabelInfoForPrimaryTitle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.GetItemAsset
// ()

void AKSItemDrop::GetItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.GetItemAsset");

	AKSItemDrop_GetItemAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.EndOverlap
// ()

void AKSItemDrop::EndOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.EndOverlap");

	AKSItemDrop_EndOverlap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.CanBePickedUpByCharacterInternal
// ()

void AKSItemDrop::CanBePickedUpByCharacterInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.CanBePickedUpByCharacterInternal");

	AKSItemDrop_CanBePickedUpByCharacterInternal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.CanBePickedUpByCharacter
// ()

void AKSItemDrop::CanBePickedUpByCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.CanBePickedUpByCharacter");

	AKSItemDrop_CanBePickedUpByCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.CalculateRandomImpulse
// ()

void AKSItemDrop::CalculateRandomImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.CalculateRandomImpulse");

	AKSItemDrop_CalculateRandomImpulse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.BeginOverlap
// ()

void AKSItemDrop::BeginOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.BeginOverlap");

	AKSItemDrop_BeginOverlap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.AsyncItemGiveComplete
// ()

void AKSItemDrop::AsyncItemGiveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.AsyncItemGiveComplete");

	AKSItemDrop_AsyncItemGiveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.ApplyRandomImpulse
// ()

void AKSItemDrop::ApplyRandomImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.ApplyRandomImpulse");

	AKSItemDrop_ApplyRandomImpulse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemDrop.AllowPickup
// ()

void AKSItemDrop::AllowPickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemDrop.AllowPickup");

	AKSItemDrop_AllowPickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.SoftGiveToAsync
// ()

void UKSItem::SoftGiveToAsync()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.SoftGiveToAsync");

	UKSItem_SoftGiveToAsync_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.SoftCreateDropAsync
// ()

void UKSItem::SoftCreateDropAsync()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.SoftCreateDropAsync");

	UKSItem_SoftCreateDropAsync_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.InitNewlyCreatedItem
// ()

void UKSItem::InitNewlyCreatedItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.InitNewlyCreatedItem");

	UKSItem_InitNewlyCreatedItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GiveToAsync
// ()

void UKSItem::GiveToAsync()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GiveToAsync");

	UKSItem_GiveToAsync_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GiveTo
// ()

void UKSItem::GiveTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GiveTo");

	UKSItem_GiveTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetSpecialItemWidgetClass
// ()

void UKSItem::GetSpecialItemWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetSpecialItemWidgetClass");

	UKSItem_GetSpecialItemWidgetClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetPurchasePreviewIcon
// ()

void UKSItem::GetPurchasePreviewIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetPurchasePreviewIcon");

	UKSItem_GetPurchasePreviewIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetItemPrice
// ()

void UKSItem::GetItemPrice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemPrice");

	UKSItem_GetItemPrice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetItemDropClass
// ()

void UKSItem::GetItemDropClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemDropClass");

	UKSItem_GetItemDropClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetItemDisplayStats
// ()

void UKSItem::GetItemDisplayStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemDisplayStats");

	UKSItem_GetItemDisplayStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetItemCategoryText
// ()

void UKSItem::GetItemCategoryText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetItemCategoryText");

	UKSItem_GetItemCategoryText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.GetColorCode
// ()

void UKSItem::GetColorCode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.GetColorCode");

	UKSItem_GetColorCode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.CreateDropAsync
// ()

void UKSItem::CreateDropAsync()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CreateDropAsync");

	UKSItem_CreateDropAsync_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.CreateDrop
// ()

void UKSItem::CreateDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CreateDrop");

	UKSItem_CreateDrop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.CanBePickedUpByCharacter
// ()

void UKSItem::CanBePickedUpByCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CanBePickedUpByCharacter");

	UKSItem_CanBePickedUpByCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem.CanBePickedUpBy
// ()

void UKSItem::CanBePickedUpBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem.CanBePickedUpBy");

	UKSItem_CanBePickedUpBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAmmoDropAsset.GetAmmoType
// ()

void UKSAmmoDropAsset::GetAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAmmoDropAsset.GetAmmoType");

	UKSAmmoDropAsset_GetAmmoType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimationAuditComponent.AnimAuditStop
// ()

void UKSAnimationAuditComponent::AnimAuditStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimationAuditComponent.AnimAuditStop");

	UKSAnimationAuditComponent_AnimAuditStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimationAuditComponent.AnimAuditStart
// ()

void UKSAnimationAuditComponent::AnimAuditStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimationAuditComponent.AnimAuditStart");

	UKSAnimationAuditComponent_AnimAuditStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimationAuditComponent.AnimAuditClear
// ()

void UKSAnimationAuditComponent::AnimAuditClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimationAuditComponent.AnimAuditClear");

	UKSAnimationAuditComponent_AnimAuditClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimInstance.SetLobbyState
// ()

void UKSAnimInstance::SetLobbyState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimInstance.SetLobbyState");

	UKSAnimInstance_SetLobbyState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnimInstance.Montage_JumpToRandomSection
// ()

void UKSAnimInstance::Montage_JumpToRandomSection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnimInstance.Montage_JumpToRandomSection");

	UKSAnimInstance_Montage_JumpToRandomSection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.ShouldPlayTimeAnnouncementFromGroup
// ()

void AKSAnnouncer::ShouldPlayTimeAnnouncementFromGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.ShouldPlayTimeAnnouncementFromGroup");

	AKSAnnouncer_ShouldPlayTimeAnnouncementFromGroup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.QueueAnnouncementStruct
// ()

void AKSAnnouncer::QueueAnnouncementStruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.QueueAnnouncementStruct");

	AKSAnnouncer_QueueAnnouncementStruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.QueueAnnouncement
// ()

void AKSAnnouncer::QueueAnnouncement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.QueueAnnouncement");

	AKSAnnouncer_QueueAnnouncement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.ProcessTimeAnnouncementList
// ()

void AKSAnnouncer::ProcessTimeAnnouncementList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.ProcessTimeAnnouncementList");

	AKSAnnouncer_ProcessTimeAnnouncementList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.ProcessQueue
// ()

void AKSAnnouncer::ProcessQueue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.ProcessQueue");

	AKSAnnouncer_ProcessQueue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnObjectiveTimerZero
// ()

void AKSAnnouncer::OnObjectiveTimerZero()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnObjectiveTimerZero");

	AKSAnnouncer_OnObjectiveTimerZero_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnMatchTimerUpdate
// ()

void AKSAnnouncer::OnMatchTimerUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnMatchTimerUpdate");

	AKSAnnouncer_OnMatchTimerUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnLockoutComplete
// ()

void AKSAnnouncer::OnLockoutComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnLockoutComplete");

	AKSAnnouncer_OnLockoutComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnLocalViewTargetMovementModeChanged
// ()

void AKSAnnouncer::OnLocalViewTargetMovementModeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnLocalViewTargetMovementModeChanged");

	AKSAnnouncer_OnLocalViewTargetMovementModeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnLocalViewTargetChanged
// ()

void AKSAnnouncer::OnLocalViewTargetChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnLocalViewTargetChanged");

	AKSAnnouncer_OnLocalViewTargetChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.OnControlPointTimerUpdate
// ()

void AKSAnnouncer::OnControlPointTimerUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.OnControlPointTimerUpdate");

	AKSAnnouncer_OnControlPointTimerUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.LocalPlayerControllerDestroyed
// ()

void AKSAnnouncer::LocalPlayerControllerDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.LocalPlayerControllerDestroyed");

	AKSAnnouncer_LocalPlayerControllerDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.GetTeamOverrideForAnnouncementGroup
// ()

void AKSAnnouncer::GetTeamOverrideForAnnouncementGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.GetTeamOverrideForAnnouncementGroup");

	AKSAnnouncer_GetTeamOverrideForAnnouncementGroup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.GetPlayerController
// ()

void AKSAnnouncer::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.GetPlayerController");

	AKSAnnouncer_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.EventQueueInGame
// ()

void AKSAnnouncer::EventQueueInGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.EventQueueInGame");

	AKSAnnouncer_EventQueueInGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.EventLocalPlayerControllerDestroyed
// ()

void AKSAnnouncer::EventLocalPlayerControllerDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.EventLocalPlayerControllerDestroyed");

	AKSAnnouncer_EventLocalPlayerControllerDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAnnouncer.AnnouncePlayerDeath
// ()

void AKSAnnouncer::AnnouncePlayerDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAnnouncer.AnnouncePlayerDeath");

	AKSAnnouncer_AnnouncePlayerDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSApparelAsset.GetSlot
// ()

void UKSApparelAsset::GetSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSApparelAsset.GetSlot");

	UKSApparelAsset_GetSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.Unequip
// ()

void AKSEquipment::Unequip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.Unequip");

	AKSEquipment_Unequip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.SetEquipPoint
// ()

void AKSEquipment::SetEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.SetEquipPoint");

	AKSEquipment_SetEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.OnUnequipped
// ()

void AKSEquipment::OnUnequipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnUnequipped");

	AKSEquipment_OnUnequipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.OnRep_EquipPoint
// ()

void AKSEquipment::OnRep_EquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnRep_EquipPoint");

	AKSEquipment_OnRep_EquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.OnRep_EquipmentId
// ()

void AKSEquipment::OnRep_EquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnRep_EquipmentId");

	AKSEquipment_OnRep_EquipmentId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.OnEquipped
// ()

void AKSEquipment::OnEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.OnEquipped");

	AKSEquipment_OnEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.IsInitialized
// ()

void AKSEquipment::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.IsInitialized");

	AKSEquipment_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.IsInAction
// ()

void AKSEquipment::IsInAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.IsInAction");

	AKSEquipment_IsInAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.IsEquipped
// ()

void AKSEquipment::IsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.IsEquipped");

	AKSEquipment_IsEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.GetKSItem
// ()

void AKSEquipment::GetKSItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetKSItem");

	AKSEquipment_GetKSItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.GetGiveParameters
// ()

void AKSEquipment::GetGiveParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetGiveParameters");

	AKSEquipment_GetGiveParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.GetEquipPoint
// ()

void AKSEquipment::GetEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetEquipPoint");

	AKSEquipment_GetEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.GetEquipmentId
// ()

void AKSEquipment::GetEquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetEquipmentId");

	AKSEquipment_GetEquipmentId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.GetCosmeticComponent
// ()

void AKSEquipment::GetCosmeticComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.GetCosmeticComponent");

	AKSEquipment_GetCosmeticComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.EquipNoPoint
// ()

void AKSEquipment::EquipNoPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.EquipNoPoint");

	AKSEquipment_EquipNoPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipment.Drop
// ()

void AKSEquipment::Drop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipment.Drop");

	AKSEquipment_Drop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.UpdateHiddenInteractable
// ()

void AKSWeapon::UpdateHiddenInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.UpdateHiddenInteractable");

	AKSWeapon_UpdateHiddenInteractable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopFireOnRelease
// ()

void AKSWeapon::StopFireOnRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopFireOnRelease");

	AKSWeapon_StopFireOnRelease_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopFire
// ()

void AKSWeapon::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopFire");

	AKSWeapon_StopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopDefaultAim
// ()

void AKSWeapon::StopDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopDefaultAim");

	AKSWeapon_StopDefaultAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopAltFire
// ()

void AKSWeapon::StopAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopAltFire");

	AKSWeapon_StopAltFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopAimOverShoulder
// ()

void AKSWeapon::StopAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopAimOverShoulder");

	AKSWeapon_StopAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StopAimDownSights
// ()

void AKSWeapon::StopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StopAimDownSights");

	AKSWeapon_StopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StateRequestTimeoutExpired
// ()

void AKSWeapon::StateRequestTimeoutExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StateRequestTimeoutExpired");

	AKSWeapon_StateRequestTimeoutExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartRetrieving
// ()

void AKSWeapon::StartRetrieving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartRetrieving");

	AKSWeapon_StartRetrieving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartReload
// ()

void AKSWeapon::StartReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartReload");

	AKSWeapon_StartReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartHolstering
// ()

void AKSWeapon::StartHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartHolstering");

	AKSWeapon_StartHolstering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartFire
// ()

void AKSWeapon::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartFire");

	AKSWeapon_StartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartDefaultAim
// ()

void AKSWeapon::StartDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartDefaultAim");

	AKSWeapon_StartDefaultAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartAltFire
// ()

void AKSWeapon::StartAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartAltFire");

	AKSWeapon_StartAltFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartAimOverShoulder
// ()

void AKSWeapon::StartAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartAimOverShoulder");

	AKSWeapon_StartAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.StartAimDownSights
// ()

void AKSWeapon::StartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.StartAimDownSights");

	AKSWeapon_StartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.SimulateConsumeAmmo
// ()

void AKSWeapon::SimulateConsumeAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.SimulateConsumeAmmo");

	AKSWeapon_SimulateConsumeAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ShouldStartReloadInterruptSprinting
// ()

void AKSWeapon::ShouldStartReloadInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartReloadInterruptSprinting");

	AKSWeapon_ShouldStartReloadInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ShouldStartHolsterInterruptSprinting
// ()

void AKSWeapon::ShouldStartHolsterInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartHolsterInterruptSprinting");

	AKSWeapon_ShouldStartHolsterInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ShouldStartFireInterruptSprinting
// ()

void AKSWeapon::ShouldStartFireInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartFireInterruptSprinting");

	AKSWeapon_ShouldStartFireInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ShouldStartFireInterruptAimDownSights
// ()

void AKSWeapon::ShouldStartFireInterruptAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldStartFireInterruptAimDownSights");

	AKSWeapon_ShouldStartFireInterruptAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ShouldEACRecordAsMeleeAttackNow
// ()

void AKSWeapon::ShouldEACRecordAsMeleeAttackNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldEACRecordAsMeleeAttackNow");

	AKSWeapon_ShouldEACRecordAsMeleeAttackNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ShouldConsumeAmmoDirectlyFromInventory
// ()

void AKSWeapon::ShouldConsumeAmmoDirectlyFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldConsumeAmmoDirectlyFromInventory");

	AKSWeapon_ShouldConsumeAmmoDirectlyFromInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ShouldBeRemovedWhenExhausted
// ()

void AKSWeapon::ShouldBeRemovedWhenExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ShouldBeRemovedWhenExhausted");

	AKSWeapon_ShouldBeRemovedWhenExhausted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.SetAutoSwapOutWeaponId
// ()

void AKSWeapon::SetAutoSwapOutWeaponId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.SetAutoSwapOutWeaponId");

	AKSWeapon_SetAutoSwapOutWeaponId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerRetrieveActiveWeaponCompressed
// ()

void AKSWeapon::ServerRetrieveActiveWeaponCompressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerRetrieveActiveWeaponCompressed");

	AKSWeapon_ServerRetrieveActiveWeaponCompressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerRetrieveActiveWeapon
// ()

void AKSWeapon::ServerRetrieveActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerRetrieveActiveWeapon");

	AKSWeapon_ServerRetrieveActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerRequestStateChangeCompressed
// ()

void AKSWeapon::ServerRequestStateChangeCompressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerRequestStateChangeCompressed");

	AKSWeapon_ServerRequestStateChangeCompressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerRequestStateChange
// ()

void AKSWeapon::ServerRequestStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerRequestStateChange");

	AKSWeapon_ServerRequestStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerPostReloadCompressed
// ()

void AKSWeapon::ServerPostReloadCompressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerPostReloadCompressed");

	AKSWeapon_ServerPostReloadCompressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerPostReload
// ()

void AKSWeapon::ServerPostReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerPostReload");

	AKSWeapon_ServerPostReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerCookReleasedCompressed
// ()

void AKSWeapon::ServerCookReleasedCompressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerCookReleasedCompressed");

	AKSWeapon_ServerCookReleasedCompressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ServerCookReleased
// ()

void AKSWeapon::ServerCookReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ServerCookReleased");

	AKSWeapon_ServerCookReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.Reload
// ()

void AKSWeapon::Reload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.Reload");

	AKSWeapon_Reload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ProcessHits
// ()

void AKSWeapon::ProcessHits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ProcessHits");

	AKSWeapon_ProcessHits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.PreLoadAmmo
// ()

void AKSWeapon::PreLoadAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.PreLoadAmmo");

	AKSWeapon_PreLoadAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsTransitioningAimState
// ()

void AKSWeapon::OwnerIsTransitioningAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsTransitioningAimState");

	AKSWeapon_OwnerIsTransitioningAimState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsSwimming
// ()

void AKSWeapon::OwnerIsSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsSwimming");

	AKSWeapon_OwnerIsSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsSprinting
// ()

void AKSWeapon::OwnerIsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsSprinting");

	AKSWeapon_OwnerIsSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsReloadingAnyWeapon
// ()

void AKSWeapon::OwnerIsReloadingAnyWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsReloadingAnyWeapon");

	AKSWeapon_OwnerIsReloadingAnyWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsMovingOnGround
// ()

void AKSWeapon::OwnerIsMovingOnGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsMovingOnGround");

	AKSWeapon_OwnerIsMovingOnGround_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsLocallyViewed
// ()

void AKSWeapon::OwnerIsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsLocallyViewed");

	AKSWeapon_OwnerIsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsFreeFalling
// ()

void AKSWeapon::OwnerIsFreeFalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsFreeFalling");

	AKSWeapon_OwnerIsFreeFalling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsFiringMeleeWeapon
// ()

void AKSWeapon::OwnerIsFiringMeleeWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsFiringMeleeWeapon");

	AKSWeapon_OwnerIsFiringMeleeWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsDowned
// ()

void AKSWeapon::OwnerIsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsDowned");

	AKSWeapon_OwnerIsDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerIsAlive
// ()

void AKSWeapon::OwnerIsAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerIsAlive");

	AKSWeapon_OwnerIsAlive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OwnerHasAmmo
// ()

void AKSWeapon::OwnerHasAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OwnerHasAmmo");

	AKSWeapon_OwnerHasAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartRetrieving
// ()

void AKSWeapon::OnStartRetrieving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartRetrieving");

	AKSWeapon_OnStartRetrieving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartReloadCooldown
// ()

void AKSWeapon::OnStartReloadCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartReloadCooldown");

	AKSWeapon_OnStartReloadCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartPreReload
// ()

void AKSWeapon::OnStartPreReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPreReload");

	AKSWeapon_OnStartPreReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartPreFire
// ()

void AKSWeapon::OnStartPreFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPreFire");

	AKSWeapon_OnStartPreFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartPostReload
// ()

void AKSWeapon::OnStartPostReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPostReload");

	AKSWeapon_OnStartPostReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartPostFire
// ()

void AKSWeapon::OnStartPostFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartPostFire");

	AKSWeapon_OnStartPostFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartInactive
// ()

void AKSWeapon::OnStartInactive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartInactive");

	AKSWeapon_OnStartInactive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartHolstering
// ()

void AKSWeapon::OnStartHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartHolstering");

	AKSWeapon_OnStartHolstering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartCooldown
// ()

void AKSWeapon::OnStartCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartCooldown");

	AKSWeapon_OnStartCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnStartBuildup
// ()

void AKSWeapon::OnStartBuildup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnStartBuildup");

	AKSWeapon_OnStartBuildup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_WeaponState
// ()

void AKSWeapon::OnRep_WeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_WeaponState");

	AKSWeapon_OnRep_WeaponState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_WeaponAsset
// ()

void AKSWeapon::OnRep_WeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_WeaponAsset");

	AKSWeapon_OnRep_WeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_AuxiliaryWeaponInfo
// ()

void AKSWeapon::OnRep_AuxiliaryWeaponInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_AuxiliaryWeaponInfo");

	AKSWeapon_OnRep_AuxiliaryWeaponInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_AutoSwapOutWeaponId
// ()

void AKSWeapon::OnRep_AutoSwapOutWeaponId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_AutoSwapOutWeaponId");

	AKSWeapon_OnRep_AutoSwapOutWeaponId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnRep_Ammo
// ()

void AKSWeapon::OnRep_Ammo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnRep_Ammo");

	AKSWeapon_OnRep_Ammo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnPostMantleLockoutEnd
// ()

void AKSWeapon::OnPostMantleLockoutEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnPostMantleLockoutEnd");

	AKSWeapon_OnPostMantleLockoutEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnOwnerMovementModeChangedNative
// ()

void AKSWeapon::OnOwnerMovementModeChangedNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnOwnerMovementModeChangedNative");

	AKSWeapon_OnOwnerMovementModeChangedNative_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnOwnerMovementModeChanged
// ()

void AKSWeapon::OnOwnerMovementModeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnOwnerMovementModeChanged");

	AKSWeapon_OnOwnerMovementModeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndRetrieving
// ()

void AKSWeapon::OnEndRetrieving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndRetrieving");

	AKSWeapon_OnEndRetrieving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndReloadCooldown
// ()

void AKSWeapon::OnEndReloadCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndReloadCooldown");

	AKSWeapon_OnEndReloadCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPreReload
// ()

void AKSWeapon::OnEndPreReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPreReload");

	AKSWeapon_OnEndPreReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPreFire
// ()

void AKSWeapon::OnEndPreFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPreFire");

	AKSWeapon_OnEndPreFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPostReload
// ()

void AKSWeapon::OnEndPostReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPostReload");

	AKSWeapon_OnEndPostReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndPostFire
// ()

void AKSWeapon::OnEndPostFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndPostFire");

	AKSWeapon_OnEndPostFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndInactive
// ()

void AKSWeapon::OnEndInactive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndInactive");

	AKSWeapon_OnEndInactive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndIdleState
// ()

void AKSWeapon::OnEndIdleState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndIdleState");

	AKSWeapon_OnEndIdleState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndHolstering
// ()

void AKSWeapon::OnEndHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndHolstering");

	AKSWeapon_OnEndHolstering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndCooldown
// ()

void AKSWeapon::OnEndCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndCooldown");

	AKSWeapon_OnEndCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnEndBuildup
// ()

void AKSWeapon::OnEndBuildup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnEndBuildup");

	AKSWeapon_OnEndBuildup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.OnBeginIdleState
// ()

void AKSWeapon::OnBeginIdleState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.OnBeginIdleState");

	AKSWeapon_OnBeginIdleState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ModifyDamageDealt
// ()

void AKSWeapon::ModifyDamageDealt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ModifyDamageDealt");

	AKSWeapon_ModifyDamageDealt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsRetrieving
// ()

void AKSWeapon::IsRetrieving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsRetrieving");

	AKSWeapon_IsRetrieving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsReloading
// ()

void AKSWeapon::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsReloading");

	AKSWeapon_IsReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsInSprintRecovery
// ()

void AKSWeapon::IsInSprintRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInSprintRecovery");

	AKSWeapon_IsInSprintRecovery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsInReloadingLoop
// ()

void AKSWeapon::IsInReloadingLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInReloadingLoop");

	AKSWeapon_IsInReloadingLoop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsInFiringLoop
// ()

void AKSWeapon::IsInFiringLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInFiringLoop");

	AKSWeapon_IsInFiringLoop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsInDodgeRollRecovery
// ()

void AKSWeapon::IsInDodgeRollRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsInDodgeRollRecovery");

	AKSWeapon_IsInDodgeRollRecovery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsHolstering
// ()

void AKSWeapon::IsHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsHolstering");

	AKSWeapon_IsHolstering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsFiring
// ()

void AKSWeapon::IsFiring()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsFiring");

	AKSWeapon_IsFiring_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsExhausted
// ()

void AKSWeapon::IsExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsExhausted");

	AKSWeapon_IsExhausted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsEquippedMelee
// ()

void AKSWeapon::IsEquippedMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsEquippedMelee");

	AKSWeapon_IsEquippedMelee_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsEquippedMainWeapon
// ()

void AKSWeapon::IsEquippedMainWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsEquippedMainWeapon");

	AKSWeapon_IsEquippedMainWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsEquippedGrenade
// ()

void AKSWeapon::IsEquippedGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsEquippedGrenade");

	AKSWeapon_IsEquippedGrenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsClipFull
// ()

void AKSWeapon::IsClipFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsClipFull");

	AKSWeapon_IsClipFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsClipEmpty
// ()

void AKSWeapon::IsClipEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsClipEmpty");

	AKSWeapon_IsClipEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.IsActiveWeapon
// ()

void AKSWeapon::IsActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.IsActiveWeapon");

	AKSWeapon_IsActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.InstantReload
// ()

void AKSWeapon::InstantReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.InstantReload");

	AKSWeapon_InstantReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.HasAttachment
// ()

void AKSWeapon::HasAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.HasAttachment");

	AKSWeapon_HasAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.HandleExhausted
// ()

void AKSWeapon::HandleExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.HandleExhausted");

	AKSWeapon_HandleExhausted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetWeaponState
// ()

void AKSWeapon::GetWeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWeaponState");

	AKSWeapon_GetWeaponState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetWeaponComponent
// ()

void AKSWeapon::GetWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWeaponComponent");

	AKSWeapon_GetWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetWeaponAsset
// ()

void AKSWeapon::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWeaponAsset");

	AKSWeapon_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetWalkSpeedModifier
// ()

void AKSWeapon::GetWalkSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetWalkSpeedModifier");

	AKSWeapon_GetWalkSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetReloadCooldownTime
// ()

void AKSWeapon::GetReloadCooldownTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetReloadCooldownTime");

	AKSWeapon_GetReloadCooldownTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetPreReloadTime
// ()

void AKSWeapon::GetPreReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetPreReloadTime");

	AKSWeapon_GetPreReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetPostReloadTime
// ()

void AKSWeapon::GetPostReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetPostReloadTime");

	AKSWeapon_GetPostReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetMovementAccuracyPenalty
// ()

void AKSWeapon::GetMovementAccuracyPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetMovementAccuracyPenalty");

	AKSWeapon_GetMovementAccuracyPenalty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetMaxFiringAccuracyLoss
// ()

void AKSWeapon::GetMaxFiringAccuracyLoss()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetMaxFiringAccuracyLoss");

	AKSWeapon_GetMaxFiringAccuracyLoss_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetLimbDamageAmount
// ()

void AKSWeapon::GetLimbDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetLimbDamageAmount");

	AKSWeapon_GetLimbDamageAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetKSPlayerState
// ()

void AKSWeapon::GetKSPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetKSPlayerState");

	AKSWeapon_GetKSPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetInAirAccuracyModifier
// ()

void AKSWeapon::GetInAirAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetInAirAccuracyModifier");

	AKSWeapon_GetInAirAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetHiddenInteractable
// ()

void AKSWeapon::GetHiddenInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetHiddenInteractable");

	AKSWeapon_GetHiddenInteractable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetHeadDamageAmount
// ()

void AKSWeapon::GetHeadDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetHeadDamageAmount");

	AKSWeapon_GetHeadDamageAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetDamageInstigator
// ()

void AKSWeapon::GetDamageInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetDamageInstigator");

	AKSWeapon_GetDamageInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetDamageFalloffRangeScaler
// ()

void AKSWeapon::GetDamageFalloffRangeScaler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetDamageFalloffRangeScaler");

	AKSWeapon_GetDamageFalloffRangeScaler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetCrouchAccuracyModifier
// ()

void AKSWeapon::GetCrouchAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetCrouchAccuracyModifier");

	AKSWeapon_GetCrouchAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetClipSize
// ()

void AKSWeapon::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetClipSize");

	AKSWeapon_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetCharacterOwner
// ()

void AKSWeapon::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetCharacterOwner");

	AKSWeapon_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetCanUseOffGround
// ()

void AKSWeapon::GetCanUseOffGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetCanUseOffGround");

	AKSWeapon_GetCanUseOffGround_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetBaseDamageAmount
// ()

void AKSWeapon::GetBaseDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetBaseDamageAmount");

	AKSWeapon_GetBaseDamageAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetBaseAccuracy
// ()

void AKSWeapon::GetBaseAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetBaseAccuracy");

	AKSWeapon_GetBaseAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAttachments
// ()

void AKSWeapon::GetAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAttachments");

	AKSWeapon_GetAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAttachmentInstances
// ()

void AKSWeapon::GetAttachmentInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAttachmentInstances");

	AKSWeapon_GetAttachmentInstances_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAttachment
// ()

void AKSWeapon::GetAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAttachment");

	AKSWeapon_GetAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAmmoType
// ()

void AKSWeapon::GetAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAmmoType");

	AKSWeapon_GetAmmoType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAmmoInOwnerInventory
// ()

void AKSWeapon::GetAmmoInOwnerInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAmmoInOwnerInventory");

	AKSWeapon_GetAmmoInOwnerInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAmmoInClip
// ()

void AKSWeapon::GetAmmoInClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAmmoInClip");

	AKSWeapon_GetAmmoInClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAimOverShoulderAccuracyModifier
// ()

void AKSWeapon::GetAimOverShoulderAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAimOverShoulderAccuracyModifier");

	AKSWeapon_GetAimOverShoulderAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAimDownSightsFOV
// ()

void AKSWeapon::GetAimDownSightsFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAimDownSightsFOV");

	AKSWeapon_GetAimDownSightsFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAccuracyReturnRate
// ()

void AKSWeapon::GetAccuracyReturnRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAccuracyReturnRate");

	AKSWeapon_GetAccuracyReturnRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAccuracyReturnDelay
// ()

void AKSWeapon::GetAccuracyReturnDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAccuracyReturnDelay");

	AKSWeapon_GetAccuracyReturnDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.GetAccuracyLossPerShot
// ()

void AKSWeapon::GetAccuracyLossPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.GetAccuracyLossPerShot");

	AKSWeapon_GetAccuracyLossPerShot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.FireWeapon
// ()

void AKSWeapon::FireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.FireWeapon");

	AKSWeapon_FireWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.EndState
// ()

void AKSWeapon::EndState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.EndState");

	AKSWeapon_EndState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ConsumePendingFire
// ()

void AKSWeapon::ConsumePendingFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ConsumePendingFire");

	AKSWeapon_ConsumePendingFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ConsumeAmmo
// ()

void AKSWeapon::ConsumeAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ConsumeAmmo");

	AKSWeapon_ConsumeAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientStateChangeRejected
// ()

void AKSWeapon::ClientStateChangeRejected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientStateChangeRejected");

	AKSWeapon_ClientStateChangeRejected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientStateChangeAccepted
// ()

void AKSWeapon::ClientStateChangeAccepted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientStateChangeAccepted");

	AKSWeapon_ClientStateChangeAccepted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientRecoverSeedMisalignment
// ()

void AKSWeapon::ClientRecoverSeedMisalignment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientRecoverSeedMisalignment");

	AKSWeapon_ClientRecoverSeedMisalignment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientNotifyRecoveryFinish
// ()

void AKSWeapon::ClientNotifyRecoveryFinish()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientNotifyRecoveryFinish");

	AKSWeapon_ClientNotifyRecoveryFinish_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientForceUpdateAmmoInClip
// ()

void AKSWeapon::ClientForceUpdateAmmoInClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientForceUpdateAmmoInClip");

	AKSWeapon_ClientForceUpdateAmmoInClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientForceIdleFromFire
// ()

void AKSWeapon::ClientForceIdleFromFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientForceIdleFromFire");

	AKSWeapon_ClientForceIdleFromFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientFixLastReload
// ()

void AKSWeapon::ClientFixLastReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientFixLastReload");

	AKSWeapon_ClientFixLastReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.ClientFireWeaponRejected
// ()

void AKSWeapon::ClientFireWeaponRejected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.ClientFireWeaponRejected");

	AKSWeapon_ClientFireWeaponRejected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CheckExhausted
// ()

void AKSWeapon::CheckExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CheckExhausted");

	AKSWeapon_CheckExhausted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CheckDeathShotForgiveness
// ()

void AKSWeapon::CheckDeathShotForgiveness()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CheckDeathShotForgiveness");

	AKSWeapon_CheckDeathShotForgiveness_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanUseAnAimStateNow
// ()

void AKSWeapon::CanUseAnAimStateNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanUseAnAimStateNow");

	AKSWeapon_CanUseAnAimStateNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanToggleOutOfAimDownSightsNow
// ()

void AKSWeapon::CanToggleOutOfAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanToggleOutOfAimDownSightsNow");

	AKSWeapon_CanToggleOutOfAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanToggleIntoAimDownSightsNow
// ()

void AKSWeapon::CanToggleIntoAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanToggleIntoAimDownSightsNow");

	AKSWeapon_CanToggleIntoAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanStartReloadNow
// ()

void AKSWeapon::CanStartReloadNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanStartReloadNow");

	AKSWeapon_CanStartReloadNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanStartFireNow
// ()

void AKSWeapon::CanStartFireNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanStartFireNow");

	AKSWeapon_CanStartFireNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanRetrieveNow
// ()

void AKSWeapon::CanRetrieveNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanRetrieveNow");

	AKSWeapon_CanRetrieveNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanReloadNowCommon
// ()

void AKSWeapon::CanReloadNowCommon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanReloadNowCommon");

	AKSWeapon_CanReloadNowCommon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanRefireNow
// ()

void AKSWeapon::CanRefireNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanRefireNow");

	AKSWeapon_CanRefireNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanReceiveAttachment
// ()

void AKSWeapon::CanReceiveAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanReceiveAttachment");

	AKSWeapon_CanReceiveAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanInteractWith
// ()

void AKSWeapon::CanInteractWith()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanInteractWith");

	AKSWeapon_CanInteractWith_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanHolsterNow
// ()

void AKSWeapon::CanHolsterNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanHolsterNow");

	AKSWeapon_CanHolsterNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanFireNowCommon
// ()

void AKSWeapon::CanFireNowCommon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanFireNowCommon");

	AKSWeapon_CanFireNowCommon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanEverReload
// ()

void AKSWeapon::CanEverReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverReload");

	AKSWeapon_CanEverReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanEverAimOverShoulder
// ()

void AKSWeapon::CanEverAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverAimOverShoulder");

	AKSWeapon_CanEverAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanEverAimDownSights
// ()

void AKSWeapon::CanEverAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverAimDownSights");

	AKSWeapon_CanEverAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanEverAimAlternate
// ()

void AKSWeapon::CanEverAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanEverAimAlternate");

	AKSWeapon_CanEverAimAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanDropNow
// ()

void AKSWeapon::CanDropNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanDropNow");

	AKSWeapon_CanDropNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanCookNow
// ()

void AKSWeapon::CanCookNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanCookNow");

	AKSWeapon_CanCookNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanContinueReloadNow
// ()

void AKSWeapon::CanContinueReloadNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanContinueReloadNow");

	AKSWeapon_CanContinueReloadNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CancelHolstering
// ()

void AKSWeapon::CancelHolstering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CancelHolstering");

	AKSWeapon_CancelHolstering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanBeSwappedTo
// ()

void AKSWeapon::CanBeSwappedTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanBeSwappedTo");

	AKSWeapon_CanBeSwappedTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanBeSwappedFrom
// ()

void AKSWeapon::CanBeSwappedFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanBeSwappedFrom");

	AKSWeapon_CanBeSwappedFrom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CanBeInterruptedNow
// ()

void AKSWeapon::CanBeInterruptedNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CanBeInterruptedNow");

	AKSWeapon_CanBeInterruptedNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CalculateDamageFromHitInfo
// ()

void AKSWeapon::CalculateDamageFromHitInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CalculateDamageFromHitInfo");

	AKSWeapon_CalculateDamageFromHitInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CalculateDamageFalloffFromHitResults
// ()

void AKSWeapon::CalculateDamageFalloffFromHitResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CalculateDamageFalloffFromHitResults");

	AKSWeapon_CalculateDamageFalloffFromHitResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.CalculateDamageFalloffFromDistance
// ()

void AKSWeapon::CalculateDamageFalloffFromDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.CalculateDamageFalloffFromDistance");

	AKSWeapon_CalculateDamageFalloffFromDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.BeginState
// ()

void AKSWeapon::BeginState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.BeginState");

	AKSWeapon_BeginState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AltFireInitiated
// ()

void AKSWeapon::AltFireInitiated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AltFireInitiated");

	AKSWeapon_AltFireInitiated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AltFireEnded
// ()

void AKSWeapon::AltFireEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AltFireEnded");

	AKSWeapon_AltFireEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AllowZiplineRightNow
// ()

void AKSWeapon::AllowZiplineRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AllowZiplineRightNow");

	AKSWeapon_AllowZiplineRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AllowSprintingRightNow
// ()

void AKSWeapon::AllowSprintingRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AllowSprintingRightNow");

	AKSWeapon_AllowSprintingRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AllowDodgeRollRightNow
// ()

void AKSWeapon::AllowDodgeRollRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AllowDodgeRollRightNow");

	AKSWeapon_AllowDodgeRollRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AimTransitionComplete
// ()

void AKSWeapon::AimTransitionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AimTransitionComplete");

	AKSWeapon_AimTransitionComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AbortReload
// ()

void AKSWeapon::AbortReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AbortReload");

	AKSWeapon_AbortReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon.AbortFire
// ()

void AKSWeapon::AbortFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon.AbortFire");

	AKSWeapon_AbortFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.ShouldDestroyOnBreak
// ()

void AKSArmor::ShouldDestroyOnBreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.ShouldDestroyOnBreak");

	AKSArmor_ShouldDestroyOnBreak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.RepairArmor
// ()

void AKSArmor::RepairArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.RepairArmor");

	AKSArmor_RepairArmor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.IsRepairableArmor
// ()

void AKSArmor::IsRepairableArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.IsRepairableArmor");

	AKSArmor_IsRepairableArmor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.IsArmorBeingRepaired
// ()

void AKSArmor::IsArmorBeingRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.IsArmorBeingRepaired");

	AKSArmor_IsArmorBeingRepaired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.GetMaxDurability
// ()

void AKSArmor::GetMaxDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.GetMaxDurability");

	AKSArmor_GetMaxDurability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.GetDurability
// ()

void AKSArmor::GetDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.GetDurability");

	AKSArmor_GetDurability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.GetArmorAsset
// ()

void AKSArmor::GetArmorAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.GetArmorAsset");

	AKSArmor_GetArmorAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.CanArmorBeRepaired
// ()

void AKSArmor::CanArmorBeRepaired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.CanArmorBeRepaired");

	AKSArmor_CanArmorBeRepaired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.CanAbsorbDamageType
// ()

void AKSArmor::CanAbsorbDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.CanAbsorbDamageType");

	AKSArmor_CanAbsorbDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.CalcAbsorbRadialDamage
// ()

void AKSArmor::CalcAbsorbRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.CalcAbsorbRadialDamage");

	AKSArmor_CalcAbsorbRadialDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmor.CalcAbsorbPointDamage
// ()

void AKSArmor::CalcAbsorbPointDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmor.CalcAbsorbPointDamage");

	AKSArmor_CalcAbsorbPointDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.TryToEquipToCharacterNoPointGiven
// ()

void UKSWeaponAsset::TryToEquipToCharacterNoPointGiven()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.TryToEquipToCharacterNoPointGiven");

	UKSWeaponAsset_TryToEquipToCharacterNoPointGiven_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.TryToEquipToCharacter
// ()

void UKSWeaponAsset::TryToEquipToCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.TryToEquipToCharacter");

	UKSWeaponAsset_TryToEquipToCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldUseBuildupForCooking
// ()

void UKSWeaponAsset::ShouldUseBuildupForCooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldUseBuildupForCooking");

	UKSWeaponAsset_ShouldUseBuildupForCooking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldStartReloadInterruptSprinting
// ()

void UKSWeaponAsset::ShouldStartReloadInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldStartReloadInterruptSprinting");

	UKSWeaponAsset_ShouldStartReloadInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldStartHolsterInterruptSprinting
// ()

void UKSWeaponAsset::ShouldStartHolsterInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldStartHolsterInterruptSprinting");

	UKSWeaponAsset_ShouldStartHolsterInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldStartFireInterruptSprinting
// ()

void UKSWeaponAsset::ShouldStartFireInterruptSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldStartFireInterruptSprinting");

	UKSWeaponAsset_ShouldStartFireInterruptSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldPreventDodgeRollDuringFire
// ()

void UKSWeaponAsset::ShouldPreventDodgeRollDuringFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldPreventDodgeRollDuringFire");

	UKSWeaponAsset_ShouldPreventDodgeRollDuringFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldPrefireOverlapSkipToFire
// ()

void UKSWeaponAsset::ShouldPrefireOverlapSkipToFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldPrefireOverlapSkipToFire");

	UKSWeaponAsset_ShouldPrefireOverlapSkipToFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldMuteEmptyClipWarnings
// ()

void UKSWeaponAsset::ShouldMuteEmptyClipWarnings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldMuteEmptyClipWarnings");

	UKSWeaponAsset_ShouldMuteEmptyClipWarnings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldLockonPrefire
// ()

void UKSWeaponAsset::ShouldLockonPrefire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldLockonPrefire");

	UKSWeaponAsset_ShouldLockonPrefire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldLagCompensateFire
// ()

void UKSWeaponAsset::ShouldLagCompensateFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldLagCompensateFire");

	UKSWeaponAsset_ShouldLagCompensateFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldForceUprightDrops
// ()

void UKSWeaponAsset::ShouldForceUprightDrops()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldForceUprightDrops");

	UKSWeaponAsset_ShouldForceUprightDrops_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldDoRadialDamage
// ()

void UKSWeaponAsset::ShouldDoRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldDoRadialDamage");

	UKSWeaponAsset_ShouldDoRadialDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ShouldBeRemovedWhenExhausted
// ()

void UKSWeaponAsset::ShouldBeRemovedWhenExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ShouldBeRemovedWhenExhausted");

	UKSWeaponAsset_ShouldBeRemovedWhenExhausted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.RequiresAnEquipPoint
// ()

void UKSWeaponAsset::RequiresAnEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.RequiresAnEquipPoint");

	UKSWeaponAsset_RequiresAnEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.MakeKickbackCurve
// ()

void UKSWeaponAsset::MakeKickbackCurve()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.MakeKickbackCurve");

	UKSWeaponAsset_MakeKickbackCurve_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.LockoutAimStateInCooldown
// ()

void UKSWeaponAsset::LockoutAimStateInCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.LockoutAimStateInCooldown");

	UKSWeaponAsset_LockoutAimStateInCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.LimitNumInPlay
// ()

void UKSWeaponAsset::LimitNumInPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.LimitNumInPlay");

	UKSWeaponAsset_LimitNumInPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.IsUnique
// ()

void UKSWeaponAsset::IsUnique()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsUnique");

	UKSWeaponAsset_IsUnique_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.IsRadialDamageConical
// ()

void UKSWeaponAsset::IsRadialDamageConical()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsRadialDamageConical");

	UKSWeaponAsset_IsRadialDamageConical_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.IsGadget
// ()

void UKSWeaponAsset::IsGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsGadget");

	UKSWeaponAsset_IsGadget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.IsAudible
// ()

void UKSWeaponAsset::IsAudible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.IsAudible");

	UKSWeaponAsset_IsAudible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.HasKickback
// ()

void UKSWeaponAsset::HasKickback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.HasKickback");

	UKSWeaponAsset_HasKickback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponUpgrade
// ()

void UKSWeaponAsset::GetWeaponUpgrade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponUpgrade");

	UKSWeaponAsset_GetWeaponUpgrade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponType
// ()

void UKSWeaponAsset::GetWeaponType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponType");

	UKSWeaponAsset_GetWeaponType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponStats
// ()

void UKSWeaponAsset::GetWeaponStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponStats");

	UKSWeaponAsset_GetWeaponStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponNameAsString
// ()

void UKSWeaponAsset::GetWeaponNameAsString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponNameAsString");

	UKSWeaponAsset_GetWeaponNameAsString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponName
// ()

void UKSWeaponAsset::GetWeaponName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponName");

	UKSWeaponAsset_GetWeaponName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponDropClass
// ()

void UKSWeaponAsset::GetWeaponDropClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponDropClass");

	UKSWeaponAsset_GetWeaponDropClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponDescriptionAsString
// ()

void UKSWeaponAsset::GetWeaponDescriptionAsString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponDescriptionAsString");

	UKSWeaponAsset_GetWeaponDescriptionAsString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponDescription
// ()

void UKSWeaponAsset::GetWeaponDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponDescription");

	UKSWeaponAsset_GetWeaponDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponComponentClass
// ()

void UKSWeaponAsset::GetWeaponComponentClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponComponentClass");

	UKSWeaponAsset_GetWeaponComponentClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponClass
// ()

void UKSWeaponAsset::GetWeaponClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponClass");

	UKSWeaponAsset_GetWeaponClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponAttachmentPoints
// ()

void UKSWeaponAsset::GetWeaponAttachmentPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponAttachmentPoints");

	UKSWeaponAsset_GetWeaponAttachmentPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWeaponAmmoWidgetClass
// ()

void UKSWeaponAsset::GetWeaponAmmoWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWeaponAmmoWidgetClass");

	UKSWeaponAsset_GetWeaponAmmoWidgetClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetWalkSpeedModifier
// ()

void UKSWeaponAsset::GetWalkSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetWalkSpeedModifier");

	UKSWeaponAsset_GetWalkSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetVibrationEffect
// ()

void UKSWeaponAsset::GetVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetVibrationEffect");

	UKSWeaponAsset_GetVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetValidEquipPoints
// ()

void UKSWeaponAsset::GetValidEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetValidEquipPoints");

	UKSWeaponAsset_GetValidEquipPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetValidAttachments
// ()

void UKSWeaponAsset::GetValidAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetValidAttachments");

	UKSWeaponAsset_GetValidAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetUseAltFire
// ()

void UKSWeaponAsset::GetUseAltFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetUseAltFire");

	UKSWeaponAsset_GetUseAltFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetUnlimitedAmmo
// ()

void UKSWeaponAsset::GetUnlimitedAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetUnlimitedAmmo");

	UKSWeaponAsset_GetUnlimitedAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetThirdPersonFixedRelativeOffset
// ()

void UKSWeaponAsset::GetThirdPersonFixedRelativeOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetThirdPersonFixedRelativeOffset");

	UKSWeaponAsset_GetThirdPersonFixedRelativeOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetSwapAfterFire
// ()

void UKSWeaponAsset::GetSwapAfterFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetSwapAfterFire");

	UKSWeaponAsset_GetSwapAfterFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetSprintRecoveryTime
// ()

void UKSWeaponAsset::GetSprintRecoveryTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetSprintRecoveryTime");

	UKSWeaponAsset_GetSprintRecoveryTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetSoftItemRenderImage
// ()

void UKSWeaponAsset::GetSoftItemRenderImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetSoftItemRenderImage");

	UKSWeaponAsset_GetSoftItemRenderImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetShotPenetrationCount
// ()

void UKSWeaponAsset::GetShotPenetrationCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetShotPenetrationCount");

	UKSWeaponAsset_GetShotPenetrationCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetRoundsPerBurst
// ()

void UKSWeaponAsset::GetRoundsPerBurst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRoundsPerBurst");

	UKSWeaponAsset_GetRoundsPerBurst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetRetrieveTime
// ()

void UKSWeaponAsset::GetRetrieveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRetrieveTime");

	UKSWeaponAsset_GetRetrieveTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetReticleType
// ()

void UKSWeaponAsset::GetReticleType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetReticleType");

	UKSWeaponAsset_GetReticleType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetReloadType
// ()

void UKSWeaponAsset::GetReloadType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetReloadType");

	UKSWeaponAsset_GetReloadType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetReloadCooldownTime
// ()

void UKSWeaponAsset::GetReloadCooldownTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetReloadCooldownTime");

	UKSWeaponAsset_GetReloadCooldownTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetRadialIgnoreWalls
// ()

void UKSWeaponAsset::GetRadialIgnoreWalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialIgnoreWalls");

	UKSWeaponAsset_GetRadialIgnoreWalls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetRadialIgnoreSelf
// ()

void UKSWeaponAsset::GetRadialIgnoreSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialIgnoreSelf");

	UKSWeaponAsset_GetRadialIgnoreSelf_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetRadialIgnoreFriendlies
// ()

void UKSWeaponAsset::GetRadialIgnoreFriendlies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialIgnoreFriendlies");

	UKSWeaponAsset_GetRadialIgnoreFriendlies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetRadialDamageParams
// ()

void UKSWeaponAsset::GetRadialDamageParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialDamageParams");

	UKSWeaponAsset_GetRadialDamageParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetRadialConicalHalfAngle
// ()

void UKSWeaponAsset::GetRadialConicalHalfAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetRadialConicalHalfAngle");

	UKSWeaponAsset_GetRadialConicalHalfAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPreReloadTime
// ()

void UKSWeaponAsset::GetPreReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPreReloadTime");

	UKSWeaponAsset_GetPreReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPreFireTime
// ()

void UKSWeaponAsset::GetPreFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPreFireTime");

	UKSWeaponAsset_GetPreFireTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPrefireSkipWindowNum
// ()

void UKSWeaponAsset::GetPrefireSkipWindowNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireSkipWindowNum");

	UKSWeaponAsset_GetPrefireSkipWindowNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPrefireSkipWindow
// ()

void UKSWeaponAsset::GetPrefireSkipWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireSkipWindow");

	UKSWeaponAsset_GetPrefireSkipWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPrefireOverlapGracePeriod
// ()

void UKSWeaponAsset::GetPrefireOverlapGracePeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireOverlapGracePeriod");

	UKSWeaponAsset_GetPrefireOverlapGracePeriod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPrefireLockonDistance
// ()

void UKSWeaponAsset::GetPrefireLockonDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireLockonDistance");

	UKSWeaponAsset_GetPrefireLockonDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPrefireLockonAngle
// ()

void UKSWeaponAsset::GetPrefireLockonAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPrefireLockonAngle");

	UKSWeaponAsset_GetPrefireLockonAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPreFireInterruptThreshold
// ()

void UKSWeaponAsset::GetPreFireInterruptThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPreFireInterruptThreshold");

	UKSWeaponAsset_GetPreFireInterruptThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPostReloadTime
// ()

void UKSWeaponAsset::GetPostReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPostReloadTime");

	UKSWeaponAsset_GetPostReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPostFireTime
// ()

void UKSWeaponAsset::GetPostFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPostFireTime");

	UKSWeaponAsset_GetPostFireTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetPostFireForgivenessTime
// ()

void UKSWeaponAsset::GetPostFireForgivenessTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetPostFireForgivenessTime");

	UKSWeaponAsset_GetPostFireForgivenessTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetOuterRadius
// ()

void UKSWeaponAsset::GetOuterRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetOuterRadius");

	UKSWeaponAsset_GetOuterRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetMovementAccuracyPenalty
// ()

void UKSWeaponAsset::GetMovementAccuracyPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMovementAccuracyPenalty");

	UKSWeaponAsset_GetMovementAccuracyPenalty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetMaxNumInPlay
// ()

void UKSWeaponAsset::GetMaxNumInPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxNumInPlay");

	UKSWeaponAsset_GetMaxNumInPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetMaxFiringAccuracyLoss
// ()

void UKSWeaponAsset::GetMaxFiringAccuracyLoss()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxFiringAccuracyLoss");

	UKSWeaponAsset_GetMaxFiringAccuracyLoss_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetMaxFalloffDistance
// ()

void UKSWeaponAsset::GetMaxFalloffDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxFalloffDistance");

	UKSWeaponAsset_GetMaxFalloffDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetMaxCumulativeKickbackVerticalAngle
// ()

void UKSWeaponAsset::GetMaxCumulativeKickbackVerticalAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetMaxCumulativeKickbackVerticalAngle");

	UKSWeaponAsset_GetMaxCumulativeKickbackVerticalAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetLimbDamageAmount
// ()

void UKSWeaponAsset::GetLimbDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetLimbDamageAmount");

	UKSWeaponAsset_GetLimbDamageAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetKickbackResetTime
// ()

void UKSWeaponAsset::GetKickbackResetTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackResetTime");

	UKSWeaponAsset_GetKickbackResetTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetKickbackRecoveryRate
// ()

void UKSWeaponAsset::GetKickbackRecoveryRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackRecoveryRate");

	UKSWeaponAsset_GetKickbackRecoveryRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetKickbackRecoveryDelay
// ()

void UKSWeaponAsset::GetKickbackRecoveryDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackRecoveryDelay");

	UKSWeaponAsset_GetKickbackRecoveryDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetKickbackRecoveryAcceleration
// ()

void UKSWeaponAsset::GetKickbackRecoveryAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackRecoveryAcceleration");

	UKSWeaponAsset_GetKickbackRecoveryAcceleration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetKickbackApplicationOverride
// ()

void UKSWeaponAsset::GetKickbackApplicationOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetKickbackApplicationOverride");

	UKSWeaponAsset_GetKickbackApplicationOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetInnerRadius
// ()

void UKSWeaponAsset::GetInnerRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetInnerRadius");

	UKSWeaponAsset_GetInnerRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetInAirAccuracyModifier
// ()

void UKSWeaponAsset::GetInAirAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetInAirAccuracyModifier");

	UKSWeaponAsset_GetInAirAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetHolsterTime
// ()

void UKSWeaponAsset::GetHolsterTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetHolsterTime");

	UKSWeaponAsset_GetHolsterTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetHeadDamageAmount
// ()

void UKSWeaponAsset::GetHeadDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetHeadDamageAmount");

	UKSWeaponAsset_GetHeadDamageAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetGamepadKickbackScaling
// ()

void UKSWeaponAsset::GetGamepadKickbackScaling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetGamepadKickbackScaling");

	UKSWeaponAsset_GetGamepadKickbackScaling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetFirstShotPreReloadTime
// ()

void UKSWeaponAsset::GetFirstShotPreReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetFirstShotPreReloadTime");

	UKSWeaponAsset_GetFirstShotPreReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetFireModeType
// ()

void UKSWeaponAsset::GetFireModeType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetFireModeType");

	UKSWeaponAsset_GetFireModeType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetDodgeRollRecoveryTime
// ()

void UKSWeaponAsset::GetDodgeRollRecoveryTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDodgeRollRecoveryTime");

	UKSWeaponAsset_GetDodgeRollRecoveryTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetDefaultAmmo
// ()

void UKSWeaponAsset::GetDefaultAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDefaultAmmo");

	UKSWeaponAsset_GetDefaultAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetDefaultAimTransitionTime
// ()

void UKSWeaponAsset::GetDefaultAimTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDefaultAimTransitionTime");

	UKSWeaponAsset_GetDefaultAimTransitionTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetDamageTypeClass
// ()

void UKSWeaponAsset::GetDamageTypeClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDamageTypeClass");

	UKSWeaponAsset_GetDamageTypeClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetDamageAmount
// ()

void UKSWeaponAsset::GetDamageAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetDamageAmount");

	UKSWeaponAsset_GetDamageAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCrouchAccuracyModifier
// ()

void UKSWeaponAsset::GetCrouchAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCrouchAccuracyModifier");

	UKSWeaponAsset_GetCrouchAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCooldownDownTime
// ()

void UKSWeaponAsset::GetCooldownDownTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCooldownDownTime");

	UKSWeaponAsset_GetCooldownDownTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetConsumeAmmoDirectlyFromInventory
// ()

void UKSWeaponAsset::GetConsumeAmmoDirectlyFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetConsumeAmmoDirectlyFromInventory");

	UKSWeaponAsset_GetConsumeAmmoDirectlyFromInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCompatibleAttachments
// ()

void UKSWeaponAsset::GetCompatibleAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCompatibleAttachments");

	UKSWeaponAsset_GetCompatibleAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCompatibleAttachmentAssets
// ()

void UKSWeaponAsset::GetCompatibleAttachmentAssets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCompatibleAttachmentAssets");

	UKSWeaponAsset_GetCompatibleAttachmentAssets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetClipSize
// ()

void UKSWeaponAsset::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetClipSize");

	UKSWeaponAsset_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCautionRadius
// ()

void UKSWeaponAsset::GetCautionRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCautionRadius");

	UKSWeaponAsset_GetCautionRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCastType
// ()

void UKSWeaponAsset::GetCastType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCastType");

	UKSWeaponAsset_GetCastType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCanUseOffGround
// ()

void UKSWeaponAsset::GetCanUseOffGround()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCanUseOffGround");

	UKSWeaponAsset_GetCanUseOffGround_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetCanFireWhileInPowerSlide
// ()

void UKSWeaponAsset::GetCanFireWhileInPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetCanFireWhileInPowerSlide");

	UKSWeaponAsset_GetCanFireWhileInPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetBuildupTime
// ()

void UKSWeaponAsset::GetBuildupTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetBuildupTime");

	UKSWeaponAsset_GetBuildupTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetBaseRadialDamage
// ()

void UKSWeaponAsset::GetBaseRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetBaseRadialDamage");

	UKSWeaponAsset_GetBaseRadialDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetBaseAccuracy
// ()

void UKSWeaponAsset::GetBaseAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetBaseAccuracy");

	UKSWeaponAsset_GetBaseAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAudibleRange
// ()

void UKSWeaponAsset::GetAudibleRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAudibleRange");

	UKSWeaponAsset_GetAudibleRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAttachmentSlotCount
// ()

void UKSWeaponAsset::GetAttachmentSlotCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAttachmentSlotCount");

	UKSWeaponAsset_GetAttachmentSlotCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAmmoType
// ()

void UKSWeaponAsset::GetAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAmmoType");

	UKSWeaponAsset_GetAmmoType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAlternativeVibrationEffect
// ()

void UKSWeaponAsset::GetAlternativeVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternativeVibrationEffect");

	UKSWeaponAsset_GetAlternativeVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAlternativeVibrationAttenuation
// ()

void UKSWeaponAsset::GetAlternativeVibrationAttenuation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternativeVibrationAttenuation");

	UKSWeaponAsset_GetAlternativeVibrationAttenuation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAlternatePreFireTime
// ()

void UKSWeaponAsset::GetAlternatePreFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternatePreFireTime");

	UKSWeaponAsset_GetAlternatePreFireTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAlternatePostFireTime
// ()

void UKSWeaponAsset::GetAlternatePostFireTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAlternatePostFireTime");

	UKSWeaponAsset_GetAlternatePostFireTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAimOverShoulderTransitionTime
// ()

void UKSWeaponAsset::GetAimOverShoulderTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimOverShoulderTransitionTime");

	UKSWeaponAsset_GetAimOverShoulderTransitionTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAimOverShoulderAccuracyModifier
// ()

void UKSWeaponAsset::GetAimOverShoulderAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimOverShoulderAccuracyModifier");

	UKSWeaponAsset_GetAimOverShoulderAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAimDownSightsTransitionTime
// ()

void UKSWeaponAsset::GetAimDownSightsTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimDownSightsTransitionTime");

	UKSWeaponAsset_GetAimDownSightsTransitionTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAimDownSightsFOV
// ()

void UKSWeaponAsset::GetAimDownSightsFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimDownSightsFOV");

	UKSWeaponAsset_GetAimDownSightsFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAimAlternateTransitionTime
// ()

void UKSWeaponAsset::GetAimAlternateTransitionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAimAlternateTransitionTime");

	UKSWeaponAsset_GetAimAlternateTransitionTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetADSSpeedModifier
// ()

void UKSWeaponAsset::GetADSSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetADSSpeedModifier");

	UKSWeaponAsset_GetADSSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetADSRollMultiplier
// ()

void UKSWeaponAsset::GetADSRollMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetADSRollMultiplier");

	UKSWeaponAsset_GetADSRollMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetADSBumpStartStopMultiplier
// ()

void UKSWeaponAsset::GetADSBumpStartStopMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetADSBumpStartStopMultiplier");

	UKSWeaponAsset_GetADSBumpStartStopMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetADSBumpLoopingMultiplier
// ()

void UKSWeaponAsset::GetADSBumpLoopingMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetADSBumpLoopingMultiplier");

	UKSWeaponAsset_GetADSBumpLoopingMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetADSBlurValuesInfo
// ()

void UKSWeaponAsset::GetADSBlurValuesInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetADSBlurValuesInfo");

	UKSWeaponAsset_GetADSBlurValuesInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAccuracyReturnRate
// ()

void UKSWeaponAsset::GetAccuracyReturnRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAccuracyReturnRate");

	UKSWeaponAsset_GetAccuracyReturnRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAccuracyReturnDelay
// ()

void UKSWeaponAsset::GetAccuracyReturnDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAccuracyReturnDelay");

	UKSWeaponAsset_GetAccuracyReturnDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.GetAccuracyLossPerShot
// ()

void UKSWeaponAsset::GetAccuracyLossPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.GetAccuracyLossPerShot");

	UKSWeaponAsset_GetAccuracyLossPerShot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.DoesScopingAllowAutoReload
// ()

void UKSWeaponAsset::DoesScopingAllowAutoReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.DoesScopingAllowAutoReload");

	UKSWeaponAsset_DoesScopingAllowAutoReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.DoesRestoreAmmo
// ()

void UKSWeaponAsset::DoesRestoreAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.DoesRestoreAmmo");

	UKSWeaponAsset_DoesRestoreAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.DoesIgnoreNoFire
// ()

void UKSWeaponAsset::DoesIgnoreNoFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.DoesIgnoreNoFire");

	UKSWeaponAsset_DoesIgnoreNoFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CreateProjectile
// ()

void UKSWeaponAsset::CreateProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CreateProjectile");

	UKSWeaponAsset_CreateProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CreateAndExplodeProjectile
// ()

void UKSWeaponAsset::CreateAndExplodeProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CreateAndExplodeProjectile");

	UKSWeaponAsset_CreateAndExplodeProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.ConeHalfAngleToAccuracy
// ()

void UKSWeaponAsset::ConeHalfAngleToAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.ConeHalfAngleToAccuracy");

	UKSWeaponAsset_ConeHalfAngleToAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanWeaponStateTransition
// ()

void UKSWeaponAsset::CanWeaponStateTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanWeaponStateTransition");

	UKSWeaponAsset_CanWeaponStateTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanResetKickback
// ()

void UKSWeaponAsset::CanResetKickback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanResetKickback");

	UKSWeaponAsset_CanResetKickback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanRecoverFromKickback
// ()

void UKSWeaponAsset::CanRecoverFromKickback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanRecoverFromKickback");

	UKSWeaponAsset_CanRecoverFromKickback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanReceiveAttachment
// ()

void UKSWeaponAsset::CanReceiveAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanReceiveAttachment");

	UKSWeaponAsset_CanReceiveAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanModsReplenishAmmo
// ()

void UKSWeaponAsset::CanModsReplenishAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanModsReplenishAmmo");

	UKSWeaponAsset_CanModsReplenishAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanInterruptPreReload
// ()

void UKSWeaponAsset::CanInterruptPreReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanInterruptPreReload");

	UKSWeaponAsset_CanInterruptPreReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanEverReload
// ()

void UKSWeaponAsset::CanEverReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverReload");

	UKSWeaponAsset_CanEverReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanEverFire
// ()

void UKSWeaponAsset::CanEverFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverFire");

	UKSWeaponAsset_CanEverFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanEverAimOverShoulder
// ()

void UKSWeaponAsset::CanEverAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverAimOverShoulder");

	UKSWeaponAsset_CanEverAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanEverAimDownSights
// ()

void UKSWeaponAsset::CanEverAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverAimDownSights");

	UKSWeaponAsset_CanEverAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanEverAimAlternate
// ()

void UKSWeaponAsset::CanEverAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanEverAimAlternate");

	UKSWeaponAsset_CanEverAimAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CanBeDropped
// ()

void UKSWeaponAsset::CanBeDropped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CanBeDropped");

	UKSWeaponAsset_CanBeDropped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFromProjectileHit
// ()

void UKSWeaponAsset::CalculateDamageFromProjectileHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFromProjectileHit");

	UKSWeaponAsset_CalculateDamageFromProjectileHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFromInstantHit
// ()

void UKSWeaponAsset::CalculateDamageFromInstantHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFromInstantHit");

	UKSWeaponAsset_CalculateDamageFromInstantHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromProjectileHit
// ()

void UKSWeaponAsset::CalculateDamageFalloffFromProjectileHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromProjectileHit");

	UKSWeaponAsset_CalculateDamageFalloffFromProjectileHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromHitResults
// ()

void UKSWeaponAsset::CalculateDamageFalloffFromHitResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromHitResults");

	UKSWeaponAsset_CalculateDamageFalloffFromHitResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromDistance
// ()

void UKSWeaponAsset::CalculateDamageFalloffFromDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.CalculateDamageFalloffFromDistance");

	UKSWeaponAsset_CalculateDamageFalloffFromDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset.AccuracyToConeHalfAngle
// ()

void UKSWeaponAsset::AccuracyToConeHalfAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset.AccuracyToConeHalfAngle");

	UKSWeaponAsset_AccuracyToConeHalfAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.ShouldDestroyOnBreak
// ()

void UKSArmorAsset::ShouldDestroyOnBreak()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.ShouldDestroyOnBreak");

	UKSArmorAsset_ShouldDestroyOnBreak_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.IsArmorRepairable
// ()

void UKSArmorAsset::IsArmorRepairable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.IsArmorRepairable");

	UKSArmorAsset_IsArmorRepairable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.GetMaxDurability
// ()

void UKSArmorAsset::GetMaxDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.GetMaxDurability");

	UKSArmorAsset_GetMaxDurability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.GetDisplayLevel
// ()

void UKSArmorAsset::GetDisplayLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.GetDisplayLevel");

	UKSArmorAsset_GetDisplayLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.GetDamageAbsorbPercent
// ()

void UKSArmorAsset::GetDamageAbsorbPercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.GetDamageAbsorbPercent");

	UKSArmorAsset_GetDamageAbsorbPercent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.DoesAbsorbBreakingHit
// ()

void UKSArmorAsset::DoesAbsorbBreakingHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.DoesAbsorbBreakingHit");

	UKSArmorAsset_DoesAbsorbBreakingHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.CalcAbsorbRadialDamage
// ()

void UKSArmorAsset::CalcAbsorbRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.CalcAbsorbRadialDamage");

	UKSArmorAsset_CalcAbsorbRadialDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSArmorAsset.CalcAbsorbPointDamage
// ()

void UKSArmorAsset::CalcAbsorbPointDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSArmorAsset.CalcAbsorbPointDamage");

	UKSArmorAsset_CalcAbsorbPointDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.SetBundledAmmoToDefault
// ()

void AKSWeaponAssetDrop::SetBundledAmmoToDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.SetBundledAmmoToDefault");

	AKSWeaponAssetDrop_SetBundledAmmoToDefault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.OverrideDropAmmo
// ()

void AKSWeaponAssetDrop::OverrideDropAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.OverrideDropAmmo");

	AKSWeaponAssetDrop_OverrideDropAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.OnReturnProjectileStopped
// ()

void AKSWeaponAssetDrop::OnReturnProjectileStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.OnReturnProjectileStopped");

	AKSWeaponAssetDrop_OnReturnProjectileStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.OnRep_ReturnProjectile
// ()

void AKSWeaponAssetDrop::OnRep_ReturnProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.OnRep_ReturnProjectile");

	AKSWeaponAssetDrop_OnRep_ReturnProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.GetWeaponComponent
// ()

void AKSWeaponAssetDrop::GetWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetWeaponComponent");

	AKSWeaponAssetDrop_GetWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.GetWeaponAsset
// ()

void AKSWeaponAssetDrop::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetWeaponAsset");

	AKSWeaponAssetDrop_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.GetReturnProjectile
// ()

void AKSWeaponAssetDrop::GetReturnProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetReturnProjectile");

	AKSWeaponAssetDrop_GetReturnProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForFireModeType
// ()

void AKSWeaponAssetDrop::GetLabelInfoForFireModeType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForFireModeType");

	AKSWeaponAssetDrop_GetLabelInfoForFireModeType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForAmmoType
// ()

void AKSWeaponAssetDrop::GetLabelInfoForAmmoType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.GetLabelInfoForAmmoType");

	AKSWeaponAssetDrop_GetLabelInfoForAmmoType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.CanPickupReplenishAmmo
// ()

void AKSWeaponAssetDrop::CanPickupReplenishAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.CanPickupReplenishAmmo");

	AKSWeaponAssetDrop_CanPickupReplenishAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.BroadcastPickupFailedInventoryFull
// ()

void AKSWeaponAssetDrop::BroadcastPickupFailedInventoryFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.BroadcastPickupFailedInventoryFull");

	AKSWeaponAssetDrop_BroadcastPickupFailedInventoryFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAssetDrop.AddAttachment
// ()

void AKSWeaponAssetDrop::AddAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAssetDrop.AddAttachment");

	AKSWeaponAssetDrop_AddAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.OnOverlapBegin
// ()

void AKSNeutralBombDrop::OnOverlapBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.OnOverlapBegin");

	AKSNeutralBombDrop_OnOverlapBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.OnNeutralBombStateChanged
// ()

void AKSNeutralBombDrop::OnNeutralBombStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.OnNeutralBombStateChanged");

	AKSNeutralBombDrop_OnNeutralBombStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.NotifyBots
// ()

void AKSNeutralBombDrop::NotifyBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.NotifyBots");

	AKSNeutralBombDrop_NotifyBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.IsSpottedByTeam
// ()

void AKSNeutralBombDrop::IsSpottedByTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.IsSpottedByTeam");

	AKSNeutralBombDrop_IsSpottedByTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.IsSpottedByPlayer
// ()

void AKSNeutralBombDrop::IsSpottedByPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.IsSpottedByPlayer");

	AKSNeutralBombDrop_IsSpottedByPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.GetCurrentInteractionProgress
// ()

void AKSNeutralBombDrop::GetCurrentInteractionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.GetCurrentInteractionProgress");

	AKSNeutralBombDrop_GetCurrentInteractionProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.ExplodeCosmetic
// ()

void AKSNeutralBombDrop::ExplodeCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.ExplodeCosmetic");

	AKSNeutralBombDrop_ExplodeCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNeutralBombDrop.Explode
// ()

void AKSNeutralBombDrop::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNeutralBombDrop.Explode");

	AKSNeutralBombDrop_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.SetState
// ()

void AKSObjectiveBase::SetState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.SetState");

	AKSObjectiveBase_SetState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.ResetState
// ()

void AKSObjectiveBase::ResetState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.ResetState");

	AKSObjectiveBase_ResetState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.OnRep_ObjectiveState
// ()

void AKSObjectiveBase::OnRep_ObjectiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.OnRep_ObjectiveState");

	AKSObjectiveBase_OnRep_ObjectiveState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.OnRep_ObjectiveId
// ()

void AKSObjectiveBase::OnRep_ObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.OnRep_ObjectiveId");

	AKSObjectiveBase_OnRep_ObjectiveId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.NotifyBots
// ()

void AKSObjectiveBase::NotifyBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.NotifyBots");

	AKSObjectiveBase_NotifyBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.HandleNewState
// ()

void AKSObjectiveBase::HandleNewState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.HandleNewState");

	AKSObjectiveBase_HandleNewState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetPreviousState
// ()

void AKSObjectiveBase::GetPreviousState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetPreviousState");

	AKSObjectiveBase_GetPreviousState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetOwningTeamOrPlayer
// ()

void AKSObjectiveBase::GetOwningTeamOrPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetOwningTeamOrPlayer");

	AKSObjectiveBase_GetOwningTeamOrPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgressTotal
// ()

void AKSObjectiveBase::GetObjectiveMeterProgressTotal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgressTotal");

	AKSObjectiveBase_GetObjectiveMeterProgressTotal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgress
// ()

void AKSObjectiveBase::GetObjectiveMeterProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveMeterProgress");

	AKSObjectiveBase_GetObjectiveMeterProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveId
// ()

void AKSObjectiveBase::GetObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveId");

	AKSObjectiveBase_GetObjectiveId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveDisplayName
// ()

void AKSObjectiveBase::GetObjectiveDisplayName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveDisplayName");

	AKSObjectiveBase_GetObjectiveDisplayName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetObjectiveDisplayLabel
// ()

void AKSObjectiveBase::GetObjectiveDisplayLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetObjectiveDisplayLabel");

	AKSObjectiveBase_GetObjectiveDisplayLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.GetCurrentState
// ()

void AKSObjectiveBase::GetCurrentState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.GetCurrentState");

	AKSObjectiveBase_GetCurrentState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.CanChangeState
// ()

void AKSObjectiveBase::CanChangeState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.CanChangeState");

	AKSObjectiveBase_CanChangeState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.CallOnTeamSidesFlipped
// ()

void AKSObjectiveBase::CallOnTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.CallOnTeamSidesFlipped");

	AKSObjectiveBase_CallOnTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.AssignObjectiveId
// ()

void AKSObjectiveBase::AssignObjectiveId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.AssignObjectiveId");

	AKSObjectiveBase_AssignObjectiveId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSObjectiveBase.ActivateObjective
// ()

void AKSObjectiveBase::ActivateObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSObjectiveBase.ActivateObjective");

	AKSObjectiveBase_ActivateObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.LocalHoverStateChanged
// ()

void AKSExtractionComputer::LocalHoverStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.LocalHoverStateChanged");

	AKSExtractionComputer_LocalHoverStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.InteractionEndOverlap
// ()

void AKSExtractionComputer::InteractionEndOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.InteractionEndOverlap");

	AKSExtractionComputer_InteractionEndOverlap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionComputer.InteractionComplete
// ()

void AKSExtractionComputer::InteractionComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionComputer.InteractionComplete");

	AKSExtractionComputer_InteractionComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleTeamCinematicStarted
// ()

void UKSAudioManager::HandleTeamCinematicStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleTeamCinematicStarted");

	UKSAudioManager_HandleTeamCinematicStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleSkydiveStarted
// ()

void UKSAudioManager::HandleSkydiveStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleSkydiveStarted");

	UKSAudioManager_HandleSkydiveStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleSkydiveSkipped
// ()

void UKSAudioManager::HandleSkydiveSkipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleSkydiveSkipped");

	UKSAudioManager_HandleSkydiveSkipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleSkydiveEnded
// ()

void UKSAudioManager::HandleSkydiveEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleSkydiveEnded");

	UKSAudioManager_HandleSkydiveEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleRoundHasEnded
// ()

void UKSAudioManager::HandleRoundHasEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleRoundHasEnded");

	UKSAudioManager_HandleRoundHasEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandlePostSelectionPhaseBeginFadeOut
// ()

void UKSAudioManager::HandlePostSelectionPhaseBeginFadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandlePostSelectionPhaseBeginFadeOut");

	UKSAudioManager_HandlePostSelectionPhaseBeginFadeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandlePhaseChanged
// ()

void UKSAudioManager::HandlePhaseChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandlePhaseChanged");

	UKSAudioManager_HandlePhaseChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleMatchTimerUpdate
// ()

void UKSAudioManager::HandleMatchTimerUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleMatchTimerUpdate");

	UKSAudioManager_HandleMatchTimerUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleLoadingScreenEnded
// ()

void UKSAudioManager::HandleLoadingScreenEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleLoadingScreenEnded");

	UKSAudioManager_HandleLoadingScreenEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleLoadingScreenBegan
// ()

void UKSAudioManager::HandleLoadingScreenBegan()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleLoadingScreenBegan");

	UKSAudioManager_HandleLoadingScreenBegan_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleLeavingMap
// ()

void UKSAudioManager::HandleLeavingMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleLeavingMap");

	UKSAudioManager_HandleLeavingMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleLastManStanding
// ()

void UKSAudioManager::HandleLastManStanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleLastManStanding");

	UKSAudioManager_HandleLastManStanding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleKillcamStarted
// ()

void UKSAudioManager::HandleKillcamStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleKillcamStarted");

	UKSAudioManager_HandleKillcamStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleGameStateEndPlay
// ()

void UKSAudioManager::HandleGameStateEndPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleGameStateEndPlay");

	UKSAudioManager_HandleGameStateEndPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleGameStateBeginPlay
// ()

void UKSAudioManager::HandleGameStateBeginPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleGameStateBeginPlay");

	UKSAudioManager_HandleGameStateBeginPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleGameModeReceived
// ()

void UKSAudioManager::HandleGameModeReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleGameModeReceived");

	UKSAudioManager_HandleGameModeReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleDropshipDoorOpened
// ()

void UKSAudioManager::HandleDropshipDoorOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleDropshipDoorOpened");

	UKSAudioManager_HandleDropshipDoorOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleControlPointCaptured
// ()

void UKSAudioManager::HandleControlPointCaptured()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleControlPointCaptured");

	UKSAudioManager_HandleControlPointCaptured_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioManager.HandleBombStateChanged
// ()

void UKSAudioManager::HandleBombStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioManager.HandleBombStateChanged");

	UKSAudioManager_HandleBombStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayer.ComposeEventNamePriorityArray
// ()

void AKSAudioPlayer::ComposeEventNamePriorityArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayer.ComposeEventNamePriorityArray");

	AKSAudioPlayer_ComposeEventNamePriorityArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayer.ComposeBankNamePriorityArray
// ()

void AKSAudioPlayer::ComposeBankNamePriorityArray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayer.ComposeBankNamePriorityArray");

	AKSAudioPlayer_ComposeBankNamePriorityArray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.HasActivePlayerCharacter
// ()

void UKSAudioPlayerStateParameterData::HasActivePlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.HasActivePlayerCharacter");

	UKSAudioPlayerStateParameterData_HasActivePlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.HasActiveMusicPack
// ()

void UKSAudioPlayerStateParameterData::HasActiveMusicPack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.HasActiveMusicPack");

	UKSAudioPlayerStateParameterData_HasActiveMusicPack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.HasActiveMapLevel
// ()

void UKSAudioPlayerStateParameterData::HasActiveMapLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.HasActiveMapLevel");

	UKSAudioPlayerStateParameterData_HasActiveMapLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.HasActiveGameMode
// ()

void UKSAudioPlayerStateParameterData::HasActiveGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.HasActiveGameMode");

	UKSAudioPlayerStateParameterData_HasActiveGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousPlayerCharacter
// ()

void UKSAudioPlayerStateParameterData::GetPreviousPlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousPlayerCharacter");

	UKSAudioPlayerStateParameterData_GetPreviousPlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousMusicPack
// ()

void UKSAudioPlayerStateParameterData::GetPreviousMusicPack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousMusicPack");

	UKSAudioPlayerStateParameterData_GetPreviousMusicPack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousMapLevel
// ()

void UKSAudioPlayerStateParameterData::GetPreviousMapLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousMapLevel");

	UKSAudioPlayerStateParameterData_GetPreviousMapLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousIsSpectating
// ()

void UKSAudioPlayerStateParameterData::GetPreviousIsSpectating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousIsSpectating");

	UKSAudioPlayerStateParameterData_GetPreviousIsSpectating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousGameMode
// ()

void UKSAudioPlayerStateParameterData::GetPreviousGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetPreviousGameMode");

	UKSAudioPlayerStateParameterData_GetPreviousGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetIsSpectating
// ()

void UKSAudioPlayerStateParameterData::GetIsSpectating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetIsSpectating");

	UKSAudioPlayerStateParameterData_GetIsSpectating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetActivePlayerCharacter
// ()

void UKSAudioPlayerStateParameterData::GetActivePlayerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetActivePlayerCharacter");

	UKSAudioPlayerStateParameterData_GetActivePlayerCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetActiveMusicPack
// ()

void UKSAudioPlayerStateParameterData::GetActiveMusicPack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetActiveMusicPack");

	UKSAudioPlayerStateParameterData_GetActiveMusicPack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetActiveMapLevel
// ()

void UKSAudioPlayerStateParameterData::GetActiveMapLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetActiveMapLevel");

	UKSAudioPlayerStateParameterData_GetActiveMapLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAudioPlayerStateParameterData.GetActiveGameMode
// ()

void UKSAudioPlayerStateParameterData::GetActiveGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAudioPlayerStateParameterData.GetActiveGameMode");

	UKSAudioPlayerStateParameterData_GetActiveGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAutoPickupComponent.OnOwnerPossessionChanged
// ()

void UKSAutoPickupComponent::OnOwnerPossessionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAutoPickupComponent.OnOwnerPossessionChanged");

	UKSAutoPickupComponent_OnOwnerPossessionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAutoPickupComponent.OnAutoPickupPreferenceChanged
// ()

void UKSAutoPickupComponent::OnAutoPickupPreferenceChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAutoPickupComponent.OnAutoPickupPreferenceChanged");

	UKSAutoPickupComponent_OnAutoPickupPreferenceChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAvatar.GetSoftLargeAvatarIcon
// ()

void UKSAvatar::GetSoftLargeAvatarIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAvatar.GetSoftLargeAvatarIcon");

	UKSAvatar_GetSoftLargeAvatarIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAvenger.StoreCombatInfo
// ()

void UKSAvenger::StoreCombatInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAvenger.StoreCombatInfo");

	UKSAvenger_StoreCombatInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAvenger.RemoveTracker
// ()

void UKSAvenger::RemoveTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAvenger.RemoveTracker");

	UKSAvenger_RemoveTracker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAvenger.CheckPlayerTrackers
// ()

void UKSAvenger::CheckPlayerTrackers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAvenger.CheckPlayerTrackers");

	UKSAvenger_CheckPlayerTrackers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSAwardsManager.GetAchievementActivityInstances
// ()

void UKSAwardsManager::GetAchievementActivityInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSAwardsManager.GetAchievementActivityInstances");

	UKSAwardsManager_GetAchievementActivityInstances_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBanner.GetSoftSmallBannerIcon
// ()

void UKSBanner::GetSoftSmallBannerIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBanner.GetSoftSmallBannerIcon");

	UKSBanner_GetSoftSmallBannerIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBanner.GetSoftLargeBannerIcon
// ()

void UKSBanner::GetSoftLargeBannerIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBanner.GetSoftLargeBannerIcon");

	UKSBanner_GetSoftLargeBannerIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBattlePassProgressionManager.ShouldDisplayMiniBattlePass
// ()

void UKSBattlePassProgressionManager::ShouldDisplayMiniBattlePass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBattlePassProgressionManager.ShouldDisplayMiniBattlePass");

	UKSBattlePassProgressionManager_ShouldDisplayMiniBattlePass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBattlePassProgressionManager.GetMiniBattlePassXpItemId
// ()

void UKSBattlePassProgressionManager::GetMiniBattlePassXpItemId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBattlePassProgressionManager.GetMiniBattlePassXpItemId");

	UKSBattlePassProgressionManager_GetMiniBattlePassXpItemId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBattlePassProgressionManager.GetActivityInstanceByType
// ()

void UKSBattlePassProgressionManager::GetActivityInstanceByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBattlePassProgressionManager.GetActivityInstanceByType");

	UKSBattlePassProgressionManager_GetActivityInstanceByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBattlePassProgressionManager.FindActivityByType
// ()

void UKSBattlePassProgressionManager::FindActivityByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBattlePassProgressionManager.FindActivityByType");

	UKSBattlePassProgressionManager_FindActivityByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameRuleComponent.OnTeamSidesFlipped
// ()

void UKSGameRuleComponent::OnTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.OnTeamSidesFlipped");

	UKSGameRuleComponent_OnTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameRuleComponent.OnTeamChanged
// ()

void UKSGameRuleComponent::OnTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.OnTeamChanged");

	UKSGameRuleComponent_OnTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameRuleComponent.OnLogout
// ()

void UKSGameRuleComponent::OnLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.OnLogout");

	UKSGameRuleComponent_OnLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameRuleComponent.NewPlayerStarting
// ()

void UKSGameRuleComponent::NewPlayerStarting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.NewPlayerStarting");

	UKSGameRuleComponent_NewPlayerStarting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameRuleComponent.NewBotStarting
// ()

void UKSGameRuleComponent::NewBotStarting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameRuleComponent.NewBotStarting");

	UKSGameRuleComponent_NewBotStarting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBehaviorRuleBaseComponent.HandleTeamSidesFlipped
// ()

void UKSBehaviorRuleBaseComponent::HandleTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBehaviorRuleBaseComponent.HandleTeamSidesFlipped");

	UKSBehaviorRuleBaseComponent_HandleTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBehaviorRuleComponent.ClearBehaviorChange
// ()

void UKSBehaviorRuleComponent::ClearBehaviorChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBehaviorRuleComponent.ClearBehaviorChange");

	UKSBehaviorRuleComponent_ClearBehaviorChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBehaviorRuleComponent.ApplyBehaviorChange
// ()

void UKSBehaviorRuleComponent::ApplyBehaviorChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBehaviorRuleComponent.ApplyBehaviorChange");

	UKSBehaviorRuleComponent_ApplyBehaviorChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerBehaviorRuleComponent.SetTeamFilter
// ()

void UKSPlayerBehaviorRuleComponent::SetTeamFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerBehaviorRuleComponent.SetTeamFilter");

	UKSPlayerBehaviorRuleComponent_SetTeamFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerBehaviorRuleComponent.SetPlayerFilter
// ()

void UKSPlayerBehaviorRuleComponent::SetPlayerFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerBehaviorRuleComponent.SetPlayerFilter");

	UKSPlayerBehaviorRuleComponent_SetPlayerFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerBehaviorRuleComponent.OnPlayerFilterControllerLogout
// ()

void UKSPlayerBehaviorRuleComponent::OnPlayerFilterControllerLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerBehaviorRuleComponent.OnPlayerFilterControllerLogout");

	UKSPlayerBehaviorRuleComponent_OnPlayerFilterControllerLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerBehaviorRuleComponent.ClearTeamFilter
// ()

void UKSPlayerBehaviorRuleComponent::ClearTeamFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerBehaviorRuleComponent.ClearTeamFilter");

	UKSPlayerBehaviorRuleComponent_ClearTeamFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerBehaviorRuleComponent.ClearPlayerFilter
// ()

void UKSPlayerBehaviorRuleComponent::ClearPlayerFilter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerBehaviorRuleComponent.ClearPlayerFilter");

	UKSPlayerBehaviorRuleComponent_ClearPlayerFilter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerBehaviorRuleComponent.ClearBehaviorChange
// ()

void UKSPlayerBehaviorRuleComponent::ClearBehaviorChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerBehaviorRuleComponent.ClearBehaviorChange");

	UKSPlayerBehaviorRuleComponent_ClearBehaviorChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerBehaviorRuleComponent.ApplyBehaviorChange
// ()

void UKSPlayerBehaviorRuleComponent::ApplyBehaviorChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerBehaviorRuleComponent.ApplyBehaviorChange");

	UKSPlayerBehaviorRuleComponent_ApplyBehaviorChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.UpdateScalarTrack
// ()

void UKSFXCurveComponent::UpdateScalarTrack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.UpdateScalarTrack");

	UKSFXCurveComponent_UpdateScalarTrack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.UpdateColorTrack
// ()

void UKSFXCurveComponent::UpdateColorTrack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.UpdateColorTrack");

	UKSFXCurveComponent_UpdateColorTrack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.Stop
// ()

void UKSFXCurveComponent::Stop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.Stop");

	UKSFXCurveComponent_Stop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.Reverse
// ()

void UKSFXCurveComponent::Reverse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.Reverse");

	UKSFXCurveComponent_Reverse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.ResetTime
// ()

void UKSFXCurveComponent::ResetTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.ResetTime");

	UKSFXCurveComponent_ResetTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.Play
// ()

void UKSFXCurveComponent::Play()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.Play");

	UKSFXCurveComponent_Play_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.IsPlaying
// ()

void UKSFXCurveComponent::IsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.IsPlaying");

	UKSFXCurveComponent_IsPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.GetFxID
// ()

void UKSFXCurveComponent::GetFxID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.GetFxID");

	UKSFXCurveComponent_GetFxID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFXCurveComponent.GetCharacterOwner
// ()

void UKSFXCurveComponent::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFXCurveComponent.GetCharacterOwner");

	UKSFXCurveComponent_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBloodSplatterComponent.AddDamageInstance
// ()

void UKSBloodSplatterComponent::AddDamageInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBloodSplatterComponent.AddDamageInstance");

	UKSBloodSplatterComponent_AddDamageInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.SetInteractability
// ()

void AKSBlueprintableInteractable::SetInteractability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.SetInteractability");

	AKSBlueprintableInteractable_SetInteractability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.InterruptInteraction
// ()

void AKSBlueprintableInteractable::InterruptInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InterruptInteraction");

	AKSBlueprintableInteractable_InterruptInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.InterruptAllInteractions
// ()

void AKSBlueprintableInteractable::InterruptAllInteractions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InterruptAllInteractions");

	AKSBlueprintableInteractable_InterruptAllInteractions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnPress
// ()

void AKSBlueprintableInteractable::InternalCanInteractOnPress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnPress");

	AKSBlueprintableInteractable_InternalCanInteractOnPress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnHold
// ()

void AKSBlueprintableInteractable::InternalCanInteractOnHold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.InternalCanInteractOnHold");

	AKSBlueprintableInteractable_InternalCanInteractOnHold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionStarted
// ()

void AKSBlueprintableInteractable::BlueprintInteractionStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionStarted");

	AKSBlueprintableInteractable_BlueprintInteractionStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionPoint
// ()

void AKSBlueprintableInteractable::BlueprintInteractionPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionPoint");

	AKSBlueprintableInteractable_BlueprintInteractionPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionEnded
// ()

void AKSBlueprintableInteractable::BlueprintInteractionEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.BlueprintInteractionEnded");

	AKSBlueprintableInteractable_BlueprintInteractionEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableInteractable.AddOutlinedPrimitiveComponent
// ()

void AKSBlueprintableInteractable::AddOutlinedPrimitiveComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableInteractable.AddOutlinedPrimitiveComponent");

	AKSBlueprintableInteractable_AddOutlinedPrimitiveComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintableAmmoRefillCrate.ReloadGrenadeAmmo
// ()

void AKSBlueprintableAmmoRefillCrate::ReloadGrenadeAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintableAmmoRefillCrate.ReloadGrenadeAmmo");

	AKSBlueprintableAmmoRefillCrate_ReloadGrenadeAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.TryToStartCarry
// ()

void UKSBlueprintFunctionLibrary::TryToStartCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.TryToStartCarry");

	UKSBlueprintFunctionLibrary_TryToStartCarry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitterWithRotation
// ()

void UKSBlueprintFunctionLibrary::SpawnTracerEmitterWithRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitterWithRotation");

	UKSBlueprintFunctionLibrary_SpawnTracerEmitterWithRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitter
// ()

void UKSBlueprintFunctionLibrary::SpawnTracerEmitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnTracerEmitter");

	UKSBlueprintFunctionLibrary_SpawnTracerEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracerWithRotation
// ()

void UKSBlueprintFunctionLibrary::SpawnMeshTracerWithRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracerWithRotation");

	UKSBlueprintFunctionLibrary_SpawnMeshTracerWithRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracer
// ()

void UKSBlueprintFunctionLibrary::SpawnMeshTracer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnMeshTracer");

	UKSBlueprintFunctionLibrary_SpawnMeshTracer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SpawnImpactDecalAtLocation
// ()

void UKSBlueprintFunctionLibrary::SpawnImpactDecalAtLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SpawnImpactDecalAtLocation");

	UKSBlueprintFunctionLibrary_SpawnImpactDecalAtLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SortPlayerEntryStatsByPoints
// ()

void UKSBlueprintFunctionLibrary::SortPlayerEntryStatsByPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SortPlayerEntryStatsByPoints");

	UKSBlueprintFunctionLibrary_SortPlayerEntryStatsByPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SortKSPlayerStatesByMoney
// ()

void UKSBlueprintFunctionLibrary::SortKSPlayerStatesByMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SortKSPlayerStatesByMoney");

	UKSBlueprintFunctionLibrary_SortKSPlayerStatesByMoney_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SortKSPlayerDataByMoney
// ()

void UKSBlueprintFunctionLibrary::SortKSPlayerDataByMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SortKSPlayerDataByMoney");

	UKSBlueprintFunctionLibrary_SortKSPlayerDataByMoney_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SortJobRoles
// ()

void UKSBlueprintFunctionLibrary::SortJobRoles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SortJobRoles");

	UKSBlueprintFunctionLibrary_SortJobRoles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ShouldDropshipDoorBeOpen
// ()

void UKSBlueprintFunctionLibrary::ShouldDropshipDoorBeOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ShouldDropshipDoorBeOpen");

	UKSBlueprintFunctionLibrary_ShouldDropshipDoorBeOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SetupSkeletalMeshLODReductionGroups
// ()

void UKSBlueprintFunctionLibrary::SetupSkeletalMeshLODReductionGroups()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SetupSkeletalMeshLODReductionGroups");

	UKSBlueprintFunctionLibrary_SetupSkeletalMeshLODReductionGroups_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.SetTracerInitialOffset
// ()

void UKSBlueprintFunctionLibrary::SetTracerInitialOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.SetTracerInitialOffset");

	UKSBlueprintFunctionLibrary_SetTracerInitialOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ResetRenderTargetBuffer
// ()

void UKSBlueprintFunctionLibrary::ResetRenderTargetBuffer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ResetRenderTargetBuffer");

	UKSBlueprintFunctionLibrary_ResetRenderTargetBuffer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.RemoveRowFromLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::RemoveRowFromLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.RemoveRowFromLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_RemoveRowFromLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.QuickMeshMerge
// ()

void UKSBlueprintFunctionLibrary::QuickMeshMerge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.QuickMeshMerge");

	UKSBlueprintFunctionLibrary_QuickMeshMerge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ProcessTakePointHitDamage
// ()

void UKSBlueprintFunctionLibrary::ProcessTakePointHitDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ProcessTakePointHitDamage");

	UKSBlueprintFunctionLibrary_ProcessTakePointHitDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PrintStringInShipping
// ()

void UKSBlueprintFunctionLibrary::PrintStringInShipping()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PrintStringInShipping");

	UKSBlueprintFunctionLibrary_PrintStringInShipping_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PostEventKS
// ()

void UKSBlueprintFunctionLibrary::PostEventKS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PostEventKS");

	UKSBlueprintFunctionLibrary_PostEventKS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PostEvent
// ()

void UKSBlueprintFunctionLibrary::PostEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PostEvent");

	UKSBlueprintFunctionLibrary_PostEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.PlayWorldCameraShake1P3P
// ()

void UKSBlueprintFunctionLibrary::PlayWorldCameraShake1P3P()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.PlayWorldCameraShake1P3P");

	UKSBlueprintFunctionLibrary_PlayWorldCameraShake1P3P_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.MakeActivityReference
// ()

void UKSBlueprintFunctionLibrary::MakeActivityReference()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.MakeActivityReference");

	UKSBlueprintFunctionLibrary_MakeActivityReference_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.KSConvertRenderTargetToTexture2D
// ()

void UKSBlueprintFunctionLibrary::KSConvertRenderTargetToTexture2D()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.KSConvertRenderTargetToTexture2D");

	UKSBlueprintFunctionLibrary_KSConvertRenderTargetToTexture2D_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ItemHasToggleRelationship
// ()

void UKSBlueprintFunctionLibrary::ItemHasToggleRelationship()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ItemHasToggleRelationship");

	UKSBlueprintFunctionLibrary_ItemHasToggleRelationship_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsViewportWorld
// ()

void UKSBlueprintFunctionLibrary::IsViewportWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsViewportWorld");

	UKSBlueprintFunctionLibrary_IsViewportWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageTypeClass
// ()

void UKSBlueprintFunctionLibrary::IsRecurringDamageTypeClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageTypeClass");

	UKSBlueprintFunctionLibrary_IsRecurringDamageTypeClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageType
// ()

void UKSBlueprintFunctionLibrary::IsRecurringDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageType");

	UKSBlueprintFunctionLibrary_IsRecurringDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageCategory
// ()

void UKSBlueprintFunctionLibrary::IsRecurringDamageCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsRecurringDamageCategory");

	UKSBlueprintFunctionLibrary_IsRecurringDamageCategory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsKillCamWorld
// ()

void UKSBlueprintFunctionLibrary::IsKillCamWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsKillCamWorld");

	UKSBlueprintFunctionLibrary_IsKillCamWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsItemAvailable
// ()

void UKSBlueprintFunctionLibrary::IsItemAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsItemAvailable");

	UKSBlueprintFunctionLibrary_IsItemAvailable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsInViewportWorld
// ()

void UKSBlueprintFunctionLibrary::IsInViewportWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsInViewportWorld");

	UKSBlueprintFunctionLibrary_IsInViewportWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsInKillCamWorld
// ()

void UKSBlueprintFunctionLibrary::IsInKillCamWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsInKillCamWorld");

	UKSBlueprintFunctionLibrary_IsInKillCamWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsChunkInstalling
// ()

void UKSBlueprintFunctionLibrary::IsChunkInstalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsChunkInstalling");

	UKSBlueprintFunctionLibrary_IsChunkInstalling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsChunkAvailable
// ()

void UKSBlueprintFunctionLibrary::IsChunkAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsChunkAvailable");

	UKSBlueprintFunctionLibrary_IsChunkAvailable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsAssetAvailable
// ()

void UKSBlueprintFunctionLibrary::IsAssetAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsAssetAvailable");

	UKSBlueprintFunctionLibrary_IsAssetAvailable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.IsAnyChunkInstalling
// ()

void UKSBlueprintFunctionLibrary::IsAnyChunkInstalling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.IsAnyChunkInstalling");

	UKSBlueprintFunctionLibrary_IsAnyChunkInstalling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.HideOutline
// ()

void UKSBlueprintFunctionLibrary::HideOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.HideOutline");

	UKSBlueprintFunctionLibrary_HideOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetTotalRounds
// ()

void UKSBlueprintFunctionLibrary::GetTotalRounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetTotalRounds");

	UKSBlueprintFunctionLibrary_GetTotalRounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetTeammatesFor
// ()

void UKSBlueprintFunctionLibrary::GetTeammatesFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetTeammatesFor");

	UKSBlueprintFunctionLibrary_GetTeammatesFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetTeamFor
// ()

void UKSBlueprintFunctionLibrary::GetTeamFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetTeamFor");

	UKSBlueprintFunctionLibrary_GetTeamFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshSettingsLODNum
// ()

void UKSBlueprintFunctionLibrary::GetSkeletalMeshSettingsLODNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshSettingsLODNum");

	UKSBlueprintFunctionLibrary_GetSkeletalMeshSettingsLODNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshLODNum
// ()

void UKSBlueprintFunctionLibrary::GetSkeletalMeshLODNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetSkeletalMeshLODNum");

	UKSBlueprintFunctionLibrary_GetSkeletalMeshLODNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetSideForTeam
// ()

void UKSBlueprintFunctionLibrary::GetSideForTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetSideForTeam");

	UKSBlueprintFunctionLibrary_GetSideForTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetScreenSpaceAccuracyRadius
// ()

void UKSBlueprintFunctionLibrary::GetScreenSpaceAccuracyRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetScreenSpaceAccuracyRadius");

	UKSBlueprintFunctionLibrary_GetScreenSpaceAccuracyRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetRoundsToWin
// ()

void UKSBlueprintFunctionLibrary::GetRoundsToWin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetRoundsToWin");

	UKSBlueprintFunctionLibrary_GetRoundsToWin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetRandomDecalRotationForNormal
// ()

void UKSBlueprintFunctionLibrary::GetRandomDecalRotationForNormal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetRandomDecalRotationForNormal");

	UKSBlueprintFunctionLibrary_GetRandomDecalRotationForNormal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineParameters
// ()

void UKSBlueprintFunctionLibrary::GetOutlineParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineParameters");

	UKSBlueprintFunctionLibrary_GetOutlineParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineCustomDepth
// ()

void UKSBlueprintFunctionLibrary::GetOutlineCustomDepth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetOutlineCustomDepth");

	UKSBlueprintFunctionLibrary_GetOutlineCustomDepth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetNumSlotsForCosmeticSlot
// ()

void UKSBlueprintFunctionLibrary::GetNumSlotsForCosmeticSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetNumSlotsForCosmeticSlot");

	UKSBlueprintFunctionLibrary_GetNumSlotsForCosmeticSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetNumEventAssistantsForCombatEvent
// ()

void UKSBlueprintFunctionLibrary::GetNumEventAssistantsForCombatEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetNumEventAssistantsForCombatEvent");

	UKSBlueprintFunctionLibrary_GetNumEventAssistantsForCombatEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetNumberOfEmittersInSystem
// ()

void UKSBlueprintFunctionLibrary::GetNumberOfEmittersInSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetNumberOfEmittersInSystem");

	UKSBlueprintFunctionLibrary_GetNumberOfEmittersInSystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetNextEquipPoint
// ()

void UKSBlueprintFunctionLibrary::GetNextEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetNextEquipPoint");

	UKSBlueprintFunctionLibrary_GetNextEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetMinimapTextureForMap
// ()

void UKSBlueprintFunctionLibrary::GetMinimapTextureForMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetMinimapTextureForMap");

	UKSBlueprintFunctionLibrary_GetMinimapTextureForMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetMiniMapAssistant
// ()

void UKSBlueprintFunctionLibrary::GetMiniMapAssistant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetMiniMapAssistant");

	UKSBlueprintFunctionLibrary_GetMiniMapAssistant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetMeshOffsetForSimulatedCharacter
// ()

void UKSBlueprintFunctionLibrary::GetMeshOffsetForSimulatedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetMeshOffsetForSimulatedCharacter");

	UKSBlueprintFunctionLibrary_GetMeshOffsetForSimulatedCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetLocalPlayerController
// ()

void UKSBlueprintFunctionLibrary::GetLocalPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetLocalPlayerController");

	UKSBlueprintFunctionLibrary_GetLocalPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSWorldSettings
// ()

void UKSBlueprintFunctionLibrary::GetKSWorldSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSWorldSettings");

	UKSBlueprintFunctionLibrary_GetKSWorldSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_RoundGame
// ()

void UKSBlueprintFunctionLibrary::GetKSGameState_RoundGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_RoundGame");

	UKSBlueprintFunctionLibrary_GetKSGameState_RoundGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_NeutralBomb
// ()

void UKSBlueprintFunctionLibrary::GetKSGameState_NeutralBomb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_NeutralBomb");

	UKSBlueprintFunctionLibrary_GetKSGameState_NeutralBomb_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_Extraction
// ()

void UKSBlueprintFunctionLibrary::GetKSGameState_Extraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState_Extraction");

	UKSBlueprintFunctionLibrary_GetKSGameState_Extraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState
// ()

void UKSBlueprintFunctionLibrary::GetKSGameState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameState");

	UKSBlueprintFunctionLibrary_GetKSGameState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_RoundGame
// ()

void UKSBlueprintFunctionLibrary::GetKSGameMode_RoundGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_RoundGame");

	UKSBlueprintFunctionLibrary_GetKSGameMode_RoundGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_Modular
// ()

void UKSBlueprintFunctionLibrary::GetKSGameMode_Modular()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_Modular");

	UKSBlueprintFunctionLibrary_GetKSGameMode_Modular_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_Extraction
// ()

void UKSBlueprintFunctionLibrary::GetKSGameMode_Extraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode_Extraction");

	UKSBlueprintFunctionLibrary_GetKSGameMode_Extraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode
// ()

void UKSBlueprintFunctionLibrary::GetKSGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKSGameMode");

	UKSBlueprintFunctionLibrary_GetKSGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamForPlayer
// ()

void UKSBlueprintFunctionLibrary::GetKillCamForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamForPlayer");

	UKSBlueprintFunctionLibrary_GetKillCamForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamActorGuidFor
// ()

void UKSBlueprintFunctionLibrary::GetKillCamActorGuidFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetKillCamActorGuidFor");

	UKSBlueprintFunctionLibrary_GetKillCamActorGuidFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetGameplayTagByStringAndIndex
// ()

void UKSBlueprintFunctionLibrary::GetGameplayTagByStringAndIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetGameplayTagByStringAndIndex");

	UKSBlueprintFunctionLibrary_GetGameplayTagByStringAndIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetGameplayTagByNameAndIndex
// ()

void UKSBlueprintFunctionLibrary::GetGameplayTagByNameAndIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetGameplayTagByNameAndIndex");

	UKSBlueprintFunctionLibrary_GetGameplayTagByNameAndIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEventAssistantAtIndexForCombatEvent
// ()

void UKSBlueprintFunctionLibrary::GetEventAssistantAtIndexForCombatEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEventAssistantAtIndexForCombatEvent");

	UKSBlueprintFunctionLibrary_GetEventAssistantAtIndexForCombatEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEquipPointIndex
// ()

void UKSBlueprintFunctionLibrary::GetEquipPointIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEquipPointIndex");

	UKSBlueprintFunctionLibrary_GetEquipPointIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEquipPointAsStringWithoutIndex
// ()

void UKSBlueprintFunctionLibrary::GetEquipPointAsStringWithoutIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEquipPointAsStringWithoutIndex");

	UKSBlueprintFunctionLibrary_GetEquipPointAsStringWithoutIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEnemyTeamsFor
// ()

void UKSBlueprintFunctionLibrary::GetEnemyTeamsFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEnemyTeamsFor");

	UKSBlueprintFunctionLibrary_GetEnemyTeamsFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEnemiesFor
// ()

void UKSBlueprintFunctionLibrary::GetEnemiesFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEnemiesFor");

	UKSBlueprintFunctionLibrary_GetEnemiesFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetEndTraceLocation
// ()

void UKSBlueprintFunctionLibrary::GetEndTraceLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetEndTraceLocation");

	UKSBlueprintFunctionLibrary_GetEndTraceLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetCurrentFrameTimestamp
// ()

void UKSBlueprintFunctionLibrary::GetCurrentFrameTimestamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetCurrentFrameTimestamp");

	UKSBlueprintFunctionLibrary_GetCurrentFrameTimestamp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAnimMontageSectionLength
// ()

void UKSBlueprintFunctionLibrary::GetAnimMontageSectionLength()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAnimMontageSectionLength");

	UKSBlueprintFunctionLibrary_GetAnimMontageSectionLength_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAllWeaponComponents
// ()

void UKSBlueprintFunctionLibrary::GetAllWeaponComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAllWeaponComponents");

	UKSBlueprintFunctionLibrary_GetAllWeaponComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAllItemTableElements
// ()

void UKSBlueprintFunctionLibrary::GetAllItemTableElements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAllItemTableElements");

	UKSBlueprintFunctionLibrary_GetAllItemTableElements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.GetAllEquipment
// ()

void UKSBlueprintFunctionLibrary::GetAllEquipment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.GetAllEquipment");

	UKSBlueprintFunctionLibrary_GetAllEquipment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.FindSkinForLocalPlayer
// ()

void UKSBlueprintFunctionLibrary::FindSkinForLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.FindSkinForLocalPlayer");

	UKSBlueprintFunctionLibrary_FindSkinForLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.FadeOut
// ()

void UKSBlueprintFunctionLibrary::FadeOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.FadeOut");

	UKSBlueprintFunctionLibrary_FadeOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.FadeIn
// ()

void UKSBlueprintFunctionLibrary::FadeIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.FadeIn");

	UKSBlueprintFunctionLibrary_FadeIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ExportCSVData
// ()

void UKSBlueprintFunctionLibrary::ExportCSVData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ExportCSVData");

	UKSBlueprintFunctionLibrary_ExportCSVData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.CreateSphereComponentFor
// ()

void UKSBlueprintFunctionLibrary::CreateSphereComponentFor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.CreateSphereComponentFor");

	UKSBlueprintFunctionLibrary_CreateSphereComponentFor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.CreateRadialMenuCosmeticSlots
// ()

void UKSBlueprintFunctionLibrary::CreateRadialMenuCosmeticSlots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.CreateRadialMenuCosmeticSlots");

	UKSBlueprintFunctionLibrary_CreateRadialMenuCosmeticSlots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.ApplyOutlineParameters
// ()

void UKSBlueprintFunctionLibrary::ApplyOutlineParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.ApplyOutlineParameters");

	UKSBlueprintFunctionLibrary_ApplyOutlineParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddStaticMeshToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddStaticMeshToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddStaticMeshToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddStaticMeshToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddSkeletalMeshToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddSkeletalMeshToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddSkeletalMeshToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddSkeletalMeshToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddRowToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddRowToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddRowToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddRowToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddParticleSystemToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddParticleSystemToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddParticleSystemToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddParticleSystemToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddMaterialInterfaceToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddMaterialInterfaceToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddMaterialInterfaceToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddMaterialInterfaceToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddClassToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddClassToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddClassToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddClassToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddAudioEventToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddAudioEventToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddAudioEventToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddAudioEventToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBlueprintFunctionLibrary.AddAnimationAssetToLegacyAssetDataTable
// ()

void UKSBlueprintFunctionLibrary::AddAnimationAssetToLegacyAssetDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBlueprintFunctionLibrary.AddAnimationAssetToLegacyAssetDataTable");

	UKSBlueprintFunctionLibrary_AddAnimationAssetToLegacyAssetDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBorder.GetSoftSmallBorderIcon
// ()

void UKSBorder::GetSoftSmallBorderIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBorder.GetSoftSmallBorderIcon");

	UKSBorder_GetSoftSmallBorderIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBorder.GetSoftLargeBorderIcon
// ()

void UKSBorder::GetSoftLargeBorderIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBorder.GetSoftLargeBorderIcon");

	UKSBorder_GetSoftLargeBorderIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotEncounter.GetTotalWaveNumber
// ()

void UKSBotEncounter::GetTotalWaveNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotEncounter.GetTotalWaveNumber");

	UKSBotEncounter_GetTotalWaveNumber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotEncounter.GetEncounterName
// ()

void UKSBotEncounter::GetEncounterName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotEncounter.GetEncounterName");

	UKSBotEncounter_GetEncounterName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotEncounter.GetCurrentWaveNumber
// ()

void UKSBotEncounter::GetCurrentWaveNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotEncounter.GetCurrentWaveNumber");

	UKSBotEncounter_GetCurrentWaveNumber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotEncounter.GetCurrentWave
// ()

void UKSBotEncounter::GetCurrentWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotEncounter.GetCurrentWave");

	UKSBotEncounter_GetCurrentWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotEncounter.ChooseNSpawnTableRows
// ()

void UKSBotEncounter::ChooseNSpawnTableRows()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotEncounter.ChooseNSpawnTableRows");

	UKSBotEncounter_ChooseNSpawnTableRows_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotEncounter.AdvanceWave
// ()

void UKSBotEncounter::AdvanceWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotEncounter.AdvanceWave");

	UKSBotEncounter_AdvanceWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.UnhideSpawnedBots
// ()

void AKSBotFactory::UnhideSpawnedBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.UnhideSpawnedBots");

	AKSBotFactory_UnhideSpawnedBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.Spawn
// ()

void AKSBotFactory::Spawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.Spawn");

	AKSBotFactory_Spawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.ShuffleSpawnPoints
// ()

void AKSBotFactory::ShuffleSpawnPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.ShuffleSpawnPoints");

	AKSBotFactory_ShuffleSpawnPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetWayPointSet
// ()

void AKSBotFactory::SetWayPointSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetWayPointSet");

	AKSBotFactory_SetWayPointSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetSpawnPoints
// ()

void AKSBotFactory::SetSpawnPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetSpawnPoints");

	AKSBotFactory_SetSpawnPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetSideNum
// ()

void AKSBotFactory::SetSideNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetSideNum");

	AKSBotFactory_SetSideNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetShouldReverseWayPointSetDirection
// ()

void AKSBotFactory::SetShouldReverseWayPointSetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetShouldReverseWayPointSetDirection");

	AKSBotFactory_SetShouldReverseWayPointSetDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.SetBotSpawnCollection
// ()

void AKSBotFactory::SetBotSpawnCollection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.SetBotSpawnCollection");

	AKSBotFactory_SetBotSpawnCollection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.RestartBots
// ()

void AKSBotFactory::RestartBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.RestartBots");

	AKSBotFactory_RestartBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnSpawnedBotDestroyed
// ()

void AKSBotFactory::OnSpawnedBotDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnSpawnedBotDestroyed");

	AKSBotFactory_OnSpawnedBotDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRoundStart
// ()

void AKSBotFactory::OnRoundStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRoundStart");

	AKSBotFactory_OnRoundStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRoundSetup
// ()

void AKSBotFactory::OnRoundSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRoundSetup");

	AKSBotFactory_OnRoundSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRelevancyOverlapEnd
// ()

void AKSBotFactory::OnRelevancyOverlapEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRelevancyOverlapEnd");

	AKSBotFactory_OnRelevancyOverlapEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnRelevancyOverlapBegin
// ()

void AKSBotFactory::OnRelevancyOverlapBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnRelevancyOverlapBegin");

	AKSBotFactory_OnRelevancyOverlapBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnPhaseChanged
// ()

void AKSBotFactory::OnPhaseChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnPhaseChanged");

	AKSBotFactory_OnPhaseChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnExtractionPhaseTimeout
// ()

void AKSBotFactory::OnExtractionPhaseTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnExtractionPhaseTimeout");

	AKSBotFactory_OnExtractionPhaseTimeout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnAllPlayersFinishedPrePrep
// ()

void AKSBotFactory::OnAllPlayersFinishedPrePrep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnAllPlayersFinishedPrePrep");

	AKSBotFactory_OnAllPlayersFinishedPrePrep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.OnAlarmPeriodStart
// ()

void AKSBotFactory::OnAlarmPeriodStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.OnAlarmPeriodStart");

	AKSBotFactory_OnAlarmPeriodStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.HideSpawnedBots
// ()

void AKSBotFactory::HideSpawnedBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.HideSpawnedBots");

	AKSBotFactory_HideSpawnedBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBotFactory.GetTeamSize
// ()

void AKSBotFactory::GetTeamSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBotFactory.GetTeamSize");

	AKSBotFactory_GetTeamSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.YieldToRealTimerExpired
// ()

void AKSBuild::YieldToRealTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.YieldToRealTimerExpired");

	AKSBuild_YieldToRealTimerExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.SelfDestructAfterDelay
// ()

void AKSBuild::SelfDestructAfterDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.SelfDestructAfterDelay");

	AKSBuild_SelfDestructAfterDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.SelfDestruct
// ()

void AKSBuild::SelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.SelfDestruct");

	AKSBuild_SelfDestruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnSelfDestructDelayStart
// ()

void AKSBuild::OnSelfDestructDelayStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnSelfDestructDelayStart");

	AKSBuild_OnSelfDestructDelayStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnSelfDestruct
// ()

void AKSBuild::OnSelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnSelfDestruct");

	AKSBuild_OnSelfDestruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnRep_Health
// ()

void AKSBuild::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnRep_Health");

	AKSBuild_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnRadialDamageTaken
// ()

void AKSBuild::OnRadialDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnRadialDamageTaken");

	AKSBuild_OnRadialDamageTaken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnPointDamageTaken
// ()

void AKSBuild::OnPointDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnPointDamageTaken");

	AKSBuild_OnPointDamageTaken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnKilled
// ()

void AKSBuild::OnKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnKilled");

	AKSBuild_OnKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnHealthChanged
// ()

void AKSBuild::OnHealthChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnHealthChanged");

	AKSBuild_OnHealthChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.OnBuildComponentDestroyed
// ()

void AKSBuild::OnBuildComponentDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.OnBuildComponentDestroyed");

	AKSBuild_OnBuildComponentDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.KillDestructionTimerComplete
// ()

void AKSBuild::KillDestructionTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.KillDestructionTimerComplete");

	AKSBuild_KillDestructionTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.GetRealActorTakeoverDelay
// ()

void AKSBuild::GetRealActorTakeoverDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetRealActorTakeoverDelay");

	AKSBuild_GetRealActorTakeoverDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.GetPlayerStateOwner
// ()

void AKSBuild::GetPlayerStateOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetPlayerStateOwner");

	AKSBuild_GetPlayerStateOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.GetOutlineableMeshes
// ()

void AKSBuild::GetOutlineableMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetOutlineableMeshes");

	AKSBuild_GetOutlineableMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.GetCharacterOwner
// ()

void AKSBuild::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetCharacterOwner");

	AKSBuild_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.GetBuildWeaponAsset
// ()

void AKSBuild::GetBuildWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.GetBuildWeaponAsset");

	AKSBuild_GetBuildWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.DestroyBuildComponent
// ()

void AKSBuild::DestroyBuildComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.DestroyBuildComponent");

	AKSBuild_DestroyBuildComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.ComponentTakeDamage
// ()

void AKSBuild::ComponentTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.ComponentTakeDamage");

	AKSBuild_ComponentTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.BroadcastSelfDestructStart
// ()

void AKSBuild::BroadcastSelfDestructStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.BroadcastSelfDestructStart");

	AKSBuild_BroadcastSelfDestructStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.BroadcastSelfDestruct
// ()

void AKSBuild::BroadcastSelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.BroadcastSelfDestruct");

	AKSBuild_BroadcastSelfDestruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild.BroadcastDestroyBuildComponent
// ()

void AKSBuild::BroadcastDestroyBuildComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild.BroadcastDestroyBuildComponent");

	AKSBuild_BroadcastDestroyBuildComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnRep_Active
// ()

void AKSBuild_APS::OnRep_Active()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnRep_Active");

	AKSBuild_APS_OnRep_Active_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnProjectileIntercepted
// ()

void AKSBuild_APS::OnProjectileIntercepted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnProjectileIntercepted");

	AKSBuild_APS_OnProjectileIntercepted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnMarkedProjectileDestroyed
// ()

void AKSBuild_APS::OnMarkedProjectileDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnMarkedProjectileDestroyed");

	AKSBuild_APS_OnMarkedProjectileDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnDeactivated
// ()

void AKSBuild_APS::OnDeactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnDeactivated");

	AKSBuild_APS_OnDeactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnActorOverlapBegin
// ()

void AKSBuild_APS::OnActorOverlapBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnActorOverlapBegin");

	AKSBuild_APS_OnActorOverlapBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.OnActivated
// ()

void AKSBuild_APS::OnActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.OnActivated");

	AKSBuild_APS_OnActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSBuild_APS.BroadcastProjectileIntercept
// ()

void AKSBuild_APS::BroadcastProjectileIntercept()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSBuild_APS.BroadcastProjectileIntercept");

	AKSBuild_APS_BroadcastProjectileIntercept_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.StopActiveCarry
// ()

void UKSCarriedInterface::StopActiveCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.StopActiveCarry");

	UKSCarriedInterface_StopActiveCarry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.IsBeingCarriedRightNow
// ()

void UKSCarriedInterface::IsBeingCarriedRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.IsBeingCarriedRightNow");

	UKSCarriedInterface_IsBeingCarriedRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.GetHauler
// ()

void UKSCarriedInterface::GetHauler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.GetHauler");

	UKSCarriedInterface_GetHauler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.GetAsActor
// ()

void UKSCarriedInterface::GetAsActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.GetAsActor");

	UKSCarriedInterface_GetAsActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.CanBeCarriedByRightNow
// ()

void UKSCarriedInterface::CanBeCarriedByRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.CanBeCarriedByRightNow");

	UKSCarriedInterface_CanBeCarriedByRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCarriedInterface.CanBeCarriedBy
// ()

void UKSCarriedInterface::CanBeCarriedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCarriedInterface.CanBeCarriedBy");

	UKSCarriedInterface_CanBeCarriedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.StateTimerExpired
// ()

void AKSCashExtractionPoint::StateTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.StateTimerExpired");

	AKSCashExtractionPoint_StateTimerExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.ShouldShowLabel
// ()

void AKSCashExtractionPoint::ShouldShowLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.ShouldShowLabel");

	AKSCashExtractionPoint_ShouldShowLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.OnRep_ContainedCash
// ()

void AKSCashExtractionPoint::OnRep_ContainedCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.OnRep_ContainedCash");

	AKSCashExtractionPoint_OnRep_ContainedCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.HideCashPoint
// ()

void AKSCashExtractionPoint::HideCashPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.HideCashPoint");

	AKSCashExtractionPoint_HideCashPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.GetRemainingTimeInState
// ()

void AKSCashExtractionPoint::GetRemainingTimeInState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.GetRemainingTimeInState");

	AKSCashExtractionPoint_GetRemainingTimeInState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCashExtractionPoint.ActivateCashPoint
// ()

void AKSCashExtractionPoint::ActivateCashPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCashExtractionPoint.ActivateCashPoint");

	AKSCashExtractionPoint_ActivateCashPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.UpdateDebugHealthVisibility
// ()

void AKSCharacterBase::UpdateDebugHealthVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.UpdateDebugHealthVisibility");

	AKSCharacterBase_UpdateDebugHealthVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.UnSubmerge
// ()

void AKSCharacterBase::UnSubmerge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.UnSubmerge");

	AKSCharacterBase_UnSubmerge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Submerge
// ()

void AKSCharacterBase::Submerge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Submerge");

	AKSCharacterBase_Submerge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StopSprint
// ()

void AKSCharacterBase::StopSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StopSprint");

	AKSCharacterBase_StopSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StopRegenerationTimers
// ()

void AKSCharacterBase::StopRegenerationTimers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StopRegenerationTimers");

	AKSCharacterBase_StopRegenerationTimers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StartSprint
// ()

void AKSCharacterBase::StartSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StartSprint");

	AKSCharacterBase_StartSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.StartCameraShake
// ()

void AKSCharacterBase::StartCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.StartCameraShake");

	AKSCharacterBase_StartCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ShowDebugLocation
// ()

void AKSCharacterBase::ShowDebugLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ShowDebugLocation");

	AKSCharacterBase_ShowDebugLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.SetRevealed
// ()

void AKSCharacterBase::SetRevealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.SetRevealed");

	AKSCharacterBase_SetRevealed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.SetHealth
// ()

void AKSCharacterBase::SetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.SetHealth");

	AKSCharacterBase_SetHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.RevealToWholeTeam
// ()

void AKSCharacterBase::RevealToWholeTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.RevealToWholeTeam");

	AKSCharacterBase_RevealToWholeTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.RevealForDuration
// ()

void AKSCharacterBase::RevealForDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.RevealForDuration");

	AKSCharacterBase_RevealForDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Reveal
// ()

void AKSCharacterBase::Reveal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Reveal");

	AKSCharacterBase_Reveal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ResetHealthRegeneration
// ()

void AKSCharacterBase::ResetHealthRegeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ResetHealthRegeneration");

	AKSCharacterBase_ResetHealthRegeneration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ResetHealthRegenDelay
// ()

void AKSCharacterBase::ResetHealthRegenDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ResetHealthRegenDelay");

	AKSCharacterBase_ResetHealthRegenDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ResetFreeFallState
// ()

void AKSCharacterBase::ResetFreeFallState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ResetFreeFallState");

	AKSCharacterBase_ResetFreeFallState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.RemoveCameraShake
// ()

void AKSCharacterBase::RemoveCameraShake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.RemoveCameraShake");

	AKSCharacterBase_RemoveCameraShake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OverhealDecayTick
// ()

void AKSCharacterBase::OverhealDecayTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OverhealDecayTick");

	AKSCharacterBase_OverhealDecayTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Overheal
// ()

void AKSCharacterBase::Overheal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Overheal");

	AKSCharacterBase_Overheal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnTeamUpdated
// ()

void AKSCharacterBase::OnTeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnTeamUpdated");

	AKSCharacterBase_OnTeamUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopDefaultAim
// ()

void AKSCharacterBase::OnStopDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopDefaultAim");

	AKSCharacterBase_OnStopDefaultAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopAimOverShoulder
// ()

void AKSCharacterBase::OnStopAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopAimOverShoulder");

	AKSCharacterBase_OnStopAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopAimDownSights
// ()

void AKSCharacterBase::OnStopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopAimDownSights");

	AKSCharacterBase_OnStopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStopAimAlternate
// ()

void AKSCharacterBase::OnStopAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStopAimAlternate");

	AKSCharacterBase_OnStopAimAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartDefaultAim
// ()

void AKSCharacterBase::OnStartDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartDefaultAim");

	AKSCharacterBase_OnStartDefaultAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartAimOverShoulder
// ()

void AKSCharacterBase::OnStartAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartAimOverShoulder");

	AKSCharacterBase_OnStartAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartAimDownSights
// ()

void AKSCharacterBase::OnStartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartAimDownSights");

	AKSCharacterBase_OnStartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnStartAimAlternate
// ()

void AKSCharacterBase::OnStartAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnStartAimAlternate");

	AKSCharacterBase_OnStartAimAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_Sprint
// ()

void AKSCharacterBase::OnRep_Sprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_Sprint");

	AKSCharacterBase_OnRep_Sprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_Silhouette
// ()

void AKSCharacterBase::OnRep_Silhouette()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_Silhouette");

	AKSCharacterBase_OnRep_Silhouette_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_ReplicatedStun
// ()

void AKSCharacterBase::OnRep_ReplicatedStun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_ReplicatedStun");

	AKSCharacterBase_OnRep_ReplicatedStun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_ReplicatedAimState
// ()

void AKSCharacterBase::OnRep_ReplicatedAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_ReplicatedAimState");

	AKSCharacterBase_OnRep_ReplicatedAimState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_ReplicatedAbilityMovement
// ()

void AKSCharacterBase::OnRep_ReplicatedAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_ReplicatedAbilityMovement");

	AKSCharacterBase_OnRep_ReplicatedAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_PowerSlide
// ()

void AKSCharacterBase::OnRep_PowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_PowerSlide");

	AKSCharacterBase_OnRep_PowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_MantleInfo
// ()

void AKSCharacterBase::OnRep_MantleInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_MantleInfo");

	AKSCharacterBase_OnRep_MantleInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_LungeInfo
// ()

void AKSCharacterBase::OnRep_LungeInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_LungeInfo");

	AKSCharacterBase_OnRep_LungeInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_IsSubmerged
// ()

void AKSCharacterBase::OnRep_IsSubmerged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_IsSubmerged");

	AKSCharacterBase_OnRep_IsSubmerged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_DeathState
// ()

void AKSCharacterBase::OnRep_DeathState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_DeathState");

	AKSCharacterBase_OnRep_DeathState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_CurrentOverheal
// ()

void AKSCharacterBase::OnRep_CurrentOverheal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_CurrentOverheal");

	AKSCharacterBase_OnRep_CurrentOverheal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_CurrentLungCapacity
// ()

void AKSCharacterBase::OnRep_CurrentLungCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_CurrentLungCapacity");

	AKSCharacterBase_OnRep_CurrentLungCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnRep_BackupPlayerState
// ()

void AKSCharacterBase::OnRep_BackupPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnRep_BackupPlayerState");

	AKSCharacterBase_OnRep_BackupPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnLeaveTeam
// ()

void AKSCharacterBase::OnLeaveTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnLeaveTeam");

	AKSCharacterBase_OnLeaveTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnJoinTeam
// ()

void AKSCharacterBase::OnJoinTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnJoinTeam");

	AKSCharacterBase_OnJoinTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnEndPowerSlide
// ()

void AKSCharacterBase::OnEndPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnEndPowerSlide");

	AKSCharacterBase_OnEndPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.OnBeginPowerSlide
// ()

void AKSCharacterBase::OnBeginPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.OnBeginPowerSlide");

	AKSCharacterBase_OnBeginPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.LockoutMovement
// ()

void AKSCharacterBase::LockoutMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.LockoutMovement");

	AKSCharacterBase_LockoutMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsUnderwater
// ()

void AKSCharacterBase::IsUnderwater()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsUnderwater");

	AKSCharacterBase_IsUnderwater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsThermalDetectable
// ()

void AKSCharacterBase::IsThermalDetectable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsThermalDetectable");

	AKSCharacterBase_IsThermalDetectable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsStunned
// ()

void AKSCharacterBase::IsStunned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsStunned");

	AKSCharacterBase_IsStunned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsSprinting
// ()

void AKSCharacterBase::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsSprinting");

	AKSCharacterBase_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsRevealPermanent
// ()

void AKSCharacterBase::IsRevealPermanent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsRevealPermanent");

	AKSCharacterBase_IsRevealPermanent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsRevealedToLocalPlayer
// ()

void AKSCharacterBase::IsRevealedToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsRevealedToLocalPlayer");

	AKSCharacterBase_IsRevealedToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsRevealed
// ()

void AKSCharacterBase::IsRevealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsRevealed");

	AKSCharacterBase_IsRevealed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsPlayingEmote
// ()

void AKSCharacterBase::IsPlayingEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsPlayingEmote");

	AKSCharacterBase_IsPlayingEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsLunging
// ()

void AKSCharacterBase::IsLunging()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsLunging");

	AKSCharacterBase_IsLunging_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsLocallyViewed
// ()

void AKSCharacterBase::IsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsLocallyViewed");

	AKSCharacterBase_IsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsLaunched
// ()

void AKSCharacterBase::IsLaunched()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsLaunched");

	AKSCharacterBase_IsLaunched_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsInPowerSlide
// ()

void AKSCharacterBase::IsInPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsInPowerSlide");

	AKSCharacterBase_IsInPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsInHardLandLockout
// ()

void AKSCharacterBase::IsInHardLandLockout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsInHardLandLockout");

	AKSCharacterBase_IsInHardLandLockout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsInAimTransition
// ()

void AKSCharacterBase::IsInAimTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsInAimTransition");

	AKSCharacterBase_IsInAimTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsDeadOrDestroyed
// ()

void AKSCharacterBase::IsDeadOrDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsDeadOrDestroyed");

	AKSCharacterBase_IsDeadOrDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsBot
// ()

void AKSCharacterBase::IsBot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsBot");

	AKSCharacterBase_IsBot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsAimingOverShoulder
// ()

void AKSCharacterBase::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAimingOverShoulder");

	AKSCharacterBase_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsAimingDownSights
// ()

void AKSCharacterBase::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAimingDownSights");

	AKSCharacterBase_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsAimingAlternate
// ()

void AKSCharacterBase::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAimingAlternate");

	AKSCharacterBase_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsAiming
// ()

void AKSCharacterBase::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAiming");

	AKSCharacterBase_IsAiming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.IsAbilityMoving
// ()

void AKSCharacterBase::IsAbilityMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.IsAbilityMoving");

	AKSCharacterBase_IsAbilityMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenerationTick
// ()

void AKSCharacterBase::HealthRegenerationTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenerationTick");

	AKSCharacterBase_HealthRegenerationTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenerationStopped
// ()

void AKSCharacterBase::HealthRegenerationStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenerationStopped");

	AKSCharacterBase_HealthRegenerationStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenerationStarted
// ()

void AKSCharacterBase::HealthRegenerationStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenerationStarted");

	AKSCharacterBase_HealthRegenerationStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenDelayTimerTick
// ()

void AKSCharacterBase::HealthRegenDelayTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenDelayTimerTick");

	AKSCharacterBase_HealthRegenDelayTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenDelayTimerComplete
// ()

void AKSCharacterBase::HealthRegenDelayTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenDelayTimerComplete");

	AKSCharacterBase_HealthRegenDelayTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HealthRegenDelayTimerActive
// ()

void AKSCharacterBase::HealthRegenDelayTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HealthRegenDelayTimerActive");

	AKSCharacterBase_HealthRegenDelayTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.Heal
// ()

void AKSCharacterBase::Heal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.Heal");

	AKSCharacterBase_Heal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.HasCharacterSocket
// ()

void AKSCharacterBase::HasCharacterSocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.HasCharacterSocket");

	AKSCharacterBase_HasCharacterSocket_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetZiplineAdjustHeight
// ()

void AKSCharacterBase::GetZiplineAdjustHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetZiplineAdjustHeight");

	AKSCharacterBase_GetZiplineAdjustHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetStartSpot
// ()

void AKSCharacterBase::GetStartSpot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetStartSpot");

	AKSCharacterBase_GetStartSpot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetReplicatedAimState
// ()

void AKSCharacterBase::GetReplicatedAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetReplicatedAimState");

	AKSCharacterBase_GetReplicatedAimState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetPowerSlideProgress
// ()

void AKSCharacterBase::GetPowerSlideProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetPowerSlideProgress");

	AKSCharacterBase_GetPowerSlideProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetPowerSlideAngle
// ()

void AKSCharacterBase::GetPowerSlideAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetPowerSlideAngle");

	AKSCharacterBase_GetPowerSlideAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetMeleeThrowTransform
// ()

void AKSCharacterBase::GetMeleeThrowTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMeleeThrowTransform");

	AKSCharacterBase_GetMeleeThrowTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetMeleeThrowLocation
// ()

void AKSCharacterBase::GetMeleeThrowLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMeleeThrowLocation");

	AKSCharacterBase_GetMeleeThrowLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetMaximumLungCapacity
// ()

void AKSCharacterBase::GetMaximumLungCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMaximumLungCapacity");

	AKSCharacterBase_GetMaximumLungCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetMaxHealth
// ()

void AKSCharacterBase::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetMaxHealth");

	AKSCharacterBase_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetLungRecoveryTime
// ()

void AKSCharacterBase::GetLungRecoveryTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetLungRecoveryTime");

	AKSCharacterBase_GetLungRecoveryTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetLastReplicatedAimState
// ()

void AKSCharacterBase::GetLastReplicatedAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetLastReplicatedAimState");

	AKSCharacterBase_GetLastReplicatedAimState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetKSPlayerState
// ()

void AKSCharacterBase::GetKSPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSPlayerState");

	AKSCharacterBase_GetKSPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetKSMovementComponent
// ()

void AKSCharacterBase::GetKSMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSMovementComponent");

	AKSCharacterBase_GetKSMovementComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetKSCharacterAnimInst
// ()

void AKSCharacterBase::GetKSCharacterAnimInst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSCharacterAnimInst");

	AKSCharacterBase_GetKSCharacterAnimInst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetKSCharacter
// ()

void AKSCharacterBase::GetKSCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSCharacter");

	AKSCharacterBase_GetKSCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetKSBestPlayerState
// ()

void AKSCharacterBase::GetKSBestPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSBestPlayerState");

	AKSCharacterBase_GetKSBestPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetKSAnimInstance
// ()

void AKSCharacterBase::GetKSAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetKSAnimInstance");

	AKSCharacterBase_GetKSAnimInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetInteractionState
// ()

void AKSCharacterBase::GetInteractionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetInteractionState");

	AKSCharacterBase_GetInteractionState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetImmediateDeathRagdoll
// ()

void AKSCharacterBase::GetImmediateDeathRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetImmediateDeathRagdoll");

	AKSCharacterBase_GetImmediateDeathRagdoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetHealthRegenDelayTime
// ()

void AKSCharacterBase::GetHealthRegenDelayTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetHealthRegenDelayTime");

	AKSCharacterBase_GetHealthRegenDelayTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetHealthPct
// ()

void AKSCharacterBase::GetHealthPct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetHealthPct");

	AKSCharacterBase_GetHealthPct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetHealth
// ()

void AKSCharacterBase::GetHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetHealth");

	AKSCharacterBase_GetHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetGrenadeThrowTransform
// ()

void AKSCharacterBase::GetGrenadeThrowTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetGrenadeThrowTransform");

	AKSCharacterBase_GetGrenadeThrowTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetGrenadeThrowLocation
// ()

void AKSCharacterBase::GetGrenadeThrowLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetGrenadeThrowLocation");

	AKSCharacterBase_GetGrenadeThrowLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetDeathState
// ()

void AKSCharacterBase::GetDeathState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetDeathState");

	AKSCharacterBase_GetDeathState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCurrentOverheal
// ()

void AKSCharacterBase::GetCurrentOverheal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentOverheal");

	AKSCharacterBase_GetCurrentOverheal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCurrentLungCapacity
// ()

void AKSCharacterBase::GetCurrentLungCapacity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentLungCapacity");

	AKSCharacterBase_GetCurrentLungCapacity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCurrentDesiredMovementDirection
// ()

void AKSCharacterBase::GetCurrentDesiredMovementDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentDesiredMovementDirection");

	AKSCharacterBase_GetCurrentDesiredMovementDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCurrentAimState
// ()

void AKSCharacterBase::GetCurrentAimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentAimState");

	AKSCharacterBase_GetCurrentAimState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCurrentAccelDirection
// ()

void AKSCharacterBase::GetCurrentAccelDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCurrentAccelDirection");

	AKSCharacterBase_GetCurrentAccelDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCharacterSocketTransform
// ()

void AKSCharacterBase::GetCharacterSocketTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCharacterSocketTransform");

	AKSCharacterBase_GetCharacterSocketTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCharacterSocketRotator
// ()

void AKSCharacterBase::GetCharacterSocketRotator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCharacterSocketRotator");

	AKSCharacterBase_GetCharacterSocketRotator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetCharacterSocketLocation
// ()

void AKSCharacterBase::GetCharacterSocketLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetCharacterSocketLocation");

	AKSCharacterBase_GetCharacterSocketLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetBestPlayerState
// ()

void AKSCharacterBase::GetBestPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetBestPlayerState");

	AKSCharacterBase_GetBestPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.GetBackupPlayerState
// ()

void AKSCharacterBase::GetBackupPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.GetBackupPlayerState");

	AKSCharacterBase_GetBackupPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ForceStartHealthRegeneration
// ()

void AKSCharacterBase::ForceStartHealthRegeneration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ForceStartHealthRegeneration");

	AKSCharacterBase_ForceStartHealthRegeneration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.ForceSilhouette
// ()

void AKSCharacterBase::ForceSilhouette()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.ForceSilhouette");

	AKSCharacterBase_ForceSilhouette_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.EndAbilityMovement
// ()

void AKSCharacterBase::EndAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.EndAbilityMovement");

	AKSCharacterBase_EndAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.DoStun
// ()

void AKSCharacterBase::DoStun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.DoStun");

	AKSCharacterBase_DoStun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.DoHardLandAvoid
// ()

void AKSCharacterBase::DoHardLandAvoid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.DoHardLandAvoid");

	AKSCharacterBase_DoHardLandAvoid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.DoHardLand
// ()

void AKSCharacterBase::DoHardLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.DoHardLand");

	AKSCharacterBase_DoHardLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.CanViewDebugHealth
// ()

void AKSCharacterBase::CanViewDebugHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.CanViewDebugHealth");

	AKSCharacterBase_CanViewDebugHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BroadcastInstantInteraction
// ()

void AKSCharacterBase::BroadcastInstantInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BroadcastInstantInteraction");

	AKSCharacterBase_BroadcastInstantInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BroadcastHealthRegenerationStopped
// ()

void AKSCharacterBase::BroadcastHealthRegenerationStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BroadcastHealthRegenerationStopped");

	AKSCharacterBase_BroadcastHealthRegenerationStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BroadcastHardLandAvoid
// ()

void AKSCharacterBase::BroadcastHardLandAvoid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BroadcastHardLandAvoid");

	AKSCharacterBase_BroadcastHardLandAvoid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStopSwimming
// ()

void AKSCharacterBase::BlueprintOnStopSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStopSwimming");

	AKSCharacterBase_BlueprintOnStopSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStopSubmerged
// ()

void AKSCharacterBase::BlueprintOnStopSubmerged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStopSubmerged");

	AKSCharacterBase_BlueprintOnStopSubmerged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStartSwimming
// ()

void AKSCharacterBase::BlueprintOnStartSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStartSwimming");

	AKSCharacterBase_BlueprintOnStartSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BlueprintOnStartSubmerged
// ()

void AKSCharacterBase::BlueprintOnStartSubmerged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BlueprintOnStartSubmerged");

	AKSCharacterBase_BlueprintOnStartSubmerged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BeginDodgeRoll
// ()

void AKSCharacterBase::BeginDodgeRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BeginDodgeRoll");

	AKSCharacterBase_BeginDodgeRoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.BeginAbilityMovement
// ()

void AKSCharacterBase::BeginAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.BeginAbilityMovement");

	AKSCharacterBase_BeginAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.AllowSprintingRightNow
// ()

void AKSCharacterBase::AllowSprintingRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.AllowSprintingRightNow");

	AKSCharacterBase_AllowSprintingRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterBase.AllowPowerSlideRightNow
// ()

void AKSCharacterBase::AllowPowerSlideRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterBase.AllowPowerSlideRightNow");

	AKSCharacterBase_AllowPowerSlideRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnTakeDamage
// ()

void AKSCharacter::ViewedPawnTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnTakeDamage");

	AKSCharacter_ViewedPawnTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnNoLongerRevealed
// ()

void AKSCharacter::ViewedPawnNoLongerRevealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnNoLongerRevealed");

	AKSCharacter_ViewedPawnNoLongerRevealed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnInstigatedHeadshot
// ()

void AKSCharacter::ViewedPawnInstigatedHeadshot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnInstigatedHeadshot");

	AKSCharacter_ViewedPawnInstigatedHeadshot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnInstigatedDamage
// ()

void AKSCharacter::ViewedPawnInstigatedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnInstigatedDamage");

	AKSCharacter_ViewedPawnInstigatedDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ViewedPawnHasBeenRevealed
// ()

void AKSCharacter::ViewedPawnHasBeenRevealed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ViewedPawnHasBeenRevealed");

	AKSCharacter_ViewedPawnHasBeenRevealed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.VehicleStateChanged
// ()

void AKSCharacter::VehicleStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.VehicleStateChanged");

	AKSCharacter_VehicleStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateNavModification
// ()

void AKSCharacter::UpdateNavModification()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateNavModification");

	AKSCharacter_UpdateNavModification_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateMantleHands
// ()

void AKSCharacter::UpdateMantleHands()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateMantleHands");

	AKSCharacter_UpdateMantleHands_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateHoveredInteractable
// ()

void AKSCharacter::UpdateHoveredInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateHoveredInteractable");

	AKSCharacter_UpdateHoveredInteractable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateAmmo
// ()

void AKSCharacter::UpdateAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateAmmo");

	AKSCharacter_UpdateAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UpdateAimStatus
// ()

void AKSCharacter::UpdateAimStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UpdateAimStatus");

	AKSCharacter_UpdateAimStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnSelectToRevive
// ()

void AKSCharacter::UnSelectToRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnSelectToRevive");

	AKSCharacter_UnSelectToRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnregisterFootstepOverride
// ()

void AKSCharacter::UnregisterFootstepOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnregisterFootstepOverride");

	AKSCharacter_UnregisterFootstepOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnlockShoulderSwap
// ()

void AKSCharacter::UnlockShoulderSwap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnlockShoulderSwap");

	AKSCharacter_UnlockShoulderSwap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnhideZiplinePulley
// ()

void AKSCharacter::UnhideZiplinePulley()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnhideZiplinePulley");

	AKSCharacter_UnhideZiplinePulley_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnhideUplineDevice
// ()

void AKSCharacter::UnhideUplineDevice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnhideUplineDevice");

	AKSCharacter_UnhideUplineDevice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.UnHideADSMaterials
// ()

void AKSCharacter::UnHideADSMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.UnHideADSMaterials");

	AKSCharacter_UnHideADSMaterials_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToStopRagdoll
// ()

void AKSCharacter::TryToStopRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToStopRagdoll");

	AKSCharacter_TryToStopRagdoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToStopAiming
// ()

void AKSCharacter::TryToStopAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToStopAiming");

	AKSCharacter_TryToStopAiming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToAimOverShoulder
// ()

void AKSCharacter::TryToAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToAimOverShoulder");

	AKSCharacter_TryToAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToAimDownSights
// ()

void AKSCharacter::TryToAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToAimDownSights");

	AKSCharacter_TryToAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TryToAimAlternate
// ()

void AKSCharacter::TryToAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TryToAimAlternate");

	AKSCharacter_TryToAimAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleSprint
// ()

void AKSCharacter::ToggleSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleSprint");

	AKSCharacter_ToggleSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleScopeZoomIndexUp
// ()

void AKSCharacter::ToggleScopeZoomIndexUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleScopeZoomIndexUp");

	AKSCharacter_ToggleScopeZoomIndexUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleScopeZoomIndexLoop
// ()

void AKSCharacter::ToggleScopeZoomIndexLoop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleScopeZoomIndexLoop");

	AKSCharacter_ToggleScopeZoomIndexLoop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleScopeZoomIndexDown
// ()

void AKSCharacter::ToggleScopeZoomIndexDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleScopeZoomIndexDown");

	AKSCharacter_ToggleScopeZoomIndexDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleCrouch
// ()

void AKSCharacter::ToggleCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleCrouch");

	AKSCharacter_ToggleCrouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ToggleCarry
// ()

void AKSCharacter::ToggleCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ToggleCarry");

	AKSCharacter_ToggleCarry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ThrowGrenadeReleased
// ()

void AKSCharacter::ThrowGrenadeReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ThrowGrenadeReleased");

	AKSCharacter_ThrowGrenadeReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ThrowGrenadePressed
// ()

void AKSCharacter::ThrowGrenadePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ThrowGrenadePressed");

	AKSCharacter_ThrowGrenadePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.TagForDownAssist
// ()

void AKSCharacter::TagForDownAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.TagForDownAssist");

	AKSCharacter_TagForDownAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapWeapon
// ()

void AKSCharacter::SwapWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapWeapon");

	AKSCharacter_SwapWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToSecondary
// ()

void AKSCharacter::SwapToSecondary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToSecondary");

	AKSCharacter_SwapToSecondary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPrimary
// ()

void AKSCharacter::SwapToPrimary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPrimary");

	AKSCharacter_SwapToPrimary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPreviousWeaponWithLoadedClip
// ()

void AKSCharacter::SwapToPreviousWeaponWithLoadedClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPreviousWeaponWithLoadedClip");

	AKSCharacter_SwapToPreviousWeaponWithLoadedClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPreviousWeaponWithAmmo
// ()

void AKSCharacter::SwapToPreviousWeaponWithAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPreviousWeaponWithAmmo");

	AKSCharacter_SwapToPreviousWeaponWithAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToPreviousWeapon
// ()

void AKSCharacter::SwapToPreviousWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToPreviousWeapon");

	AKSCharacter_SwapToPreviousWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextWeaponWithLoadedClip
// ()

void AKSCharacter::SwapToNextWeaponWithLoadedClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextWeaponWithLoadedClip");

	AKSCharacter_SwapToNextWeaponWithLoadedClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextWeaponWithAmmo
// ()

void AKSCharacter::SwapToNextWeaponWithAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextWeaponWithAmmo");

	AKSCharacter_SwapToNextWeaponWithAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextWeapon
// ()

void AKSCharacter::SwapToNextWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextWeapon");

	AKSCharacter_SwapToNextWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToNextGrenade
// ()

void AKSCharacter::SwapToNextGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToNextGrenade");

	AKSCharacter_SwapToNextGrenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToMelee
// ()

void AKSCharacter::SwapToMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToMelee");

	AKSCharacter_SwapToMelee_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapToMacGuffin
// ()

void AKSCharacter::SwapToMacGuffin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapToMacGuffin");

	AKSCharacter_SwapToMacGuffin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapSeatsTimerComplete
// ()

void AKSCharacter::SwapSeatsTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapSeatsTimerComplete");

	AKSCharacter_SwapSeatsTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapSeatsReleased
// ()

void AKSCharacter::SwapSeatsReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapSeatsReleased");

	AKSCharacter_SwapSeatsReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapSeatsPressed
// ()

void AKSCharacter::SwapSeatsPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapSeatsPressed");

	AKSCharacter_SwapSeatsPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapGrenade
// ()

void AKSCharacter::SwapGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapGrenade");

	AKSCharacter_SwapGrenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SwapActiveGrenade
// ()

void AKSCharacter::SwapActiveGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SwapActiveGrenade");

	AKSCharacter_SwapActiveGrenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopRevealedToLocalPlayer
// ()

void AKSCharacter::StopRevealedToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopRevealedToLocalPlayer");

	AKSCharacter_StopRevealedToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopReveal
// ()

void AKSCharacter::StopReveal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopReveal");

	AKSCharacter_StopReveal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopKSEffect
// ()

void AKSCharacter::StopKSEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopKSEffect");

	AKSCharacter_StopKSEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopFire
// ()

void AKSCharacter::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopFire");

	AKSCharacter_StopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopAnimEvent
// ()

void AKSCharacter::StopAnimEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopAnimEvent");

	AKSCharacter_StopAnimEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopAimDownSights
// ()

void AKSCharacter::StopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopAimDownSights");

	AKSCharacter_StopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StopActiveHaul
// ()

void AKSCharacter::StopActiveHaul()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StopActiveHaul");

	AKSCharacter_StopActiveHaul_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartRevealedToLocalPlayer
// ()

void AKSCharacter::StartRevealedToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartRevealedToLocalPlayer");

	AKSCharacter_StartRevealedToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartLockoutCamera
// ()

void AKSCharacter::StartLockoutCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartLockoutCamera");

	AKSCharacter_StartLockoutCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartKSSpecialEffect
// ()

void AKSCharacter::StartKSSpecialEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartKSSpecialEffect");

	AKSCharacter_StartKSSpecialEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartHacking
// ()

void AKSCharacter::StartHacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartHacking");

	AKSCharacter_StartHacking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.StartFire
// ()

void AKSCharacter::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.StartFire");

	AKSCharacter_StartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SprintImpulseTimelineProgress
// ()

void AKSCharacter::SprintImpulseTimelineProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SprintImpulseTimelineProgress");

	AKSCharacter_SprintImpulseTimelineProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetupChords
// ()

void AKSCharacter::SetupChords()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetupChords");

	AKSCharacter_SetupChords_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetSelfDestruct
// ()

void AKSCharacter::SetSelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetSelfDestruct");

	AKSCharacter_SetSelfDestruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetPrimaryHeatSource
// ()

void AKSCharacter::SetPrimaryHeatSource()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetPrimaryHeatSource");

	AKSCharacter_SetPrimaryHeatSource_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetOnFire
// ()

void AKSCharacter::SetOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetOnFire");

	AKSCharacter_SetOnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetNoFire
// ()

void AKSCharacter::SetNoFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetNoFire");

	AKSCharacter_SetNoFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetInteractionFacesRotation
// ()

void AKSCharacter::SetInteractionFacesRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetInteractionFacesRotation");

	AKSCharacter_SetInteractionFacesRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetInteractionCameraTransition
// ()

void AKSCharacter::SetInteractionCameraTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetInteractionCameraTransition");

	AKSCharacter_SetInteractionCameraTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetGodMode
// ()

void AKSCharacter::SetGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetGodMode");

	AKSCharacter_SetGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetActorTargetingMeForRevive
// ()

void AKSCharacter::SetActorTargetingMeForRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetActorTargetingMeForRevive");

	AKSCharacter_SetActorTargetingMeForRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetActiveCameraSimple
// ()

void AKSCharacter::SetActiveCameraSimple()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetActiveCameraSimple");

	AKSCharacter_SetActiveCameraSimple_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SetActiveCamera
// ()

void AKSCharacter::SetActiveCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SetActiveCamera");

	AKSCharacter_SetActiveCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerTryToCarry
// ()

void AKSCharacter::ServerTryToCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerTryToCarry");

	AKSCharacter_ServerTryToCarry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerSwapToNextGrenade
// ()

void AKSCharacter::ServerSwapToNextGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerSwapToNextGrenade");

	AKSCharacter_ServerSwapToNextGrenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStopGiveUpTimer
// ()

void AKSCharacter::ServerStopGiveUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStopGiveUpTimer");

	AKSCharacter_ServerStopGiveUpTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStopCarryChecked
// ()

void AKSCharacter::ServerStopCarryChecked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStopCarryChecked");

	AKSCharacter_ServerStopCarryChecked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStopCarry
// ()

void AKSCharacter::ServerStopCarry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStopCarry");

	AKSCharacter_ServerStopCarry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerStartGiveUpTimer
// ()

void AKSCharacter::ServerStartGiveUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerStartGiveUpTimer");

	AKSCharacter_ServerStartGiveUpTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerSetActiveWeaponToNone
// ()

void AKSCharacter::ServerSetActiveWeaponToNone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerSetActiveWeaponToNone");

	AKSCharacter_ServerSetActiveWeaponToNone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerRequestActivateAbilityRelease
// ()

void AKSCharacter::ServerRequestActivateAbilityRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerRequestActivateAbilityRelease");

	AKSCharacter_ServerRequestActivateAbilityRelease_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerRequestActivateAbility
// ()

void AKSCharacter::ServerRequestActivateAbility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerRequestActivateAbility");

	AKSCharacter_ServerRequestActivateAbility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerGetInNextEmptySeat
// ()

void AKSCharacter::ServerGetInNextEmptySeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerGetInNextEmptySeat");

	AKSCharacter_ServerGetInNextEmptySeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerGetInDriverSeat
// ()

void AKSCharacter::ServerGetInDriverSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerGetInDriverSeat");

	AKSCharacter_ServerGetInDriverSeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerExitVehicle
// ()

void AKSCharacter::ServerExitVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerExitVehicle");

	AKSCharacter_ServerExitVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerDropWeapon
// ()

void AKSCharacter::ServerDropWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerDropWeapon");

	AKSCharacter_ServerDropWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ServerChangeShoulderCamera
// ()

void AKSCharacter::ServerChangeShoulderCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ServerChangeShoulderCamera");

	AKSCharacter_ServerChangeShoulderCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.SelectToRevive
// ()

void AKSCharacter::SelectToRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.SelectToRevive");

	AKSCharacter_SelectToRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RotateToFace
// ()

void AKSCharacter::RotateToFace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RotateToFace");

	AKSCharacter_RotateToFace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReviveOverlapStopped
// ()

void AKSCharacter::ReviveOverlapStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReviveOverlapStopped");

	AKSCharacter_ReviveOverlapStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReverseKSEffect
// ()

void AKSCharacter::ReverseKSEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReverseKSEffect");

	AKSCharacter_ReverseKSEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RevealToWholeTeamWithInfo
// ()

void AKSCharacter::RevealToWholeTeamWithInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RevealToWholeTeamWithInfo");

	AKSCharacter_RevealToWholeTeamWithInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ResetKSEffectTime
// ()

void AKSCharacter::ResetKSEffectTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ResetKSEffectTime");

	AKSCharacter_ResetKSEffectTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportFootstepNoise
// ()

void AKSCharacter::ReportFootstepNoise()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportFootstepNoise");

	AKSCharacter_ReportFootstepNoise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportFireNoise
// ()

void AKSCharacter::ReportFireNoise()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportFireNoise");

	AKSCharacter_ReportFireNoise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportDamageEvent
// ()

void AKSCharacter::ReportDamageEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportDamageEvent");

	AKSCharacter_ReportDamageEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReportDamagedNoise
// ()

void AKSCharacter::ReportDamagedNoise()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReportDamagedNoise");

	AKSCharacter_ReportDamagedNoise_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReplicateSpecialAmmoEvent
// ()

void AKSCharacter::ReplicateSpecialAmmoEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReplicateSpecialAmmoEvent");

	AKSCharacter_ReplicateSpecialAmmoEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveWeaponFromInventory
// ()

void AKSCharacter::RemoveWeaponFromInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveWeaponFromInventory");

	AKSCharacter_RemoveWeaponFromInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveSkinTag
// ()

void AKSCharacter::RemoveSkinTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveSkinTag");

	AKSCharacter_RemoveSkinTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveParticleEffects
// ()

void AKSCharacter::RemoveParticleEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveParticleEffects");

	AKSCharacter_RemoveParticleEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveOutOfRangePickup
// ()

void AKSCharacter::RemoveOutOfRangePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveOutOfRangePickup");

	AKSCharacter_RemoveOutOfRangePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveMod
// ()

void AKSCharacter::RemoveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveMod");

	AKSCharacter_RemoveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveEffectCurve
// ()

void AKSCharacter::RemoveEffectCurve()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveEffectCurve");

	AKSCharacter_RemoveEffectCurve_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveBlendable
// ()

void AKSCharacter::RemoveBlendable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveBlendable");

	AKSCharacter_RemoveBlendable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveBackpack
// ()

void AKSCharacter::RemoveBackpack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveBackpack");

	AKSCharacter_RemoveBackpack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoveActionRestriction
// ()

void AKSCharacter::RemoveActionRestriction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoveActionRestriction");

	AKSCharacter_RemoveActionRestriction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemotePlayerPickupItem
// ()

void AKSCharacter::RemotePlayerPickupItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemotePlayerPickupItem");

	AKSCharacter_RemotePlayerPickupItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemotePlayerInteractStart
// ()

void AKSCharacter::RemotePlayerInteractStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemotePlayerInteractStart");

	AKSCharacter_RemotePlayerInteractStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemotePlayerInteractEnd
// ()

void AKSCharacter::RemotePlayerInteractEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemotePlayerInteractEnd");

	AKSCharacter_RemotePlayerInteractEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RemoteClientNotifyLand
// ()

void AKSCharacter::RemoteClientNotifyLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RemoteClientNotifyLand");

	AKSCharacter_RemoteClientNotifyLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.Reload
// ()

void AKSCharacter::Reload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.Reload");

	AKSCharacter_Reload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseGiveUp
// ()

void AKSCharacter::ReleaseGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseGiveUp");

	AKSCharacter_ReleaseGiveUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseCrouch
// ()

void AKSCharacter::ReleaseCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseCrouch");

	AKSCharacter_ReleaseCrouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseAllActiveInputs
// ()

void AKSCharacter::ReleaseAllActiveInputs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseAllActiveInputs");

	AKSCharacter_ReleaseAllActiveInputs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseActiveInputsOfType
// ()

void AKSCharacter::ReleaseActiveInputsOfType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseActiveInputsOfType");

	AKSCharacter_ReleaseActiveInputsOfType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReleaseActiveInputs
// ()

void AKSCharacter::ReleaseActiveInputs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReleaseActiveInputs");

	AKSCharacter_ReleaseActiveInputs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.RegisterFootstepOverride
// ()

void AKSCharacter::RegisterFootstepOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.RegisterFootstepOverride");

	AKSCharacter_RegisterFootstepOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ReevaluateNoFire
// ()

void AKSCharacter::ReevaluateNoFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ReevaluateNoFire");

	AKSCharacter_ReevaluateNoFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.QuickMeleeHoldTimerComplete
// ()

void AKSCharacter::QuickMeleeHoldTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.QuickMeleeHoldTimerComplete");

	AKSCharacter_QuickMeleeHoldTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.QueryModsForAnimEvent
// ()

void AKSCharacter::QueryModsForAnimEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.QueryModsForAnimEvent");

	AKSCharacter_QueryModsForAnimEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PrimaryWeaponFOVChanged
// ()

void AKSCharacter::PrimaryWeaponFOVChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PrimaryWeaponFOVChanged");

	AKSCharacter_PrimaryWeaponFOVChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PrimarySprayDecalExpired
// ()

void AKSCharacter::PrimarySprayDecalExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PrimarySprayDecalExpired");

	AKSCharacter_PrimarySprayDecalExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PressGiveUp
// ()

void AKSCharacter::PressGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PressGiveUp");

	AKSCharacter_PressGiveUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayVO
// ()

void AKSCharacter::PlayVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayVO");

	AKSCharacter_PlayVO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayHitFromRadialDamage
// ()

void AKSCharacter::PlayHitFromRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayHitFromRadialDamage");

	AKSCharacter_PlayHitFromRadialDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayHitFromPointDamage
// ()

void AKSCharacter::PlayHitFromPointDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayHitFromPointDamage");

	AKSCharacter_PlayHitFromPointDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.PlayActionCameraSequence
// ()

void AKSCharacter::PlayActionCameraSequence()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.PlayActionCameraSequence");

	AKSCharacter_PlayActionCameraSequence_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OutOfBoundsWarningEnd
// ()

void AKSCharacter::OutOfBoundsWarningEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OutOfBoundsWarningEnd");

	AKSCharacter_OutOfBoundsWarningEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OutOfBoundsOverlapEnd
// ()

void AKSCharacter::OutOfBoundsOverlapEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OutOfBoundsOverlapEnd");

	AKSCharacter_OutOfBoundsOverlapEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OutOfBoundsOverlapBegin
// ()

void AKSCharacter::OutOfBoundsOverlapBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OutOfBoundsOverlapBegin");

	AKSCharacter_OutOfBoundsOverlapBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnWeaponSwapSuccessful
// ()

void AKSCharacter::OnWeaponSwapSuccessful()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnWeaponSwapSuccessful");

	AKSCharacter_OnWeaponSwapSuccessful_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnWeaponSwapFailed
// ()

void AKSCharacter::OnWeaponSwapFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnWeaponSwapFailed");

	AKSCharacter_OnWeaponSwapFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnUnhovered
// ()

void AKSCharacter::OnUnhovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnUnhovered");

	AKSCharacter_OnUnhovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnStopAimDownSightsCheckpoint
// ()

void AKSCharacter::OnStopAimDownSightsCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnStopAimDownSightsCheckpoint");

	AKSCharacter_OnStopAimDownSightsCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnStartAimDownSightsCheckpoint
// ()

void AKSCharacter::OnStartAimDownSightsCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnStartAimDownSightsCheckpoint");

	AKSCharacter_OnStartAimDownSightsCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnReviveStart
// ()

void AKSCharacter::OnReviveStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnReviveStart");

	AKSCharacter_OnReviveStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnReviveInterrupt
// ()

void AKSCharacter::OnReviveInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnReviveInterrupt");

	AKSCharacter_OnReviveInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnReviveComplete
// ()

void AKSCharacter::OnReviveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnReviveComplete");

	AKSCharacter_OnReviveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_VehicleState
// ()

void AKSCharacter::OnRep_VehicleState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_VehicleState");

	AKSCharacter_OnRep_VehicleState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_StartingActiveWeaponEquipPoint
// ()

void AKSCharacter::OnRep_StartingActiveWeaponEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_StartingActiveWeaponEquipPoint");

	AKSCharacter_OnRep_StartingActiveWeaponEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_SelfDestruct
// ()

void AKSCharacter::OnRep_SelfDestruct()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_SelfDestruct");

	AKSCharacter_OnRep_SelfDestruct_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Scrambled
// ()

void AKSCharacter::OnRep_Scrambled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Scrambled");

	AKSCharacter_OnRep_Scrambled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_ReviveInfo
// ()

void AKSCharacter::OnRep_ReviveInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_ReviveInfo");

	AKSCharacter_OnRep_ReviveInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_RevealedStatus
// ()

void AKSCharacter::OnRep_RevealedStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_RevealedStatus");

	AKSCharacter_OnRep_RevealedStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_OutOfBoundsInfo
// ()

void AKSCharacter::OnRep_OutOfBoundsInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_OutOfBoundsInfo");

	AKSCharacter_OnRep_OutOfBoundsInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_OnFire
// ()

void AKSCharacter::OnRep_OnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_OnFire");

	AKSCharacter_OnRep_OnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_IsInInteraction
// ()

void AKSCharacter::OnRep_IsInInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_IsInInteraction");

	AKSCharacter_OnRep_IsInInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Health
// ()

void AKSCharacter::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Health");

	AKSCharacter_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_HaulingInfo
// ()

void AKSCharacter::OnRep_HaulingInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_HaulingInfo");

	AKSCharacter_OnRep_HaulingInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_GiveUpTimer
// ()

void AKSCharacter::OnRep_GiveUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_GiveUpTimer");

	AKSCharacter_OnRep_GiveUpTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Gender
// ()

void AKSCharacter::OnRep_Gender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Gender");

	AKSCharacter_OnRep_Gender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_EMPLockout
// ()

void AKSCharacter::OnRep_EMPLockout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_EMPLockout");

	AKSCharacter_OnRep_EMPLockout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Emotion
// ()

void AKSCharacter::OnRep_Emotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Emotion");

	AKSCharacter_OnRep_Emotion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Downed
// ()

void AKSCharacter::OnRep_Downed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Downed");

	AKSCharacter_OnRep_Downed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CurrentBehaviorState
// ()

void AKSCharacter::OnRep_CurrentBehaviorState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CurrentBehaviorState");

	AKSCharacter_OnRep_CurrentBehaviorState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CarriedInfo
// ()

void AKSCharacter::OnRep_CarriedInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CarriedInfo");

	AKSCharacter_OnRep_CarriedInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CameraShoulder
// ()

void AKSCharacter::OnRep_CameraShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CameraShoulder");

	AKSCharacter_OnRep_CameraShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_CameraPivotTargetActor
// ()

void AKSCharacter::OnRep_CameraPivotTargetActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_CameraPivotTargetActor");

	AKSCharacter_OnRep_CameraPivotTargetActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_bRepairableArmorEquipped
// ()

void AKSCharacter::OnRep_bRepairableArmorEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_bRepairableArmorEquipped");

	AKSCharacter_OnRep_bRepairableArmorEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_Bot
// ()

void AKSCharacter::OnRep_Bot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_Bot");

	AKSCharacter_OnRep_Bot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_bCanRepairArmor
// ()

void AKSCharacter::OnRep_bCanRepairArmor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_bCanRepairArmor");

	AKSCharacter_OnRep_bCanRepairArmor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_ApparelAssets
// ()

void AKSCharacter::OnRep_ApparelAssets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_ApparelAssets");

	AKSCharacter_OnRep_ApparelAssets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_AllowGiveUp
// ()

void AKSCharacter::OnRep_AllowGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_AllowGiveUp");

	AKSCharacter_OnRep_AllowGiveUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnRep_ActiveEquipmentId
// ()

void AKSCharacter::OnRep_ActiveEquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnRep_ActiveEquipmentId");

	AKSCharacter_OnRep_ActiveEquipmentId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnImmuneStart
// ()

void AKSCharacter::OnImmuneStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnImmuneStart");

	AKSCharacter_OnImmuneStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnImmuneEnd
// ()

void AKSCharacter::OnImmuneEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnImmuneEnd");

	AKSCharacter_OnImmuneEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnHovered
// ()

void AKSCharacter::OnHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnHovered");

	AKSCharacter_OnHovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnGrenadeClassLoaded
// ()

void AKSCharacter::OnGrenadeClassLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnGrenadeClassLoaded");

	AKSCharacter_OnGrenadeClassLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnGadgetSwapped
// ()

void AKSCharacter::OnGadgetSwapped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnGadgetSwapped");

	AKSCharacter_OnGadgetSwapped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnFieldOfViewModChange
// ()

void AKSCharacter::OnFieldOfViewModChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnFieldOfViewModChange");

	AKSCharacter_OnFieldOfViewModChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnEndOutOfBounds
// ()

void AKSCharacter::OnEndOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnEndOutOfBounds");

	AKSCharacter_OnEndOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnDeathDestroy
// ()

void AKSCharacter::OnDeathDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnDeathDestroy");

	AKSCharacter_OnDeathDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnDeathCleanup
// ()

void AKSCharacter::OnDeathCleanup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnDeathCleanup");

	AKSCharacter_OnDeathCleanup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnBeginOutOfBounds
// ()

void AKSCharacter::OnBeginOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnBeginOutOfBounds");

	AKSCharacter_OnBeginOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnArmorRegenerationStart
// ()

void AKSCharacter::OnArmorRegenerationStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnArmorRegenerationStart");

	AKSCharacter_OnArmorRegenerationStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnArmorRegenerationInterrupt
// ()

void AKSCharacter::OnArmorRegenerationInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnArmorRegenerationInterrupt");

	AKSCharacter_OnArmorRegenerationInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnArmorRegenerationComplete
// ()

void AKSCharacter::OnArmorRegenerationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnArmorRegenerationComplete");

	AKSCharacter_OnArmorRegenerationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnArmorInteractStart
// ()

void AKSCharacter::OnArmorInteractStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnArmorInteractStart");

	AKSCharacter_OnArmorInteractStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnArmorInteractInterrupt
// ()

void AKSCharacter::OnArmorInteractInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnArmorInteractInterrupt");

	AKSCharacter_OnArmorInteractInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnArmorInteractComplete
// ()

void AKSCharacter::OnArmorInteractComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnArmorInteractComplete");

	AKSCharacter_OnArmorInteractComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.OnApparelTimeoutExpire
// ()

void AKSCharacter::OnApparelTimeoutExpire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.OnApparelTimeoutExpire");

	AKSCharacter_OnApparelTimeoutExpire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.NoseDiveCameraTransition
// ()

void AKSCharacter::NoseDiveCameraTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.NoseDiveCameraTransition");

	AKSCharacter_NoseDiveCameraTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.NativeJumpToSwingMontage
// ()

void AKSCharacter::NativeJumpToSwingMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.NativeJumpToSwingMontage");

	AKSCharacter_NativeJumpToSwingMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MoveRight
// ()

void AKSCharacter::MoveRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MoveRight");

	AKSCharacter_MoveRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MoveForward
// ()

void AKSCharacter::MoveForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MoveForward");

	AKSCharacter_MoveForward_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MeleeReleased
// ()

void AKSCharacter::MeleeReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MeleeReleased");

	AKSCharacter_MeleeReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MeleePressed
// ()

void AKSCharacter::MeleePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MeleePressed");

	AKSCharacter_MeleePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MedPackReleased
// ()

void AKSCharacter::MedPackReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MedPackReleased");

	AKSCharacter_MedPackReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.MedPackPressed
// ()

void AKSCharacter::MedPackPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.MedPackPressed");

	AKSCharacter_MedPackPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.LogShotgunHitData
// ()

void AKSCharacter::LogShotgunHitData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.LogShotgunHitData");

	AKSCharacter_LogShotgunHitData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.LockShoulderSwap
// ()

void AKSCharacter::LockShoulderSwap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.LockShoulderSwap");

	AKSCharacter_LockShoulderSwap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.KillIfDowned
// ()

void AKSCharacter::KillIfDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.KillIfDowned");

	AKSCharacter_KillIfDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.JumpToSwingMontage
// ()

void AKSCharacter::JumpToSwingMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.JumpToSwingMontage");

	AKSCharacter_JumpToSwingMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsZipLining
// ()

void AKSCharacter::IsZipLining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsZipLining");

	AKSCharacter_IsZipLining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsShoulderSwapLocked
// ()

void AKSCharacter::IsShoulderSwapLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsShoulderSwapLocked");

	AKSCharacter_IsShoulderSwapLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsRevivingAnotherPlayer
// ()

void AKSCharacter::IsRevivingAnotherPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsRevivingAnotherPlayer");

	AKSCharacter_IsRevivingAnotherPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsRevealable
// ()

void AKSCharacter::IsRevealable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsRevealable");

	AKSCharacter_IsRevealable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsRepairableArmorEquipped
// ()

void AKSCharacter::IsRepairableArmorEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsRepairableArmorEquipped");

	AKSCharacter_IsRepairableArmorEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsPerformingAnInteraction
// ()

void AKSCharacter::IsPerformingAnInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsPerformingAnInteraction");

	AKSCharacter_IsPerformingAnInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsOutOfRangePickup
// ()

void AKSCharacter::IsOutOfRangePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsOutOfRangePickup");

	AKSCharacter_IsOutOfRangePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsOutOfBounds
// ()

void AKSCharacter::IsOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsOutOfBounds");

	AKSCharacter_IsOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsOnFire
// ()

void AKSCharacter::IsOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsOnFire");

	AKSCharacter_IsOnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsLocallyHovered
// ()

void AKSCharacter::IsLocallyHovered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsLocallyHovered");

	AKSCharacter_IsLocallyHovered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsLobby
// ()

void AKSCharacter::IsLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsLobby");

	AKSCharacter_IsLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsInVehicle
// ()

void AKSCharacter::IsInVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInVehicle");

	AKSCharacter_IsInVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsInRagdoll
// ()

void AKSCharacter::IsInRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInRagdoll");

	AKSCharacter_IsInRagdoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsInLockoutCameraCooldown
// ()

void AKSCharacter::IsInLockoutCameraCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInLockoutCameraCooldown");

	AKSCharacter_IsInLockoutCameraCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsInLockoutCamera
// ()

void AKSCharacter::IsInLockoutCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsInLockoutCamera");

	AKSCharacter_IsInLockoutCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsHaulingRightNow
// ()

void AKSCharacter::IsHaulingRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsHaulingRightNow");

	AKSCharacter_IsHaulingRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsDowned
// ()

void AKSCharacter::IsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsDowned");

	AKSCharacter_IsDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsCrosshairHidden
// ()

void AKSCharacter::IsCrosshairHidden()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsCrosshairHidden");

	AKSCharacter_IsCrosshairHidden_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsBlinded
// ()

void AKSCharacter::IsBlinded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsBlinded");

	AKSCharacter_IsBlinded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsBeingRevived
// ()

void AKSCharacter::IsBeingRevived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsBeingRevived");

	AKSCharacter_IsBeingRevived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsAnyEquippedWeaponTakingAction
// ()

void AKSCharacter::IsAnyEquippedWeaponTakingAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsAnyEquippedWeaponTakingAction");

	AKSCharacter_IsAnyEquippedWeaponTakingAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsAimLocked
// ()

void AKSCharacter::IsAimLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsAimLocked");

	AKSCharacter_IsAimLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.IsActiveWeapon
// ()

void AKSCharacter::IsActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.IsActiveWeapon");

	AKSCharacter_IsActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InvalidateAllRevealOfMe
// ()

void AKSCharacter::InvalidateAllRevealOfMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InvalidateAllRevealOfMe");

	AKSCharacter_InvalidateAllRevealOfMe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InterruptNonCharacterRevive
// ()

void AKSCharacter::InterruptNonCharacterRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InterruptNonCharacterRevive");

	AKSCharacter_InterruptNonCharacterRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InterruptAimDownSightsToggle
// ()

void AKSCharacter::InterruptAimDownSightsToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InterruptAimDownSightsToggle");

	AKSCharacter_InterruptAimDownSightsToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InterruptAimAlternateToggle
// ()

void AKSCharacter::InterruptAimAlternateToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InterruptAimAlternateToggle");

	AKSCharacter_InterruptAimAlternateToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InstantRevive
// ()

void AKSCharacter::InstantRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InstantRevive");

	AKSCharacter_InstantRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InputStopSprint
// ()

void AKSCharacter::InputStopSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InputStopSprint");

	AKSCharacter_InputStopSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InputStartSprint
// ()

void AKSCharacter::InputStartSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InputStartSprint");

	AKSCharacter_InputStartSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InputStartFire
// ()

void AKSCharacter::InputStartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InputStartFire");

	AKSCharacter_InputStartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.InitRagdoll
// ()

void AKSCharacter::InitRagdoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.InitRagdoll");

	AKSCharacter_InitRagdoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HideZiplinePulley
// ()

void AKSCharacter::HideZiplinePulley()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HideZiplinePulley");

	AKSCharacter_HideZiplinePulley_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HideUplineDevice
// ()

void AKSCharacter::HideUplineDevice()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HideUplineDevice");

	AKSCharacter_HideUplineDevice_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HideADSMaterials
// ()

void AKSCharacter::HideADSMaterials()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HideADSMaterials");

	AKSCharacter_HideADSMaterials_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HasModAny
// ()

void AKSCharacter::HasModAny()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HasModAny");

	AKSCharacter_HasModAny_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HasMod
// ()

void AKSCharacter::HasMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HasMod");

	AKSCharacter_HasMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HasEquipPoint
// ()

void AKSCharacter::HasEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HasEquipPoint");

	AKSCharacter_HasEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.HandleDownEvent
// ()

void AKSCharacter::HandleDownEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.HandleDownEvent");

	AKSCharacter_HandleDownEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveUpTimerTick
// ()

void AKSCharacter::GiveUpTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveUpTimerTick");

	AKSCharacter_GiveUpTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveUpTimerComplete
// ()

void AKSCharacter::GiveUpTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveUpTimerComplete");

	AKSCharacter_GiveUpTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveUpTimerActive
// ()

void AKSCharacter::GiveUpTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveUpTimerActive");

	AKSCharacter_GiveUpTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveModInstance
// ()

void AKSCharacter::GiveModInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveModInstance");

	AKSCharacter_GiveModInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GiveMod
// ()

void AKSCharacter::GiveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GiveMod");

	AKSCharacter_GiveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetWeaponByAsset
// ()

void AKSCharacter::GetWeaponByAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetWeaponByAsset");

	AKSCharacter_GetWeaponByAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetWeaponAtEquipPoint
// ()

void AKSCharacter::GetWeaponAtEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetWeaponAtEquipPoint");

	AKSCharacter_GetWeaponAtEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetVOComponent
// ()

void AKSCharacter::GetVOComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetVOComponent");

	AKSCharacter_GetVOComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetValidWeaponPoints
// ()

void AKSCharacter::GetValidWeaponPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetValidWeaponPoints");

	AKSCharacter_GetValidWeaponPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetUsedEquipPoints
// ()

void AKSCharacter::GetUsedEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetUsedEquipPoints");

	AKSCharacter_GetUsedEquipPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetSpecialties
// ()

void AKSCharacter::GetSpecialties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetSpecialties");

	AKSCharacter_GetSpecialties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetSeatAimCameraTag
// ()

void AKSCharacter::GetSeatAimCameraTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetSeatAimCameraTag");

	AKSCharacter_GetSeatAimCameraTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetReviver
// ()

void AKSCharacter::GetReviver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetReviver");

	AKSCharacter_GetReviver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetReviveeOverrideMontage
// ()

void AKSCharacter::GetReviveeOverrideMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetReviveeOverrideMontage");

	AKSCharacter_GetReviveeOverrideMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetPrimaryHeatSource
// ()

void AKSCharacter::GetPrimaryHeatSource()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetPrimaryHeatSource");

	AKSCharacter_GetPrimaryHeatSource_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetPickupSphere
// ()

void AKSCharacter::GetPickupSphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetPickupSphere");

	AKSCharacter_GetPickupSphere_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetOverrideByLocation
// ()

void AKSCharacter::GetOverrideByLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetOverrideByLocation");

	AKSCharacter_GetOverrideByLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetMostRecentInteractionType
// ()

void AKSCharacter::GetMostRecentInteractionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetMostRecentInteractionType");

	AKSCharacter_GetMostRecentInteractionType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetModInstances
// ()

void AKSCharacter::GetModInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetModInstances");

	AKSCharacter_GetModInstances_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetMaxHealthBonus
// ()

void AKSCharacter::GetMaxHealthBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetMaxHealthBonus");

	AKSCharacter_GetMaxHealthBonus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetLeftArmVisibility
// ()

void AKSCharacter::GetLeftArmVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetLeftArmVisibility");

	AKSCharacter_GetLeftArmVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetInteractionTarget
// ()

void AKSCharacter::GetInteractionTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetInteractionTarget");

	AKSCharacter_GetInteractionTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetHitPawnEffectOverride
// ()

void AKSCharacter::GetHitPawnEffectOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitPawnEffectOverride");

	AKSCharacter_GetHitPawnEffectOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetHitHeadAudioEventOverride
// ()

void AKSCharacter::GetHitHeadAudioEventOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitHeadAudioEventOverride");

	AKSCharacter_GetHitHeadAudioEventOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetHitByAudioEventOverride
// ()

void AKSCharacter::GetHitByAudioEventOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitByAudioEventOverride");

	AKSCharacter_GetHitByAudioEventOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetHitBodyAudioEventOverride
// ()

void AKSCharacter::GetHitBodyAudioEventOverride()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetHitBodyAudioEventOverride");

	AKSCharacter_GetHitBodyAudioEventOverride_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetGiveUpTime
// ()

void AKSCharacter::GetGiveUpTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetGiveUpTime");

	AKSCharacter_GetGiveUpTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetGender
// ()

void AKSCharacter::GetGender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetGender");

	AKSCharacter_GetGender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetFXCurveComponentByFXID
// ()

void AKSCharacter::GetFXCurveComponentByFXID()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetFXCurveComponentByFXID");

	AKSCharacter_GetFXCurveComponentByFXID_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetFlashBangEffectDurationFromDistance
// ()

void AKSCharacter::GetFlashBangEffectDurationFromDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetFlashBangEffectDurationFromDistance");

	AKSCharacter_GetFlashBangEffectDurationFromDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetFieldOfViewFromMods
// ()

void AKSCharacter::GetFieldOfViewFromMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetFieldOfViewFromMods");

	AKSCharacter_GetFieldOfViewFromMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetEquipmentManagerComponent
// ()

void AKSCharacter::GetEquipmentManagerComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetEquipmentManagerComponent");

	AKSCharacter_GetEquipmentManagerComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetEquipmentAtEquipPoint
// ()

void AKSCharacter::GetEquipmentAtEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetEquipmentAtEquipPoint");

	AKSCharacter_GetEquipmentAtEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetDownedTransitionMontage
// ()

void AKSCharacter::GetDownedTransitionMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetDownedTransitionMontage");

	AKSCharacter_GetDownedTransitionMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetDownedImmuneTime
// ()

void AKSCharacter::GetDownedImmuneTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetDownedImmuneTime");

	AKSCharacter_GetDownedImmuneTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCurrentVehicleSeat
// ()

void AKSCharacter::GetCurrentVehicleSeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentVehicleSeat");

	AKSCharacter_GetCurrentVehicleSeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCurrentVehicle
// ()

void AKSCharacter::GetCurrentVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentVehicle");

	AKSCharacter_GetCurrentVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCurrentReviveDuration
// ()

void AKSCharacter::GetCurrentReviveDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentReviveDuration");

	AKSCharacter_GetCurrentReviveDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCurrentCharacterEmotionAsName
// ()

void AKSCharacter::GetCurrentCharacterEmotionAsName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentCharacterEmotionAsName");

	AKSCharacter_GetCurrentCharacterEmotionAsName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCurrentCameraShoulder
// ()

void AKSCharacter::GetCurrentCameraShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentCameraShoulder");

	AKSCharacter_GetCurrentCameraShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCurrentAbilityIndex
// ()

void AKSCharacter::GetCurrentAbilityIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCurrentAbilityIndex");

	AKSCharacter_GetCurrentAbilityIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCompatibleEquipPoints
// ()

void AKSCharacter::GetCompatibleEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCompatibleEquipPoints");

	AKSCharacter_GetCompatibleEquipPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCharacterAkComponent
// ()

void AKSCharacter::GetCharacterAkComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCharacterAkComponent");

	AKSCharacter_GetCharacterAkComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCarriedObject
// ()

void AKSCharacter::GetCarriedObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCarriedObject");

	AKSCharacter_GetCarriedObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetCameraShoulderSwapProgress
// ()

void AKSCharacter::GetCameraShoulderSwapProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetCameraShoulderSwapProgress");

	AKSCharacter_GetCameraShoulderSwapProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetBodyApparelSkinObject
// ()

void AKSCharacter::GetBodyApparelSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetBodyApparelSkinObject");

	AKSCharacter_GetBodyApparelSkinObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetBehaviorState
// ()

void AKSCharacter::GetBehaviorState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetBehaviorState");

	AKSCharacter_GetBehaviorState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetBasePickupRange
// ()

void AKSCharacter::GetBasePickupRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetBasePickupRange");

	AKSCharacter_GetBasePickupRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetAvailableEquipPoints
// ()

void AKSCharacter::GetAvailableEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAvailableEquipPoints");

	AKSCharacter_GetAvailableEquipPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetArmorDurability
// ()

void AKSCharacter::GetArmorDurability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetArmorDurability");

	AKSCharacter_GetArmorDurability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetApparelSkinObjectByName
// ()

void AKSCharacter::GetApparelSkinObjectByName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetApparelSkinObjectByName");

	AKSCharacter_GetApparelSkinObjectByName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetAmmoCount
// ()

void AKSCharacter::GetAmmoCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAmmoCount");

	AKSCharacter_GetAmmoCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetAllEquippedWeapons
// ()

void AKSCharacter::GetAllEquippedWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAllEquippedWeapons");

	AKSCharacter_GetAllEquippedWeapons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveWeaponComponentForSubType
// ()

void AKSCharacter::GetActiveWeaponComponentForSubType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveWeaponComponentForSubType");

	AKSCharacter_GetActiveWeaponComponentForSubType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveWeaponComponentAtIndex
// ()

void AKSCharacter::GetActiveWeaponComponentAtIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveWeaponComponentAtIndex");

	AKSCharacter_GetActiveWeaponComponentAtIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveWeaponComponent
// ()

void AKSCharacter::GetActiveWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveWeaponComponent");

	AKSCharacter_GetActiveWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveWeapon
// ()

void AKSCharacter::GetActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveWeapon");

	AKSCharacter_GetActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveTemporary
// ()

void AKSCharacter::GetActiveTemporary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveTemporary");

	AKSCharacter_GetActiveTemporary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveMods
// ()

void AKSCharacter::GetActiveMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMods");

	AKSCharacter_GetActiveMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveMelee
// ()

void AKSCharacter::GetActiveMelee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMelee");

	AKSCharacter_GetActiveMelee_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveMedPack
// ()

void AKSCharacter::GetActiveMedPack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMedPack");

	AKSCharacter_GetActiveMedPack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveMainWeapon
// ()

void AKSCharacter::GetActiveMainWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveMainWeapon");

	AKSCharacter_GetActiveMainWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveKSWeaponAnimInst
// ()

void AKSCharacter::GetActiveKSWeaponAnimInst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveKSWeaponAnimInst");

	AKSCharacter_GetActiveKSWeaponAnimInst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveGrenade
// ()

void AKSCharacter::GetActiveGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveGrenade");

	AKSCharacter_GetActiveGrenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveGadgetPoints
// ()

void AKSCharacter::GetActiveGadgetPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveGadgetPoints");

	AKSCharacter_GetActiveGadgetPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveEquipPoints
// ()

void AKSCharacter::GetActiveEquipPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveEquipPoints");

	AKSCharacter_GetActiveEquipPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveCameraTag
// ()

void AKSCharacter::GetActiveCameraTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveCameraTag");

	AKSCharacter_GetActiveCameraTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveCamera
// ()

void AKSCharacter::GetActiveCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveCamera");

	AKSCharacter_GetActiveCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActiveAimedWeapon
// ()

void AKSCharacter::GetActiveAimedWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActiveAimedWeapon");

	AKSCharacter_GetActiveAimedWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetActivatableMods
// ()

void AKSCharacter::GetActivatableMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetActivatableMods");

	AKSCharacter_GetActivatableMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GetAbilityMovementMod
// ()

void AKSCharacter::GetAbilityMovementMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GetAbilityMovementMod");

	AKSCharacter_GetAbilityMovementMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadToggleSprint
// ()

void AKSCharacter::GamepadToggleSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadToggleSprint");

	AKSCharacter_GamepadToggleSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadSwapPressed
// ()

void AKSCharacter::GamepadSwapPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadSwapPressed");

	AKSCharacter_GamepadSwapPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadSwapMeleePressed
// ()

void AKSCharacter::GamepadSwapMeleePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadSwapMeleePressed");

	AKSCharacter_GamepadSwapMeleePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadSwapMacGuffinPressed
// ()

void AKSCharacter::GamepadSwapMacGuffinPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadSwapMacGuffinPressed");

	AKSCharacter_GamepadSwapMacGuffinPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadLookUp
// ()

void AKSCharacter::GamepadLookUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadLookUp");

	AKSCharacter_GamepadLookUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.GamepadLookRight
// ()

void AKSCharacter::GamepadLookRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.GamepadLookRight");

	AKSCharacter_GamepadLookRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ForceToShoulder
// ()

void AKSCharacter::ForceToShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ForceToShoulder");

	AKSCharacter_ForceToShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ForceMainCameraBoomUpdate
// ()

void AKSCharacter::ForceMainCameraBoomUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ForceMainCameraBoomUpdate");

	AKSCharacter_ForceMainCameraBoomUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.FinishHacking
// ()

void AKSCharacter::FinishHacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.FinishHacking");

	AKSCharacter_FinishHacking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.FindTierOfEquipPoint
// ()

void AKSCharacter::FindTierOfEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.FindTierOfEquipPoint");

	AKSCharacter_FindTierOfEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.FindAllTiersOfEquipPoint
// ()

void AKSCharacter::FindAllTiersOfEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.FindAllTiersOfEquipPoint");

	AKSCharacter_FindAllTiersOfEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ExtinguishFire
// ()

void AKSCharacter::ExtinguishFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ExtinguishFire");

	AKSCharacter_ExtinguishFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ExitVehiclePressed
// ()

void AKSCharacter::ExitVehiclePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ExitVehiclePressed");

	AKSCharacter_ExitVehiclePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EventSetupCamerasForSpectator
// ()

void AKSCharacter::EventSetupCamerasForSpectator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EventSetupCamerasForSpectator");

	AKSCharacter_EventSetupCamerasForSpectator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EvaluateCameraProximityFade
// ()

void AKSCharacter::EvaluateCameraProximityFade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EvaluateCameraProximityFade");

	AKSCharacter_EvaluateCameraProximityFade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EndOutOfBounds
// ()

void AKSCharacter::EndOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EndOutOfBounds");

	AKSCharacter_EndOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.EndLockoutCamera
// ()

void AKSCharacter::EndLockoutCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.EndLockoutCamera");

	AKSCharacter_EndLockoutCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DrownDamageTick
// ()

void AKSCharacter::DrownDamageTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DrownDamageTick");

	AKSCharacter_DrownDamageTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropButtonReleased
// ()

void AKSCharacter::DropButtonReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropButtonReleased");

	AKSCharacter_DropButtonReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropButtonPressed
// ()

void AKSCharacter::DropButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropButtonPressed");

	AKSCharacter_DropButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropActiveWeapon
// ()

void AKSCharacter::DropActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropActiveWeapon");

	AKSCharacter_DropActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DropActiveGrenade
// ()

void AKSCharacter::DropActiveGrenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DropActiveGrenade");

	AKSCharacter_DropActiveGrenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DownPlayer
// ()

void AKSCharacter::DownPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DownPlayer");

	AKSCharacter_DownPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DoSetOnFire
// ()

void AKSCharacter::DoSetOnFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DoSetOnFire");

	AKSCharacter_DoSetOnFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DoExtinguishFire
// ()

void AKSCharacter::DoExtinguishFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DoExtinguishFire");

	AKSCharacter_DoExtinguishFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DoesTransitionSupportFocalPoint
// ()

void AKSCharacter::DoesTransitionSupportFocalPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DoesTransitionSupportFocalPoint");

	AKSCharacter_DoesTransitionSupportFocalPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DetachViewTargetOnlyBPComponents
// ()

void AKSCharacter::DetachViewTargetOnlyBPComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DetachViewTargetOnlyBPComponents");

	AKSCharacter_DetachViewTargetOnlyBPComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DestructibleSpeedGateOverlappedEvent
// ()

void AKSCharacter::DestructibleSpeedGateOverlappedEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DestructibleSpeedGateOverlappedEvent");

	AKSCharacter_DestructibleSpeedGateOverlappedEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.DamageRecordReset
// ()

void AKSCharacter::DamageRecordReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.DamageRecordReset");

	AKSCharacter_DamageRecordReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CreditEliminationAssist
// ()

void AKSCharacter::CreditEliminationAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CreditEliminationAssist");

	AKSCharacter_CreditEliminationAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CreditDownAssist
// ()

void AKSCharacter::CreditDownAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CreditDownAssist");

	AKSCharacter_CreditDownAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualPingRepeat
// ()

void AKSCharacter::ContextualPingRepeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualPingRepeat");

	AKSCharacter_ContextualPingRepeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualPingPressed
// ()

void AKSCharacter::ContextualPingPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualPingPressed");

	AKSCharacter_ContextualPingPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualPingHoldRelease
// ()

void AKSCharacter::ContextualPingHoldRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualPingHoldRelease");

	AKSCharacter_ContextualPingHoldRelease_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualPingHold
// ()

void AKSCharacter::ContextualPingHold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualPingHold");

	AKSCharacter_ContextualPingHold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualButtonReleased
// ()

void AKSCharacter::ContextualButtonReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualButtonReleased");

	AKSCharacter_ContextualButtonReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualButtonPressed
// ()

void AKSCharacter::ContextualButtonPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualButtonPressed");

	AKSCharacter_ContextualButtonPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualButtonHeldReleased
// ()

void AKSCharacter::ContextualButtonHeldReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualButtonHeldReleased");

	AKSCharacter_ContextualButtonHeldReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ContextualButtonHeld
// ()

void AKSCharacter::ContextualButtonHeld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ContextualButtonHeld");

	AKSCharacter_ContextualButtonHeld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CompleteNonCharacterRevive
// ()

void AKSCharacter::CompleteNonCharacterRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CompleteNonCharacterRevive");

	AKSCharacter_CompleteNonCharacterRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CloneCharacterMesh
// ()

void AKSCharacter::CloneCharacterMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CloneCharacterMesh");

	AKSCharacter_CloneCharacterMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientSwapTo
// ()

void AKSCharacter::ClientSwapTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientSwapTo");

	AKSCharacter_ClientSwapTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientSwapFrom
// ()

void AKSCharacter::ClientSwapFrom()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientSwapFrom");

	AKSCharacter_ClientSwapFrom_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientStopInteractAcknowledge
// ()

void AKSCharacter::ClientStopInteractAcknowledge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientStopInteractAcknowledge");

	AKSCharacter_ClientStopInteractAcknowledge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientNotifyStuck
// ()

void AKSCharacter::ClientNotifyStuck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientNotifyStuck");

	AKSCharacter_ClientNotifyStuck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientInteractAcknowledge
// ()

void AKSCharacter::ClientInteractAcknowledge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientInteractAcknowledge");

	AKSCharacter_ClientInteractAcknowledge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClientBroadcastModEvent
// ()

void AKSCharacter::ClientBroadcastModEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClientBroadcastModEvent");

	AKSCharacter_ClientBroadcastModEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClearMaxHealthBonus
// ()

void AKSCharacter::ClearMaxHealthBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClearMaxHealthBonus");

	AKSCharacter_ClearMaxHealthBonus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClearAllApparel
// ()

void AKSCharacter::ClearAllApparel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClearAllApparel");

	AKSCharacter_ClearAllApparel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ClearActorTargetingMeForRevive
// ()

void AKSCharacter::ClearActorTargetingMeForRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ClearActorTargetingMeForRevive");

	AKSCharacter_ClearActorTargetingMeForRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ChangeShoulderCamera
// ()

void AKSCharacter::ChangeShoulderCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ChangeShoulderCamera");

	AKSCharacter_ChangeShoulderCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanInteractWithTest
// ()

void AKSCharacter::CanInteractWithTest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanInteractWithTest");

	AKSCharacter_CanInteractWithTest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanInteractWith
// ()

void AKSCharacter::CanInteractWith()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanInteractWith");

	AKSCharacter_CanInteractWith_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanGiveUp
// ()

void AKSCharacter::CanGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanGiveUp");

	AKSCharacter_CanGiveUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanFireRightNow
// ()

void AKSCharacter::CanFireRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanFireRightNow");

	AKSCharacter_CanFireRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanFireGrenadeNow
// ()

void AKSCharacter::CanFireGrenadeNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanFireGrenadeNow");

	AKSCharacter_CanFireGrenadeNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CancelBleed
// ()

void AKSCharacter::CancelBleed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CancelBleed");

	AKSCharacter_CancelBleed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanCarryDownedAllies
// ()

void AKSCharacter::CanCarryDownedAllies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanCarryDownedAllies");

	AKSCharacter_CanCarryDownedAllies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanBeRevivedBy
// ()

void AKSCharacter::CanBeRevivedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanBeRevivedBy");

	AKSCharacter_CanBeRevivedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanAimOverShoulderNow
// ()

void AKSCharacter::CanAimOverShoulderNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanAimOverShoulderNow");

	AKSCharacter_CanAimOverShoulderNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanAimDownSightsNow
// ()

void AKSCharacter::CanAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanAimDownSightsNow");

	AKSCharacter_CanAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanAimAlternateNow
// ()

void AKSCharacter::CanAimAlternateNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanAimAlternateNow");

	AKSCharacter_CanAimAlternateNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanActiveWeaponCanToggleOutOfAimDownSightsNow
// ()

void AKSCharacter::CanActiveWeaponCanToggleOutOfAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanActiveWeaponCanToggleOutOfAimDownSightsNow");

	AKSCharacter_CanActiveWeaponCanToggleOutOfAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanActiveWeaponCanToggleIntoAimDownSightsNow
// ()

void AKSCharacter::CanActiveWeaponCanToggleIntoAimDownSightsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanActiveWeaponCanToggleIntoAimDownSightsNow");

	AKSCharacter_CanActiveWeaponCanToggleIntoAimDownSightsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CanActivateAbilityNow
// ()

void AKSCharacter::CanActivateAbilityNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CanActivateAbilityNow");

	AKSCharacter_CanActivateAbilityNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.CacheLatestHit
// ()

void AKSCharacter::CacheLatestHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.CacheLatestHit");

	AKSCharacter_CacheLatestHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentStateChange
// ()

void AKSCharacter::BroadcastWeaponComponentStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentStateChange");

	AKSCharacter_BroadcastWeaponComponentStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentPostReload
// ()

void AKSCharacter::BroadcastWeaponComponentPostReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentPostReload");

	AKSCharacter_BroadcastWeaponComponentPostReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredFull
// ()

void AKSCharacter::BroadcastWeaponComponentFiredFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredFull");

	AKSCharacter_BroadcastWeaponComponentFiredFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAmmo
// ()

void AKSCharacter::BroadcastWeaponComponentFiredAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAmmo");

	AKSCharacter_BroadcastWeaponComponentFiredAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAimAndAmmo
// ()

void AKSCharacter::BroadcastWeaponComponentFiredAimAndAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFiredAimAndAmmo");

	AKSCharacter_BroadcastWeaponComponentFiredAimAndAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentFired
// ()

void AKSCharacter::BroadcastWeaponComponentFired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentFired");

	AKSCharacter_BroadcastWeaponComponentFired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentEmptyFire
// ()

void AKSCharacter::BroadcastWeaponComponentEmptyFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentEmptyFire");

	AKSCharacter_BroadcastWeaponComponentEmptyFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastWeaponComponentAmmoChange
// ()

void AKSCharacter::BroadcastWeaponComponentAmmoChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastWeaponComponentAmmoChange");

	AKSCharacter_BroadcastWeaponComponentAmmoChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastTakeRadialDamage
// ()

void AKSCharacter::BroadcastTakeRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastTakeRadialDamage");

	AKSCharacter_BroadcastTakeRadialDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastTakePointDamage
// ()

void AKSCharacter::BroadcastTakePointDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastTakePointDamage");

	AKSCharacter_BroadcastTakePointDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastSpecialAmmoEvent
// ()

void AKSCharacter::BroadcastSpecialAmmoEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastSpecialAmmoEvent");

	AKSCharacter_BroadcastSpecialAmmoEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastSkydiveSkipped
// ()

void AKSCharacter::BroadcastSkydiveSkipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastSkydiveSkipped");

	AKSCharacter_BroadcastSkydiveSkipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReviveStart
// ()

void AKSCharacter::BroadcastReviveStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReviveStart");

	AKSCharacter_BroadcastReviveStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReviveInterrupt
// ()

void AKSCharacter::BroadcastReviveInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReviveInterrupt");

	AKSCharacter_BroadcastReviveInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReviveComplete
// ()

void AKSCharacter::BroadcastReviveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReviveComplete");

	AKSCharacter_BroadcastReviveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentStateChange
// ()

void AKSCharacter::BroadcastReliableWeaponComponentStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentStateChange");

	AKSCharacter_BroadcastReliableWeaponComponentStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentPostReload
// ()

void AKSCharacter::BroadcastReliableWeaponComponentPostReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentPostReload");

	AKSCharacter_BroadcastReliableWeaponComponentPostReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredFull
// ()

void AKSCharacter::BroadcastReliableWeaponComponentFiredFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredFull");

	AKSCharacter_BroadcastReliableWeaponComponentFiredFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAmmo
// ()

void AKSCharacter::BroadcastReliableWeaponComponentFiredAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAmmo");

	AKSCharacter_BroadcastReliableWeaponComponentFiredAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAimAndAmmo
// ()

void AKSCharacter::BroadcastReliableWeaponComponentFiredAimAndAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFiredAimAndAmmo");

	AKSCharacter_BroadcastReliableWeaponComponentFiredAimAndAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFired
// ()

void AKSCharacter::BroadcastReliableWeaponComponentFired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentFired");

	AKSCharacter_BroadcastReliableWeaponComponentFired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentEmptyFire
// ()

void AKSCharacter::BroadcastReliableWeaponComponentEmptyFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentEmptyFire");

	AKSCharacter_BroadcastReliableWeaponComponentEmptyFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentAmmoChange
// ()

void AKSCharacter::BroadcastReliableWeaponComponentAmmoChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastReliableWeaponComponentAmmoChange");

	AKSCharacter_BroadcastReliableWeaponComponentAmmoChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastModEvent
// ()

void AKSCharacter::BroadcastModEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastModEvent");

	AKSCharacter_BroadcastModEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastGrenadeExplodeInHand
// ()

void AKSCharacter::BroadcastGrenadeExplodeInHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastGrenadeExplodeInHand");

	AKSCharacter_BroadcastGrenadeExplodeInHand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastArmorRegenerationInterrupt
// ()

void AKSCharacter::BroadcastArmorRegenerationInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastArmorRegenerationInterrupt");

	AKSCharacter_BroadcastArmorRegenerationInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastArmorRegenerationComplete
// ()

void AKSCharacter::BroadcastArmorRegenerationComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastArmorRegenerationComplete");

	AKSCharacter_BroadcastArmorRegenerationComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastArmorInteractStart
// ()

void AKSCharacter::BroadcastArmorInteractStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastArmorInteractStart");

	AKSCharacter_BroadcastArmorInteractStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastArmorInteractInterrupt
// ()

void AKSCharacter::BroadcastArmorInteractInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastArmorInteractInterrupt");

	AKSCharacter_BroadcastArmorInteractInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BroadcastArmorInteractComplete
// ()

void AKSCharacter::BroadcastArmorInteractComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BroadcastArmorInteractComplete");

	AKSCharacter_BroadcastArmorInteractComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BlueprintHandleDeath
// ()

void AKSCharacter::BlueprintHandleDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BlueprintHandleDeath");

	AKSCharacter_BlueprintHandleDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BeginOutOfBounds
// ()

void AKSCharacter::BeginOutOfBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BeginOutOfBounds");

	AKSCharacter_BeginOutOfBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BeginNonCharacterRevive
// ()

void AKSCharacter::BeginNonCharacterRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BeginNonCharacterRevive");

	AKSCharacter_BeginNonCharacterRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.BeginInstantRevive
// ()

void AKSCharacter::BeginInstantRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.BeginInstantRevive");

	AKSCharacter_BeginInstantRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AutoSprintTimerComplete
// ()

void AKSCharacter::AutoSprintTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AutoSprintTimerComplete");

	AKSCharacter_AutoSprintTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AttachViewTargetOnlyBPComponents
// ()

void AKSCharacter::AttachViewTargetOnlyBPComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AttachViewTargetOnlyBPComponents");

	AKSCharacter_AttachViewTargetOnlyBPComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyMaxHealthBonus
// ()

void AKSCharacter::ApplyMaxHealthBonus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyMaxHealthBonus");

	AKSCharacter_ApplyMaxHealthBonus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyLastHitImpulse
// ()

void AKSCharacter::ApplyLastHitImpulse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyLastHitImpulse");

	AKSCharacter_ApplyLastHitImpulse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyFlinchFromPointDamage
// ()

void AKSCharacter::ApplyFlinchFromPointDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyFlinchFromPointDamage");

	AKSCharacter_ApplyFlinchFromPointDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyCameraProximityFade
// ()

void AKSCharacter::ApplyCameraProximityFade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyCameraProximityFade");

	AKSCharacter_ApplyCameraProximityFade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ApplyApparelAsset
// ()

void AKSCharacter::ApplyApparelAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ApplyApparelAsset");

	AKSCharacter_ApplyApparelAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnyActivatableModsActive
// ()

void AKSCharacter::AnyActivatableModsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnyActivatableModsActive");

	AKSCharacter_AnyActivatableModsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnimAuditStop
// ()

void AKSCharacter::AnimAuditStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditStop");

	AKSCharacter_AnimAuditStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnimAuditStart
// ()

void AKSCharacter::AnimAuditStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditStart");

	AKSCharacter_AnimAuditStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnimAuditResume
// ()

void AKSCharacter::AnimAuditResume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditResume");

	AKSCharacter_AnimAuditResume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AnimAuditClear
// ()

void AKSCharacter::AnimAuditClear()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AnimAuditClear");

	AKSCharacter_AnimAuditClear_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AimDownSightsToggle
// ()

void AKSCharacter::AimDownSightsToggle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AimDownSightsToggle");

	AKSCharacter_AimDownSightsToggle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AimDownSightsReleased
// ()

void AKSCharacter::AimDownSightsReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AimDownSightsReleased");

	AKSCharacter_AimDownSightsReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AimDownSightsPressed
// ()

void AKSCharacter::AimDownSightsPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AimDownSightsPressed");

	AKSCharacter_AimDownSightsPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddSkinTag
// ()

void AKSCharacter::AddSkinTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddSkinTag");

	AKSCharacter_AddSkinTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddParticleEffects
// ()

void AKSCharacter::AddParticleEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddParticleEffects");

	AKSCharacter_AddParticleEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddOutOfRangePickup
// ()

void AKSCharacter::AddOutOfRangePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddOutOfRangePickup");

	AKSCharacter_AddOutOfRangePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddOrUpdateBlendable
// ()

void AKSCharacter::AddOrUpdateBlendable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddOrUpdateBlendable");

	AKSCharacter_AddOrUpdateBlendable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddActionRestrictionForDuration
// ()

void AKSCharacter::AddActionRestrictionForDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddActionRestrictionForDuration");

	AKSCharacter_AddActionRestrictionForDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AddActionRestriction
// ()

void AKSCharacter::AddActionRestriction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AddActionRestriction");

	AKSCharacter_AddActionRestriction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.ActivatableModAtIndexActive
// ()

void AKSCharacter::ActivatableModAtIndexActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.ActivatableModAtIndexActive");

	AKSCharacter_ActivatableModAtIndexActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AbortFireAllWeapons
// ()

void AKSCharacter::AbortFireAllWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AbortFireAllWeapons");

	AKSCharacter_AbortFireAllWeapons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AbilityChargeUpdated
// ()

void AKSCharacter::AbilityChargeUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AbilityChargeUpdated");

	AKSCharacter_AbilityChargeUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacter.AbilityActivated
// ()

void AKSCharacter::AbilityActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacter.AbilityActivated");

	AKSCharacter_AbilityActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UpdateTestCombatState
// ()

void UKSCharacterAnimInst::UpdateTestCombatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UpdateTestCombatState");

	UKSCharacterAnimInst_UpdateTestCombatState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UpdatePostMirrorRotateValues
// ()

void UKSCharacterAnimInst::UpdatePostMirrorRotateValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UpdatePostMirrorRotateValues");

	UKSCharacterAnimInst_UpdatePostMirrorRotateValues_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UpdateCombatState
// ()

void UKSCharacterAnimInst::UpdateCombatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UpdateCombatState");

	UKSCharacterAnimInst_UpdateCombatState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UpdateCachedPivotLocation
// ()

void UKSCharacterAnimInst::UpdateCachedPivotLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UpdateCachedPivotLocation");

	UKSCharacterAnimInst_UpdateCachedPivotLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnplantRightHand
// ()

void UKSCharacterAnimInst::UnplantRightHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnplantRightHand");

	UKSCharacterAnimInst_UnplantRightHand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnplantLeftHand
// ()

void UKSCharacterAnimInst::UnplantLeftHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnplantLeftHand");

	UKSCharacterAnimInst_UnplantLeftHand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnhideWeapon
// ()

void UKSCharacterAnimInst::UnhideWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnhideWeapon");

	UKSCharacterAnimInst_UnhideWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnhideMag
// ()

void UKSCharacterAnimInst::UnhideMag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnhideMag");

	UKSCharacterAnimInst_UnhideMag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.UnhideGadget
// ()

void UKSCharacterAnimInst::UnhideGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.UnhideGadget");

	UKSCharacterAnimInst_UnhideGadget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.TryToTriggerTurnInPlaceAnimation
// ()

void UKSCharacterAnimInst::TryToTriggerTurnInPlaceAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TryToTriggerTurnInPlaceAnimation");

	UKSCharacterAnimInst_TryToTriggerTurnInPlaceAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.TryGetKSCharacterBase
// ()

void UKSCharacterAnimInst::TryGetKSCharacterBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TryGetKSCharacterBase");

	UKSCharacterAnimInst_TryGetKSCharacterBase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.TriggerDisableAims
// ()

void UKSCharacterAnimInst::TriggerDisableAims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TriggerDisableAims");

	UKSCharacterAnimInst_TriggerDisableAims_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.TriggerCustomPivot
// ()

void UKSCharacterAnimInst::TriggerCustomPivot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.TriggerCustomPivot");

	UKSCharacterAnimInst_TriggerCustomPivot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.SwitchWeaponNative
// ()

void UKSCharacterAnimInst::SwitchWeaponNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.SwitchWeaponNative");

	UKSCharacterAnimInst_SwitchWeaponNative_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.SwitchWeaponIKNative
// ()

void UKSCharacterAnimInst::SwitchWeaponIKNative()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.SwitchWeaponIKNative");

	UKSCharacterAnimInst_SwitchWeaponIKNative_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StopFire
// ()

void UKSCharacterAnimInst::StopFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StopFire");

	UKSCharacterAnimInst_StopFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StopEmote
// ()

void UKSCharacterAnimInst::StopEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StopEmote");

	UKSCharacterAnimInst_StopEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StartRevivee
// ()

void UKSCharacterAnimInst::StartRevivee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StartRevivee");

	UKSCharacterAnimInst_StartRevivee_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.StartFire
// ()

void UKSCharacterAnimInst::StartFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.StartFire");

	UKSCharacterAnimInst_StartFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.ShoulderCharge
// ()

void UKSCharacterAnimInst::ShoulderCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.ShoulderCharge");

	UKSCharacterAnimInst_ShoulderCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.SetMaxSpeedValues
// ()

void UKSCharacterAnimInst::SetMaxSpeedValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.SetMaxSpeedValues");

	UKSCharacterAnimInst_SetMaxSpeedValues_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.ReviveMesh
// ()

void UKSCharacterAnimInst::ReviveMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.ReviveMesh");

	UKSCharacterAnimInst_ReviveMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RetrieveEnd
// ()

void UKSCharacterAnimInst::RetrieveEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RetrieveEnd");

	UKSCharacterAnimInst_RetrieveEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RetrieveBegin
// ()

void UKSCharacterAnimInst::RetrieveBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RetrieveBegin");

	UKSCharacterAnimInst_RetrieveBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RequestNewCombatState
// ()

void UKSCharacterAnimInst::RequestNewCombatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RequestNewCombatState");

	UKSCharacterAnimInst_RequestNewCombatState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.RequestLeftHandIKForceOff
// ()

void UKSCharacterAnimInst::RequestLeftHandIKForceOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.RequestLeftHandIKForceOff");

	UKSCharacterAnimInst_RequestLeftHandIKForceOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.ReleaseWorldRotationLock
// ()

void UKSCharacterAnimInst::ReleaseWorldRotationLock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.ReleaseWorldRotationLock");

	UKSCharacterAnimInst_ReleaseWorldRotationLock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.PopLeftHandIKForceOffRequest
// ()

void UKSCharacterAnimInst::PopLeftHandIKForceOffRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.PopLeftHandIKForceOffRequest");

	UKSCharacterAnimInst_PopLeftHandIKForceOffRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.PlayRecoilProfile
// ()

void UKSCharacterAnimInst::PlayRecoilProfile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.PlayRecoilProfile");

	UKSCharacterAnimInst_PlayRecoilProfile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnTestCombatStateCooldown
// ()

void UKSCharacterAnimInst::OnTestCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnTestCombatStateCooldown");

	UKSCharacterAnimInst_OnTestCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnShoulderChanged
// ()

void UKSCharacterAnimInst::OnShoulderChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnShoulderChanged");

	UKSCharacterAnimInst_OnShoulderChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnMovementDirectionChanged
// ()

void UKSCharacterAnimInst::OnMovementDirectionChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnMovementDirectionChanged");

	UKSCharacterAnimInst_OnMovementDirectionChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.OnCombatStateCooldown
// ()

void UKSCharacterAnimInst::OnCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.OnCombatStateCooldown");

	UKSCharacterAnimInst_OnCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionStop
// ()

void UKSCharacterAnimInst::LocomotionStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionStop");

	UKSCharacterAnimInst_LocomotionStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionStart
// ()

void UKSCharacterAnimInst::LocomotionStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionStart");

	UKSCharacterAnimInst_LocomotionStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionPrePivot
// ()

void UKSCharacterAnimInst::LocomotionPrePivot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionPrePivot");

	UKSCharacterAnimInst_LocomotionPrePivot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionPivotCheckpoint
// ()

void UKSCharacterAnimInst::LocomotionPivotCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionPivotCheckpoint");

	UKSCharacterAnimInst_LocomotionPivotCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionPivot
// ()

void UKSCharacterAnimInst::LocomotionPivot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionPivot");

	UKSCharacterAnimInst_LocomotionPivot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionJumpStart
// ()

void UKSCharacterAnimInst::LocomotionJumpStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionJumpStart");

	UKSCharacterAnimInst_LocomotionJumpStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LocomotionJumpLand
// ()

void UKSCharacterAnimInst::LocomotionJumpLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LocomotionJumpLand");

	UKSCharacterAnimInst_LocomotionJumpLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.LockToCurrentInWorldRotation
// ()

void UKSCharacterAnimInst::LockToCurrentInWorldRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.LockToCurrentInWorldRotation");

	UKSCharacterAnimInst_LockToCurrentInWorldRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.IsLeftHandIKForcedOff
// ()

void UKSCharacterAnimInst::IsLeftHandIKForcedOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.IsLeftHandIKForcedOff");

	UKSCharacterAnimInst_IsLeftHandIKForcedOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.HideWeapon
// ()

void UKSCharacterAnimInst::HideWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.HideWeapon");

	UKSCharacterAnimInst_HideWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.HideMag
// ()

void UKSCharacterAnimInst::HideMag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.HideMag");

	UKSCharacterAnimInst_HideMag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.HideGadget
// ()

void UKSCharacterAnimInst::HideGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.HideGadget");

	UKSCharacterAnimInst_HideGadget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.GetUnpairedMirrorBones
// ()

void UKSCharacterAnimInst::GetUnpairedMirrorBones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.GetUnpairedMirrorBones");

	UKSCharacterAnimInst_GetUnpairedMirrorBones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.GetPairedMirrorBones
// ()

void UKSCharacterAnimInst::GetPairedMirrorBones()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.GetPairedMirrorBones");

	UKSCharacterAnimInst_GetPairedMirrorBones_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.GetMovementDirectionFromLocalAcceleration
// ()

void UKSCharacterAnimInst::GetMovementDirectionFromLocalAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.GetMovementDirectionFromLocalAcceleration");

	UKSCharacterAnimInst_GetMovementDirectionFromLocalAcceleration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.FloatSpringInterp
// ()

void UKSCharacterAnimInst::FloatSpringInterp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.FloatSpringInterp");

	UKSCharacterAnimInst_FloatSpringInterp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStopSwimming
// ()

void UKSCharacterAnimInst::EventStopSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStopSwimming");

	UKSCharacterAnimInst_EventStopSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStopSubmerge
// ()

void UKSCharacterAnimInst::EventStopSubmerge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStopSubmerge");

	UKSCharacterAnimInst_EventStopSubmerge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStartSwimming
// ()

void UKSCharacterAnimInst::EventStartSwimming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStartSwimming");

	UKSCharacterAnimInst_EventStartSwimming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStartSubmerge
// ()

void UKSCharacterAnimInst::EventStartSubmerge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStartSubmerge");

	UKSCharacterAnimInst_EventStartSubmerge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventStartInteraction
// ()

void UKSCharacterAnimInst::EventStartInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventStartInteraction");

	UKSCharacterAnimInst_EventStartInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventPlayHitReactionAnimation
// ()

void UKSCharacterAnimInst::EventPlayHitReactionAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventPlayHitReactionAnimation");

	UKSCharacterAnimInst_EventPlayHitReactionAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventPlayFireAnimation
// ()

void UKSCharacterAnimInst::EventPlayFireAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventPlayFireAnimation");

	UKSCharacterAnimInst_EventPlayFireAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventPlayDeathAnimation
// ()

void UKSCharacterAnimInst::EventPlayDeathAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventPlayDeathAnimation");

	UKSCharacterAnimInst_EventPlayDeathAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndZipLineEnding
// ()

void UKSCharacterAnimInst::EventEndZipLineEnding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndZipLineEnding");

	UKSCharacterAnimInst_EventEndZipLineEnding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndZipLineBrace
// ()

void UKSCharacterAnimInst::EventEndZipLineBrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndZipLineBrace");

	UKSCharacterAnimInst_EventEndZipLineBrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndZipLine
// ()

void UKSCharacterAnimInst::EventEndZipLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndZipLine");

	UKSCharacterAnimInst_EventEndZipLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndVault
// ()

void UKSCharacterAnimInst::EventEndVault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndVault");

	UKSCharacterAnimInst_EventEndVault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndStun
// ()

void UKSCharacterAnimInst::EventEndStun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndStun");

	UKSCharacterAnimInst_EventEndStun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndPowerSlide
// ()

void UKSCharacterAnimInst::EventEndPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndPowerSlide");

	UKSCharacterAnimInst_EventEndPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndInteraction
// ()

void UKSCharacterAnimInst::EventEndInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndInteraction");

	UKSCharacterAnimInst_EventEndInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndHardLand
// ()

void UKSCharacterAnimInst::EventEndHardLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndHardLand");

	UKSCharacterAnimInst_EventEndHardLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndActivatingMod
// ()

void UKSCharacterAnimInst::EventEndActivatingMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndActivatingMod");

	UKSCharacterAnimInst_EventEndActivatingMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventEndAbilityMovement
// ()

void UKSCharacterAnimInst::EventEndAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventEndAbilityMovement");

	UKSCharacterAnimInst_EventEndAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoZipLineEnding
// ()

void UKSCharacterAnimInst::EventDoZipLineEnding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoZipLineEnding");

	UKSCharacterAnimInst_EventDoZipLineEnding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoZipLineBrace
// ()

void UKSCharacterAnimInst::EventDoZipLineBrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoZipLineBrace");

	UKSCharacterAnimInst_EventDoZipLineBrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoZipLine
// ()

void UKSCharacterAnimInst::EventDoZipLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoZipLine");

	UKSCharacterAnimInst_EventDoZipLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoVault
// ()

void UKSCharacterAnimInst::EventDoVault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoVault");

	UKSCharacterAnimInst_EventDoVault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoStun
// ()

void UKSCharacterAnimInst::EventDoStun()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoStun");

	UKSCharacterAnimInst_EventDoStun_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoPowerSlide
// ()

void UKSCharacterAnimInst::EventDoPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoPowerSlide");

	UKSCharacterAnimInst_EventDoPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoHardLandAvoid
// ()

void UKSCharacterAnimInst::EventDoHardLandAvoid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoHardLandAvoid");

	UKSCharacterAnimInst_EventDoHardLandAvoid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoHardLand
// ()

void UKSCharacterAnimInst::EventDoHardLand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoHardLand");

	UKSCharacterAnimInst_EventDoHardLand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoGoDown
// ()

void UKSCharacterAnimInst::EventDoGoDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoGoDown");

	UKSCharacterAnimInst_EventDoGoDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoDodgeRoll
// ()

void UKSCharacterAnimInst::EventDoDodgeRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoDodgeRoll");

	UKSCharacterAnimInst_EventDoDodgeRoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoActivatingMod
// ()

void UKSCharacterAnimInst::EventDoActivatingMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoActivatingMod");

	UKSCharacterAnimInst_EventDoActivatingMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventDoAbilityMovement
// ()

void UKSCharacterAnimInst::EventDoAbilityMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventDoAbilityMovement");

	UKSCharacterAnimInst_EventDoAbilityMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EventActivatedModExpired
// ()

void UKSCharacterAnimInst::EventActivatedModExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EventActivatedModExpired");

	UKSCharacterAnimInst_EventActivatedModExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EndRevivee
// ()

void UKSCharacterAnimInst::EndRevivee()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EndRevivee");

	UKSCharacterAnimInst_EndRevivee_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EnableAims
// ()

void UKSCharacterAnimInst::EnableAims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EnableAims");

	UKSCharacterAnimInst_EnableAims_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EmoteMontageLostAllLocalWeight
// ()

void UKSCharacterAnimInst::EmoteMontageLostAllLocalWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EmoteMontageLostAllLocalWeight");

	UKSCharacterAnimInst_EmoteMontageLostAllLocalWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.EmoteMontageLostAllGlobalWeight
// ()

void UKSCharacterAnimInst::EmoteMontageLostAllGlobalWeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.EmoteMontageLostAllGlobalWeight");

	UKSCharacterAnimInst_EmoteMontageLostAllGlobalWeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.DoResetCustomPivot
// ()

void UKSCharacterAnimInst::DoResetCustomPivot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.DoResetCustomPivot");

	UKSCharacterAnimInst_DoResetCustomPivot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.DodgeRollExpire
// ()

void UKSCharacterAnimInst::DodgeRollExpire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.DodgeRollExpire");

	UKSCharacterAnimInst_DodgeRollExpire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.DisableAims
// ()

void UKSCharacterAnimInst::DisableAims()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.DisableAims");

	UKSCharacterAnimInst_DisableAims_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.CheckCanSpray
// ()

void UKSCharacterAnimInst::CheckCanSpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.CheckCanSpray");

	UKSCharacterAnimInst_CheckCanSpray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.CheckCanEmote
// ()

void UKSCharacterAnimInst::CheckCanEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.CheckCanEmote");

	UKSCharacterAnimInst_CheckCanEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.CanUseCombatState
// ()

void UKSCharacterAnimInst::CanUseCombatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.CanUseCombatState");

	UKSCharacterAnimInst_CanUseCombatState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.CancelDownedCosmetic
// ()

void UKSCharacterAnimInst::CancelDownedCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.CancelDownedCosmetic");

	UKSCharacterAnimInst_CancelDownedCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.BroadcastOnGoDown
// ()

void UKSCharacterAnimInst::BroadcastOnGoDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.BroadcastOnGoDown");

	UKSCharacterAnimInst_BroadcastOnGoDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.BroadcastAnimationEvent
// ()

void UKSCharacterAnimInst::BroadcastAnimationEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.BroadcastAnimationEvent");

	UKSCharacterAnimInst_BroadcastAnimationEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.BlinkEyes
// ()

void UKSCharacterAnimInst::BlinkEyes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.BlinkEyes");

	UKSCharacterAnimInst_BlinkEyes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.AttemptTestCombatStateCooldown
// ()

void UKSCharacterAnimInst::AttemptTestCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.AttemptTestCombatStateCooldown");

	UKSCharacterAnimInst_AttemptTestCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterAnimInst.AttemptCombatStateCooldown
// ()

void UKSCharacterAnimInst::AttemptCombatStateCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterAnimInst.AttemptCombatStateCooldown");

	UKSCharacterAnimInst_AttemptCombatStateCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.StopShakeOnViewTargetChanged
// ()

void UKSCharacterCameraShake::StopShakeOnViewTargetChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.StopShakeOnViewTargetChanged");

	UKSCharacterCameraShake_StopShakeOnViewTargetChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.StopShakeOnActorDestroyed
// ()

void UKSCharacterCameraShake::StopShakeOnActorDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.StopShakeOnActorDestroyed");

	UKSCharacterCameraShake_StopShakeOnActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.StopShakeDynamic
// ()

void UKSCharacterCameraShake::StopShakeDynamic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.StopShakeDynamic");

	UKSCharacterCameraShake_StopShakeDynamic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterCameraShake.OnAimStateChanged
// ()

void UKSCharacterCameraShake::OnAimStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterCameraShake.OnAimStateChanged");

	UKSCharacterCameraShake_OnAimStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.ResetPostFireSprintLockout
// ()

void UKSCharacterMovementComponent::ResetPostFireSprintLockout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.ResetPostFireSprintLockout");

	UKSCharacterMovementComponent_ResetPostFireSprintLockout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsZipLining
// ()

void UKSCharacterMovementComponent::IsZipLining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsZipLining");

	UKSCharacterMovementComponent_IsZipLining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsStandingStill
// ()

void UKSCharacterMovementComponent::IsStandingStill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsStandingStill");

	UKSCharacterMovementComponent_IsStandingStill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsSprintingWithVelocity
// ()

void UKSCharacterMovementComponent::IsSprintingWithVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsSprintingWithVelocity");

	UKSCharacterMovementComponent_IsSprintingWithVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsSprinting
// ()

void UKSCharacterMovementComponent::IsSprinting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsSprinting");

	UKSCharacterMovementComponent_IsSprinting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsInPowerSlide
// ()

void UKSCharacterMovementComponent::IsInPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsInPowerSlide");

	UKSCharacterMovementComponent_IsInPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsFlightRecovery
// ()

void UKSCharacterMovementComponent::IsFlightRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsFlightRecovery");

	UKSCharacterMovementComponent_IsFlightRecovery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsDowned
// ()

void UKSCharacterMovementComponent::IsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsDowned");

	UKSCharacterMovementComponent_IsDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsDodgeRolling
// ()

void UKSCharacterMovementComponent::IsDodgeRolling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsDodgeRolling");

	UKSCharacterMovementComponent_IsDodgeRolling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsAimingOverShoulder
// ()

void UKSCharacterMovementComponent::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAimingOverShoulder");

	UKSCharacterMovementComponent_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsAimingDownSights
// ()

void UKSCharacterMovementComponent::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAimingDownSights");

	UKSCharacterMovementComponent_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsAimingAlternate
// ()

void UKSCharacterMovementComponent::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAimingAlternate");

	UKSCharacterMovementComponent_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.IsAiming
// ()

void UKSCharacterMovementComponent::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.IsAiming");

	UKSCharacterMovementComponent_IsAiming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.GetWantsToSprint
// ()

void UKSCharacterMovementComponent::GetWantsToSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.GetWantsToSprint");

	UKSCharacterMovementComponent_GetWantsToSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.GetWantsToPowerSlide
// ()

void UKSCharacterMovementComponent::GetWantsToPowerSlide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.GetWantsToPowerSlide");

	UKSCharacterMovementComponent_GetWantsToPowerSlide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.GetProratedMaxSpeed
// ()

void UKSCharacterMovementComponent::GetProratedMaxSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.GetProratedMaxSpeed");

	UKSCharacterMovementComponent_GetProratedMaxSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.FindPointAboveWater
// ()

void UKSCharacterMovementComponent::FindPointAboveWater()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.FindPointAboveWater");

	UKSCharacterMovementComponent_FindPointAboveWater_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionVault
// ()

void UKSCharacterMovementComponent::ClientAdjustPositionVault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionVault");

	UKSCharacterMovementComponent_ClientAdjustPositionVault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionDodgeRoll
// ()

void UKSCharacterMovementComponent::ClientAdjustPositionDodgeRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCharacterMovementComponent.ClientAdjustPositionDodgeRoll");

	UKSCharacterMovementComponent_ClientAdjustPositionDodgeRoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkeletalMeshComponent.SetTeleportDistanceDeltaThreshold
// ()

void UKSSkeletalMeshComponent::SetTeleportDistanceDeltaThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.SetTeleportDistanceDeltaThreshold");

	UKSSkeletalMeshComponent_SetTeleportDistanceDeltaThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkeletalMeshComponent.SetForceTextureResidentFlag
// ()

void UKSSkeletalMeshComponent::SetForceTextureResidentFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.SetForceTextureResidentFlag");

	UKSSkeletalMeshComponent_SetForceTextureResidentFlag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkeletalMeshComponent.GetTeleportDistanceDeltaThreshold
// ()

void UKSSkeletalMeshComponent::GetTeleportDistanceDeltaThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.GetTeleportDistanceDeltaThreshold");

	UKSSkeletalMeshComponent_GetTeleportDistanceDeltaThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkeletalMeshComponent.GetForceTextureResidentFlag
// ()

void UKSSkeletalMeshComponent::GetForceTextureResidentFlag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkeletalMeshComponent.GetForceTextureResidentFlag");

	UKSSkeletalMeshComponent_GetForceTextureResidentFlag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.WarpZ
// ()

void UKSCheatComponent::WarpZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.WarpZ");

	UKSCheatComponent_WarpZ_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.WarpToSpawn
// ()

void UKSCheatComponent::WarpToSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.WarpToSpawn");

	UKSCheatComponent_WarpToSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Warp
// ()

void UKSCheatComponent::Warp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Warp");

	UKSCheatComponent_Warp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleWeaponDebug
// ()

void UKSCheatComponent::ToggleWeaponDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleWeaponDebug");

	UKSCheatComponent_ToggleWeaponDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleHud
// ()

void UKSCheatComponent::ToggleHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleHud");

	UKSCheatComponent_ToggleHud_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleGamepadAimDebug
// ()

void UKSCheatComponent::ToggleGamepadAimDebug()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleGamepadAimDebug");

	UKSCheatComponent_ToggleGamepadAimDebug_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ToggleBotsPaused
// ()

void UKSCheatComponent::ToggleBotsPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ToggleBotsPaused");

	UKSCheatComponent_ToggleBotsPaused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.TestPreviewActor
// ()

void UKSCheatComponent::TestPreviewActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.TestPreviewActor");

	UKSCheatComponent_TestPreviewActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.TakeDamage
// ()

void UKSCheatComponent::TakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.TakeDamage");

	UKSCheatComponent_TakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Suicide
// ()

void UKSCheatComponent::Suicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Suicide");

	UKSCheatComponent_Suicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Spectate
// ()

void UKSCheatComponent::Spectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Spectate");

	UKSCheatComponent_Spectate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Spawn
// ()

void UKSCheatComponent::Spawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Spawn");

	UKSCheatComponent_Spawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowWeaponStats
// ()

void UKSCheatComponent::ShowWeaponStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowWeaponStats");

	UKSCheatComponent_ShowWeaponStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowLocation
// ()

void UKSCheatComponent::ShowLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowLocation");

	UKSCheatComponent_ShowLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowKillCamWorld
// ()

void UKSCheatComponent::ShowKillCamWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowKillCamWorld");

	UKSCheatComponent_ShowKillCamWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowHealth
// ()

void UKSCheatComponent::ShowHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowHealth");

	UKSCheatComponent_ShowHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowDifficulties
// ()

void UKSCheatComponent::ShowDifficulties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowDifficulties");

	UKSCheatComponent_ShowDifficulties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ShowBots
// ()

void UKSCheatComponent::ShowBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ShowBots");

	UKSCheatComponent_ShowBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetTimeLeft
// ()

void UKSCheatComponent::SetTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetTimeLeft");

	UKSCheatComponent_SetTimeLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetTeam
// ()

void UKSCheatComponent::SetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetTeam");

	UKSCheatComponent_SetTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetGroundSpeed
// ()

void UKSCheatComponent::SetGroundSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetGroundSpeed");

	UKSCheatComponent_SetGroundSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetDifficulty
// ()

void UKSCheatComponent::SetDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetDifficulty");

	UKSCheatComponent_SetDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.SetBotsPaused
// ()

void UKSCheatComponent::SetBotsPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.SetBotsPaused");

	UKSCheatComponent_SetBotsPaused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerWarpZ
// ()

void UKSCheatComponent::ServerWarpZ()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerWarpZ");

	UKSCheatComponent_ServerWarpZ_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerWarpToSpawn
// ()

void UKSCheatComponent::ServerWarpToSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerWarpToSpawn");

	UKSCheatComponent_ServerWarpToSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerWarp
// ()

void UKSCheatComponent::ServerWarp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerWarp");

	UKSCheatComponent_ServerWarp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerToggleHud
// ()

void UKSCheatComponent::ServerToggleHud()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerToggleHud");

	UKSCheatComponent_ServerToggleHud_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerTakeDamage
// ()

void UKSCheatComponent::ServerTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerTakeDamage");

	UKSCheatComponent_ServerTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSuicide
// ()

void UKSCheatComponent::ServerSuicide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSuicide");

	UKSCheatComponent_ServerSuicide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSpectate
// ()

void UKSCheatComponent::ServerSpectate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSpectate");

	UKSCheatComponent_ServerSpectate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSpawn
// ()

void UKSCheatComponent::ServerSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSpawn");

	UKSCheatComponent_ServerSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowLocation
// ()

void UKSCheatComponent::ServerShowLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowLocation");

	UKSCheatComponent_ServerShowLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowHealth
// ()

void UKSCheatComponent::ServerShowHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowHealth");

	UKSCheatComponent_ServerShowHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowDifficulties
// ()

void UKSCheatComponent::ServerShowDifficulties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowDifficulties");

	UKSCheatComponent_ServerShowDifficulties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerShowBots
// ()

void UKSCheatComponent::ServerShowBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerShowBots");

	UKSCheatComponent_ServerShowBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetTimeLeft
// ()

void UKSCheatComponent::ServerSetTimeLeft()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetTimeLeft");

	UKSCheatComponent_ServerSetTimeLeft_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetTeam
// ()

void UKSCheatComponent::ServerSetTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetTeam");

	UKSCheatComponent_ServerSetTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetGroundSpeed
// ()

void UKSCheatComponent::ServerSetGroundSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetGroundSpeed");

	UKSCheatComponent_ServerSetGroundSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetDifficulty
// ()

void UKSCheatComponent::ServerSetDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetDifficulty");

	UKSCheatComponent_ServerSetDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerSetBotsPaused
// ()

void UKSCheatComponent::ServerSetBotsPaused()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerSetBotsPaused");

	UKSCheatComponent_ServerSetBotsPaused_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerRemoveFromLoadout
// ()

void UKSCheatComponent::ServerRemoveFromLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerRemoveFromLoadout");

	UKSCheatComponent_ServerRemoveFromLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerRemoveAllMods
// ()

void UKSCheatComponent::ServerRemoveAllMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerRemoveAllMods");

	UKSCheatComponent_ServerRemoveAllMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerQuickEndGame
// ()

void UKSCheatComponent::ServerQuickEndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerQuickEndGame");

	UKSCheatComponent_ServerQuickEndGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerInvisMe
// ()

void UKSCheatComponent::ServerInvisMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerInvisMe");

	UKSCheatComponent_ServerInvisMe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerInstantReplay
// ()

void UKSCheatComponent::ServerInstantReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerInstantReplay");

	UKSCheatComponent_ServerInstantReplay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerInfiniteAmmo
// ()

void UKSCheatComponent::ServerInfiniteAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerInfiniteAmmo");

	UKSCheatComponent_ServerInfiniteAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGod
// ()

void UKSCheatComponent::ServerGod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGod");

	UKSCheatComponent_ServerGod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGiveKSPoints
// ()

void UKSCheatComponent::ServerGiveKSPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGiveKSPoints");

	UKSCheatComponent_ServerGiveKSPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGiveAsync
// ()

void UKSCheatComponent::ServerGiveAsync()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGiveAsync");

	UKSCheatComponent_ServerGiveAsync_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGiveAllKSPoints
// ()

void UKSCheatComponent::ServerGiveAllKSPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGiveAllKSPoints");

	UKSCheatComponent_ServerGiveAllKSPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerGive
// ()

void UKSCheatComponent::ServerGive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerGive");

	UKSCheatComponent_ServerGive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerEnableTeamSurrender
// ()

void UKSCheatComponent::ServerEnableTeamSurrender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerEnableTeamSurrender");

	UKSCheatComponent_ServerEnableTeamSurrender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerEnableKillCam
// ()

void UKSCheatComponent::ServerEnableKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerEnableKillCam");

	UKSCheatComponent_ServerEnableKillCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerDrop
// ()

void UKSCheatComponent::ServerDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerDrop");

	UKSCheatComponent_ServerDrop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerDisableAFKTimer
// ()

void UKSCheatComponent::ServerDisableAFKTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerDisableAFKTimer");

	UKSCheatComponent_ServerDisableAFKTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerCharReset
// ()

void UKSCheatComponent::ServerCharReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerCharReset");

	UKSCheatComponent_ServerCharReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerChangeCash
// ()

void UKSCheatComponent::ServerChangeCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerChangeCash");

	UKSCheatComponent_ServerChangeCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerBotGodMode
// ()

void UKSCheatComponent::ServerBotGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerBotGodMode");

	UKSCheatComponent_ServerBotGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAttach
// ()

void UKSCheatComponent::ServerAttach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAttach");

	UKSCheatComponent_ServerAttach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAdjustDifficulty
// ()

void UKSCheatComponent::ServerAdjustDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAdjustDifficulty");

	UKSCheatComponent_ServerAdjustDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAddToLoadout
// ()

void UKSCheatComponent::ServerAddToLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAddToLoadout");

	UKSCheatComponent_ServerAddToLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ServerAddAttachmentToLoadout
// ()

void UKSCheatComponent::ServerAddAttachmentToLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ServerAddAttachmentToLoadout");

	UKSCheatComponent_ServerAddAttachmentToLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.RemoveFromLoadout
// ()

void UKSCheatComponent::RemoveFromLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.RemoveFromLoadout");

	UKSCheatComponent_RemoveFromLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.RemoveAllMods
// ()

void UKSCheatComponent::RemoveAllMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.RemoveAllMods");

	UKSCheatComponent_RemoveAllMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.QuickEndGame
// ()

void UKSCheatComponent::QuickEndGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.QuickEndGame");

	UKSCheatComponent_QuickEndGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.QEG
// ()

void UKSCheatComponent::QEG()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.QEG");

	UKSCheatComponent_QEG_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.OnRep_HudVisible
// ()

void UKSCheatComponent::OnRep_HudVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.OnRep_HudVisible");

	UKSCheatComponent_OnRep_HudVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.OnRep_CanViewLocation
// ()

void UKSCheatComponent::OnRep_CanViewLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.OnRep_CanViewLocation");

	UKSCheatComponent_OnRep_CanViewLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.OnRep_CanViewDebugHealth
// ()

void UKSCheatComponent::OnRep_CanViewDebugHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.OnRep_CanViewDebugHealth");

	UKSCheatComponent_OnRep_CanViewDebugHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.NextPerfCaptureCamera
// ()

void UKSCheatComponent::NextPerfCaptureCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.NextPerfCaptureCamera");

	UKSCheatComponent_NextPerfCaptureCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.InvisMe
// ()

void UKSCheatComponent::InvisMe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.InvisMe");

	UKSCheatComponent_InvisMe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.InstantReplay
// ()

void UKSCheatComponent::InstantReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.InstantReplay");

	UKSCheatComponent_InstantReplay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.InfiniteAmmo
// ()

void UKSCheatComponent::InfiniteAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.InfiniteAmmo");

	UKSCheatComponent_InfiniteAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.God
// ()

void UKSCheatComponent::God()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.God");

	UKSCheatComponent_God_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.GiveSkin
// ()

void UKSCheatComponent::GiveSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.GiveSkin");

	UKSCheatComponent_GiveSkin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.GiveKSPoints
// ()

void UKSCheatComponent::GiveKSPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.GiveKSPoints");

	UKSCheatComponent_GiveKSPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.GiveAsync
// ()

void UKSCheatComponent::GiveAsync()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.GiveAsync");

	UKSCheatComponent_GiveAsync_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.GiveAllKSPoints
// ()

void UKSCheatComponent::GiveAllKSPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.GiveAllKSPoints");

	UKSCheatComponent_GiveAllKSPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Give
// ()

void UKSCheatComponent::Give()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Give");

	UKSCheatComponent_Give_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.EnableTeamSurrender
// ()

void UKSCheatComponent::EnableTeamSurrender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.EnableTeamSurrender");

	UKSCheatComponent_EnableTeamSurrender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.EnableSound
// ()

void UKSCheatComponent::EnableSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.EnableSound");

	UKSCheatComponent_EnableSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.EnableKillCam
// ()

void UKSCheatComponent::EnableKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.EnableKillCam");

	UKSCheatComponent_EnableKillCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Drop
// ()

void UKSCheatComponent::Drop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Drop");

	UKSCheatComponent_Drop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DownSelf
// ()

void UKSCheatComponent::DownSelf()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DownSelf");

	UKSCheatComponent_DownSelf_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DisableSound
// ()

void UKSCheatComponent::DisableSound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DisableSound");

	UKSCheatComponent_DisableSound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DisableAFKTimer
// ()

void UKSCheatComponent::DisableAFKTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DisableAFKTimer");

	UKSCheatComponent_DisableAFKTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.DebugThreatLevels
// ()

void UKSCheatComponent::DebugThreatLevels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.DebugThreatLevels");

	UKSCheatComponent_DebugThreatLevels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Communicate
// ()

void UKSCheatComponent::Communicate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Communicate");

	UKSCheatComponent_Communicate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.CharReset
// ()

void UKSCheatComponent::CharReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.CharReset");

	UKSCheatComponent_CharReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.ChangeCash
// ()

void UKSCheatComponent::ChangeCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.ChangeCash");

	UKSCheatComponent_ChangeCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.BotGodMode
// ()

void UKSCheatComponent::BotGodMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.BotGodMode");

	UKSCheatComponent_BotGodMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.Attach
// ()

void UKSCheatComponent::Attach()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.Attach");

	UKSCheatComponent_Attach_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.AdjustDifficulty
// ()

void UKSCheatComponent::AdjustDifficulty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.AdjustDifficulty");

	UKSCheatComponent_AdjustDifficulty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.AddToLoadout
// ()

void UKSCheatComponent::AddToLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.AddToLoadout");

	UKSCheatComponent_AddToLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCheatComponent.AddAttachmentToLoadout
// ()

void UKSCheatComponent::AddAttachmentToLoadout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCheatComponent.AddAttachmentToLoadout");

	UKSCheatComponent_AddAttachmentToLoadout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.ShouldPreventPlay
// ()

void UKSRadialMenuItem::ShouldPreventPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.ShouldPreventPlay");

	UKSRadialMenuItem_ShouldPreventPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.ShouldInterrupt
// ()

void UKSRadialMenuItem::ShouldInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.ShouldInterrupt");

	UKSRadialMenuItem_ShouldInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.IsJobAllowed
// ()

void UKSRadialMenuItem::IsJobAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.IsJobAllowed");

	UKSRadialMenuItem_IsJobAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.IsAllowedForAllJobs
// ()

void UKSRadialMenuItem::IsAllowedForAllJobs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.IsAllowedForAllJobs");

	UKSRadialMenuItem_IsAllowedForAllJobs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.GetRadialMenuItemInstanceClass
// ()

void UKSRadialMenuItem::GetRadialMenuItemInstanceClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.GetRadialMenuItemInstanceClass");

	UKSRadialMenuItem_GetRadialMenuItemInstanceClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.GetLockPawnRotationWhilePlaying
// ()

void UKSRadialMenuItem::GetLockPawnRotationWhilePlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.GetLockPawnRotationWhilePlaying");

	UKSRadialMenuItem_GetLockPawnRotationWhilePlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.GetGameplayTagBase
// ()

void UKSRadialMenuItem::GetGameplayTagBase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.GetGameplayTagBase");

	UKSRadialMenuItem_GetGameplayTagBase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.GetEmotionToApply
// ()

void UKSRadialMenuItem::GetEmotionToApply()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.GetEmotionToApply");

	UKSRadialMenuItem_GetEmotionToApply_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.GetCosmeticSlotString
// ()

void UKSRadialMenuItem::GetCosmeticSlotString()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.GetCosmeticSlotString");

	UKSRadialMenuItem_GetCosmeticSlotString_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.GetCosmeticSlot
// ()

void UKSRadialMenuItem::GetCosmeticSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.GetCosmeticSlot");

	UKSRadialMenuItem_GetCosmeticSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItem.GetAllowedJobs
// ()

void UKSRadialMenuItem::GetAllowedJobs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItem.GetAllowedJobs");

	UKSRadialMenuItem_GetAllowedJobs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.ServerPlayRadialMenuItem
// ()

void AKSRadialMenuItemInstance::ServerPlayRadialMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.ServerPlayRadialMenuItem");

	AKSRadialMenuItemInstance_ServerPlayRadialMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.ServerForceStopRadialMenuItem
// ()

void AKSRadialMenuItemInstance::ServerForceStopRadialMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.ServerForceStopRadialMenuItem");

	AKSRadialMenuItemInstance_ServerForceStopRadialMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.PlayRadialMenuItem
// ()

void AKSRadialMenuItemInstance::PlayRadialMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.PlayRadialMenuItem");

	AKSRadialMenuItemInstance_PlayRadialMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.OnRep_RadialMenuItemAsset
// ()

void AKSRadialMenuItemInstance::OnRep_RadialMenuItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.OnRep_RadialMenuItemAsset");

	AKSRadialMenuItemInstance_OnRep_RadialMenuItemAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.IsManagingRadialMenuItemLocally
// ()

void AKSRadialMenuItemInstance::IsManagingRadialMenuItemLocally()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.IsManagingRadialMenuItemLocally");

	AKSRadialMenuItemInstance_IsManagingRadialMenuItemLocally_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.GetRadialMenuItemAsset
// ()

void AKSRadialMenuItemInstance::GetRadialMenuItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.GetRadialMenuItemAsset");

	AKSRadialMenuItemInstance_GetRadialMenuItemAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.GetActiveCharacterOwner
// ()

void AKSRadialMenuItemInstance::GetActiveCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.GetActiveCharacterOwner");

	AKSRadialMenuItemInstance_GetActiveCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.ForceStopRadialMenuItem
// ()

void AKSRadialMenuItemInstance::ForceStopRadialMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.ForceStopRadialMenuItem");

	AKSRadialMenuItemInstance_ForceStopRadialMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.DoRadialMenuItem
// ()

void AKSRadialMenuItemInstance::DoRadialMenuItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.DoRadialMenuItem");

	AKSRadialMenuItemInstance_DoRadialMenuItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRadialMenuItemInstance.CanPlayRadialMenuItemNow
// ()

void AKSRadialMenuItemInstance::CanPlayRadialMenuItemNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRadialMenuItemInstance.CanPlayRadialMenuItemNow");

	AKSRadialMenuItemInstance_CanPlayRadialMenuItemNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.RecordDamageDealt
// ()

void UKSControllerInterface::RecordDamageDealt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.RecordDamageDealt");

	UKSControllerInterface_RecordDamageDealt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetSkinLevel
// ()

void UKSControllerInterface::GetSkinLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetSkinLevel");

	UKSControllerInterface_GetSkinLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetSkinId
// ()

void UKSControllerInterface::GetSkinId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetSkinId");

	UKSControllerInterface_GetSkinId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetKSPlayerState
// ()

void UKSControllerInterface::GetKSPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetKSPlayerState");

	UKSControllerInterface_GetKSPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetKSCharacter
// ()

void UKSControllerInterface::GetKSCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetKSCharacter");

	UKSControllerInterface_GetKSCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetController
// ()

void UKSControllerInterface::GetController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetController");

	UKSControllerInterface_GetController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetCheatComponent
// ()

void UKSControllerInterface::GetCheatComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetCheatComponent");

	UKSControllerInterface_GetCheatComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControllerInterface.GetBotId
// ()

void UKSControllerInterface::GetBotId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControllerInterface.GetBotId");

	UKSControllerInterface_GetBotId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.RemovePrimitiveToPawnOverlapCheck
// ()

void AKSControlPoint::RemovePrimitiveToPawnOverlapCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.RemovePrimitiveToPawnOverlapCheck");

	AKSControlPoint_RemovePrimitiveToPawnOverlapCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnRep_OwningTeam
// ()

void AKSControlPoint::OnRep_OwningTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnRep_OwningTeam");

	AKSControlPoint_OnRep_OwningTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnRep_CapturingTeam
// ()

void AKSControlPoint::OnRep_CapturingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnRep_CapturingTeam");

	AKSControlPoint_OnRep_CapturingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnOwningTeamChanged
// ()

void AKSControlPoint::OnOwningTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnOwningTeamChanged");

	AKSControlPoint_OnOwningTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnEndOverlap
// ()

void AKSControlPoint::OnEndOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnEndOverlap");

	AKSControlPoint_OnEndOverlap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnCapturingTeamChanged
// ()

void AKSControlPoint::OnCapturingTeamChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnCapturingTeamChanged");

	AKSControlPoint_OnCapturingTeamChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.OnBeginOverlap
// ()

void AKSControlPoint::OnBeginOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.OnBeginOverlap");

	AKSControlPoint_OnBeginOverlap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.GetOwningTeam
// ()

void AKSControlPoint::GetOwningTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.GetOwningTeam");

	AKSControlPoint_GetOwningTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.GetCapturingTeam
// ()

void AKSControlPoint::GetCapturingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.GetCapturingTeam");

	AKSControlPoint_GetCapturingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSControlPoint.AddPrimitiveToPawnOverlapCheck
// ()

void AKSControlPoint::AddPrimitiveToPawnOverlapCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSControlPoint.AddPrimitiveToPawnOverlapCheck");

	AKSControlPoint_AddPrimitiveToPawnOverlapCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCurrency.GetSoftFullSplashImage
// ()

void UKSCurrency::GetSoftFullSplashImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCurrency.GetSoftFullSplashImage");

	UKSCurrency_GetSoftFullSplashImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCurrency.GetSoftCurrencySmallIcon
// ()

void UKSCurrency::GetSoftCurrencySmallIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCurrency.GetSoftCurrencySmallIcon");

	UKSCurrency_GetSoftCurrencySmallIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCurrency.GetCurrencyDataForQuantity
// ()

void UKSCurrency::GetCurrencyDataForQuantity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCurrency.GetCurrencyDataForQuantity");

	UKSCurrency_GetCurrencyDataForQuantity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCustomApparelComponent.GetSkinObject
// ()

void UKSCustomApparelComponent::GetSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.GetSkinObject");

	UKSCustomApparelComponent_GetSkinObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCustomApparelComponent.GetCharacterOwner
// ()

void UKSCustomApparelComponent::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.GetCharacterOwner");

	UKSCustomApparelComponent_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCustomApparelComponent.GetApparelAsset
// ()

void UKSCustomApparelComponent::GetApparelAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.GetApparelAsset");

	UKSCustomApparelComponent_GetApparelAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSCustomApparelComponent.BlueprintFinishedInitialization
// ()

void UKSCustomApparelComponent::BlueprintFinishedInitialization()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSCustomApparelComponent.BlueprintFinishedInitialization");

	UKSCustomApparelComponent_BlueprintFinishedInitialization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageable.ReportDamageByInstigator
// ()

void UKSDamageable::ReportDamageByInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageable.ReportDamageByInstigator");

	UKSDamageable_ReportDamageByInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageable.GetHitLocationTypeFromBoneName
// ()

void UKSDamageable::GetHitLocationTypeFromBoneName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageable.GetHitLocationTypeFromBoneName");

	UKSDamageable_GetHitLocationTypeFromBoneName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageable.DoesBoneAllowHeadshotPassthrough
// ()

void UKSDamageable::DoesBoneAllowHeadshotPassthrough()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageable.DoesBoneAllowHeadshotPassthrough");

	UKSDamageable_DoesBoneAllowHeadshotPassthrough_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageTypeBase.PreProcessDamageEffects
// ()

void UKSDamageTypeBase::PreProcessDamageEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageTypeBase.PreProcessDamageEffects");

	UKSDamageTypeBase_PreProcessDamageEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageTypeBase.PostProcessDamageEffects
// ()

void UKSDamageTypeBase::PostProcessDamageEffects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageTypeBase.PostProcessDamageEffects");

	UKSDamageTypeBase_PostProcessDamageEffects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDamageTypeBase.GetDefaultObjectPropertiesFromDamageType
// ()

void UKSDamageTypeBase::GetDefaultObjectPropertiesFromDamageType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDamageTypeBase.GetDefaultObjectPropertiesFromDamageType");

	UKSDamageTypeBase_GetDefaultObjectPropertiesFromDamageType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.UpdateCachedHoveredActor
// ()

void UKSWeaponTargetingModule::UpdateCachedHoveredActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.UpdateCachedHoveredActor");

	UKSWeaponTargetingModule_UpdateCachedHoveredActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.TickTargeting
// ()

void UKSWeaponTargetingModule::TickTargeting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.TickTargeting");

	UKSWeaponTargetingModule_TickTargeting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.LookForHoveredActors
// ()

void UKSWeaponTargetingModule::LookForHoveredActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.LookForHoveredActors");

	UKSWeaponTargetingModule_LookForHoveredActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.IsTargetingModeEnabled
// ()

void UKSWeaponTargetingModule::IsTargetingModeEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.IsTargetingModeEnabled");

	UKSWeaponTargetingModule_IsTargetingModeEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.IsAimedAtFriendly
// ()

void UKSWeaponTargetingModule::IsAimedAtFriendly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.IsAimedAtFriendly");

	UKSWeaponTargetingModule_IsAimedAtFriendly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.IsAimedAtEnemy
// ()

void UKSWeaponTargetingModule::IsAimedAtEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.IsAimedAtEnemy");

	UKSWeaponTargetingModule_IsAimedAtEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.GetWeaponComponent
// ()

void UKSWeaponTargetingModule::GetWeaponComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.GetWeaponComponent");

	UKSWeaponTargetingModule_GetWeaponComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.GetOwningCharacter
// ()

void UKSWeaponTargetingModule::GetOwningCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.GetOwningCharacter");

	UKSWeaponTargetingModule_GetOwningCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.ExitTargetingMode
// ()

void UKSWeaponTargetingModule::ExitTargetingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.ExitTargetingMode");

	UKSWeaponTargetingModule_ExitTargetingMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponTargetingModule.EnterTargetingMode
// ()

void UKSWeaponTargetingModule::EnterTargetingMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponTargetingModule.EnterTargetingMode");

	UKSWeaponTargetingModule_EnterTargetingMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDefaultAimTargetingModule.IsWallMarkerActive
// ()

void UKSDefaultAimTargetingModule::IsWallMarkerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefaultAimTargetingModule.IsWallMarkerActive");

	UKSDefaultAimTargetingModule_IsWallMarkerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDefaultAimTargetingModule.IsCurrentlyBlocked
// ()

void UKSDefaultAimTargetingModule::IsCurrentlyBlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefaultAimTargetingModule.IsCurrentlyBlocked");

	UKSDefaultAimTargetingModule_IsCurrentlyBlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapPoint.ShouldCrouch
// ()

void AKSMapPoint::ShouldCrouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.ShouldCrouch");

	AKSMapPoint_ShouldCrouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapPoint.MatchesTags
// ()

void AKSMapPoint::MatchesTags()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.MatchesTags");

	AKSMapPoint_MatchesTags_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapPoint.MatchesTag
// ()

void AKSMapPoint::MatchesTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.MatchesTag");

	AKSMapPoint_MatchesTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapPoint.IsFriendly
// ()

void AKSMapPoint::IsFriendly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.IsFriendly");

	AKSMapPoint_IsFriendly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapPoint.IsAvailable
// ()

void AKSMapPoint::IsAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.IsAvailable");

	AKSMapPoint_IsAvailable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapPoint.IsActive
// ()

void AKSMapPoint::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapPoint.IsActive");

	AKSMapPoint_IsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDefensePoint.RelevantObjectiveUpdated
// ()

void AKSDefensePoint::RelevantObjectiveUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefensePoint.RelevantObjectiveUpdated");

	AKSDefensePoint_RelevantObjectiveUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDefensePoint.GetTargetDefensePoint
// ()

void AKSDefensePoint::GetTargetDefensePoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDefensePoint.GetTargetDefensePoint");

	AKSDefensePoint_GetTargetDefensePoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDeployable.ShouldSetFriendlyOutlineOnRegister
// ()

void UKSDeployable::ShouldSetFriendlyOutlineOnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDeployable.ShouldSetFriendlyOutlineOnRegister");

	UKSDeployable_ShouldSetFriendlyOutlineOnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDeployable.ShouldNotAffectTargetingReticle
// ()

void UKSDeployable::ShouldNotAffectTargetingReticle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDeployable.ShouldNotAffectTargetingReticle");

	UKSDeployable_ShouldNotAffectTargetingReticle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDeployable.ShouldDisablePingTargeting
// ()

void UKSDeployable::ShouldDisablePingTargeting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDeployable.ShouldDisablePingTargeting");

	UKSDeployable_ShouldDisablePingTargeting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDeployable.ShouldDisablePingOutline
// ()

void UKSDeployable::ShouldDisablePingOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDeployable.ShouldDisablePingOutline");

	UKSDeployable_ShouldDisablePingOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDeployable.SetOutlineColor
// ()

void UKSDeployable::SetOutlineColor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDeployable.SetOutlineColor");

	UKSDeployable_SetOutlineColor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestroyableHazardComponent.ShouldFireAt
// ()

void UKSDestroyableHazardComponent::ShouldFireAt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestroyableHazardComponent.ShouldFireAt");

	UKSDestroyableHazardComponent_ShouldFireAt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestroyableHazardComponent.ShouldEMP
// ()

void UKSDestroyableHazardComponent::ShouldEMP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestroyableHazardComponent.ShouldEMP");

	UKSDestroyableHazardComponent_ShouldEMP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.UndoBadDestroy
// ()

void AKSDestructibleBase::UndoBadDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.UndoBadDestroy");

	AKSDestructibleBase_UndoBadDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.SpeedGateOverlap
// ()

void AKSDestructibleBase::SpeedGateOverlap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.SpeedGateOverlap");

	AKSDestructibleBase_SpeedGateOverlap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.SetupPreBroken
// ()

void AKSDestructibleBase::SetupPreBroken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.SetupPreBroken");

	AKSDestructibleBase_SetupPreBroken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.ResetDestructible
// ()

void AKSDestructibleBase::ResetDestructible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.ResetDestructible");

	AKSDestructibleBase_ResetDestructible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.PostDestructionEvent
// ()

void AKSDestructibleBase::PostDestructionEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.PostDestructionEvent");

	AKSDestructibleBase_PostDestructionEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.OnRoundChange
// ()

void AKSDestructibleBase::OnRoundChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnRoundChange");

	AKSDestructibleBase_OnRoundChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.OnRep_Health
// ()

void AKSDestructibleBase::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnRep_Health");

	AKSDestructibleBase_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.OnDestructionChange
// ()

void AKSDestructibleBase::OnDestructionChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnDestructionChange");

	AKSDestructibleBase_OnDestructionChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.OnDamageEvent
// ()

void AKSDestructibleBase::OnDamageEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.OnDamageEvent");

	AKSDestructibleBase_OnDamageEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.GetMaxHealth
// ()

void AKSDestructibleBase::GetMaxHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.GetMaxHealth");

	AKSDestructibleBase_GetMaxHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.GetCurrentHealth
// ()

void AKSDestructibleBase::GetCurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.GetCurrentHealth");

	AKSDestructibleBase_GetCurrentHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDestructibleBase.BlueprintPrepareKillCamPlayback
// ()

void AKSDestructibleBase::BlueprintPrepareKillCamPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDestructibleBase.BlueprintPrepareKillCamPlayback");

	AKSDestructibleBase_BlueprintPrepareKillCamPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDistanceOptimizationComponent.IsCloseEnough
// ()

void UKSDistanceOptimizationComponent::IsCloseEnough()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDistanceOptimizationComponent.IsCloseEnough");

	UKSDistanceOptimizationComponent_IsCloseEnough_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.KSDistanceOptimizationComponent.DistanceOptimizationChangedDelegate__DelegateSignature
// ()

void UKSDistanceOptimizationComponent::DistanceOptimizationChangedDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.KSDistanceOptimizationComponent.DistanceOptimizationChangedDelegate__DelegateSignature");

	UKSDistanceOptimizationComponent_DistanceOptimizationChangedDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDistanceOptimizationComponent.AddComponents
// ()

void UKSDistanceOptimizationComponent::AddComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDistanceOptimizationComponent.AddComponents");

	UKSDistanceOptimizationComponent_AddComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDistanceOptimizationComponent.AddComponent
// ()

void UKSDistanceOptimizationComponent::AddComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDistanceOptimizationComponent.AddComponent");

	UKSDistanceOptimizationComponent_AddComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDistanceOptimizationComponent.AddActor
// ()

void UKSDistanceOptimizationComponent::AddActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDistanceOptimizationComponent.AddActor");

	UKSDistanceOptimizationComponent_AddActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.ShouldReverseWayPointSetDirection
// ()

void AKSDropLocation::ShouldReverseWayPointSetDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.ShouldReverseWayPointSetDirection");

	AKSDropLocation_ShouldReverseWayPointSetDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.IncrementSelectionCount
// ()

void AKSDropLocation::IncrementSelectionCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.IncrementSelectionCount");

	AKSDropLocation_IncrementSelectionCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.HandleRoundSetup
// ()

void AKSDropLocation::HandleRoundSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.HandleRoundSetup");

	AKSDropLocation_HandleRoundSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetWayPointSet
// ()

void AKSDropLocation::GetWayPointSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetWayPointSet");

	AKSDropLocation_GetWayPointSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetValidSides
// ()

void AKSDropLocation::GetValidSides()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetValidSides");

	AKSDropLocation_GetValidSides_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetTargetDropLocation
// ()

void AKSDropLocation::GetTargetDropLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetTargetDropLocation");

	AKSDropLocation_GetTargetDropLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetNumTimesSelected
// ()

void AKSDropLocation::GetNumTimesSelected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetNumTimesSelected");

	AKSDropLocation_GetNumTimesSelected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetFreefallXYDistance
// ()

void AKSDropLocation::GetFreefallXYDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetFreefallXYDistance");

	AKSDropLocation_GetFreefallXYDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetFreefallHeight
// ()

void AKSDropLocation::GetFreefallHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetFreefallHeight");

	AKSDropLocation_GetFreefallHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropLocation.GetFlightDistanceModifier
// ()

void AKSDropLocation::GetFlightDistanceModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropLocation.GetFlightDistanceModifier");

	AKSDropLocation_GetFlightDistanceModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropOffZone.TeamUpdated
// ()

void AKSDropOffZone::TeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropOffZone.TeamUpdated");

	AKSDropOffZone_TeamUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropOffZone.OnRep_Team
// ()

void AKSDropOffZone::OnRep_Team()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropOffZone.OnRep_Team");

	AKSDropOffZone_OnRep_Team_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropOffZone.OnRep_Activated
// ()

void AKSDropOffZone::OnRep_Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropOffZone.OnRep_Activated");

	AKSDropOffZone_OnRep_Activated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropOffZone.Activated
// ()

void AKSDropOffZone::Activated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropOffZone.Activated");

	AKSDropOffZone_Activated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropShipExitZone.ActorLeavingZone
// ()

void AKSDropShipExitZone::ActorLeavingZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropShipExitZone.ActorLeavingZone");

	AKSDropShipExitZone_ActorLeavingZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropShipExitZone.ActorEnteredZone
// ()

void AKSDropShipExitZone::ActorEnteredZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropShipExitZone.ActorEnteredZone");

	AKSDropShipExitZone_ActorEnteredZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDropShipLocation.OnDropShipSpawned
// ()

void AKSDropShipLocation::OnDropShipSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDropShipLocation.OnDropShipSpawned");

	AKSDropShipLocation_OnDropShipSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.Wipe
// ()

void UKSDynamicMaskComponent::Wipe()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.Wipe");

	UKSDynamicMaskComponent_Wipe_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.GetColorAtPosition
// ()

void UKSDynamicMaskComponent::GetColorAtPosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.GetColorAtPosition");

	UKSDynamicMaskComponent_GetColorAtPosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.DrawDodecagon
// ()

void UKSDynamicMaskComponent::DrawDodecagon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.DrawDodecagon");

	UKSDynamicMaskComponent_DrawDodecagon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.DrawBox
// ()

void UKSDynamicMaskComponent::DrawBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.DrawBox");

	UKSDynamicMaskComponent_DrawBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSDynamicMaskComponent.ConvertToTargetFromWorld
// ()

void UKSDynamicMaskComponent::ConvertToTargetFromWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSDynamicMaskComponent.ConvertToTargetFromWorld");

	UKSDynamicMaskComponent_ConvertToTargetFromWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmote.GetEmoteCosmeticClass
// ()

void UKSEmote::GetEmoteCosmeticClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmote.GetEmoteCosmeticClass");

	UKSEmote_GetEmoteCosmeticClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipPoint
// ()

void UKSEquipmentCosmeticComponent::OnRep_EquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipPoint");

	UKSEquipmentCosmeticComponent_OnRep_EquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipmentId
// ()

void UKSEquipmentCosmeticComponent::OnRep_EquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.OnRep_EquipmentId");

	UKSEquipmentCosmeticComponent_OnRep_EquipmentId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsOwnerDeadOrDestroyed
// ()

void UKSEquipmentCosmeticComponent::IsOwnerDeadOrDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsOwnerDeadOrDestroyed");

	UKSEquipmentCosmeticComponent_IsOwnerDeadOrDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyViewed
// ()

void UKSEquipmentCosmeticComponent::IsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyViewed");

	UKSEquipmentCosmeticComponent_IsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyManaged
// ()

void UKSEquipmentCosmeticComponent::IsLocallyManaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsLocallyManaged");

	UKSEquipmentCosmeticComponent_IsLocallyManaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsInAction
// ()

void UKSEquipmentCosmeticComponent::IsInAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsInAction");

	UKSEquipmentCosmeticComponent_IsInAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.IsAPropSpawner
// ()

void UKSEquipmentCosmeticComponent::IsAPropSpawner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.IsAPropSpawner");

	UKSEquipmentCosmeticComponent_IsAPropSpawner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetEquipPoint
// ()

void UKSEquipmentCosmeticComponent::GetEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetEquipPoint");

	UKSEquipmentCosmeticComponent_GetEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetCharAnimInstance
// ()

void UKSEquipmentCosmeticComponent::GetCharAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetCharAnimInstance");

	UKSEquipmentCosmeticComponent_GetCharAnimInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterOwner
// ()

void UKSEquipmentCosmeticComponent::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterOwner");

	UKSEquipmentCosmeticComponent_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterMesh
// ()

void UKSEquipmentCosmeticComponent::GetCharacterMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.GetCharacterMesh");

	UKSEquipmentCosmeticComponent_GetCharacterMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentCosmeticComponent.BlueprintOwnerSkinTagContainerChanged
// ()

void UKSEquipmentCosmeticComponent::BlueprintOwnerSkinTagContainerChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentCosmeticComponent.BlueprintOwnerSkinTagContainerChanged");

	UKSEquipmentCosmeticComponent_BlueprintOwnerSkinTagContainerChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.OnRep_PlayTicker
// ()

void UKSEmoteCosmeticComponent::OnRep_PlayTicker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.OnRep_PlayTicker");

	UKSEmoteCosmeticComponent_OnRep_PlayTicker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.OnRep_EmoteAsset
// ()

void UKSEmoteCosmeticComponent::OnRep_EmoteAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.OnRep_EmoteAsset");

	UKSEmoteCosmeticComponent_OnRep_EmoteAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.OnInitialize
// ()

void UKSEmoteCosmeticComponent::OnInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.OnInitialize");

	UKSEmoteCosmeticComponent_OnInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.MarkStopped
// ()

void UKSEmoteCosmeticComponent::MarkStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.MarkStopped");

	UKSEmoteCosmeticComponent_MarkStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.MarkPlaying
// ()

void UKSEmoteCosmeticComponent::MarkPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.MarkPlaying");

	UKSEmoteCosmeticComponent_MarkPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.IsPlaying
// ()

void UKSEmoteCosmeticComponent::IsPlaying()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.IsPlaying");

	UKSEmoteCosmeticComponent_IsPlaying_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.IsInitialized
// ()

void UKSEmoteCosmeticComponent::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.IsInitialized");

	UKSEmoteCosmeticComponent_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.GetSkinObject
// ()

void UKSEmoteCosmeticComponent::GetSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.GetSkinObject");

	UKSEmoteCosmeticComponent_GetSkinObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.GetEmoteAsset
// ()

void UKSEmoteCosmeticComponent::GetEmoteAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.GetEmoteAsset");

	UKSEmoteCosmeticComponent_GetEmoteAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.BlueprintPlayEmote
// ()

void UKSEmoteCosmeticComponent::BlueprintPlayEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.BlueprintPlayEmote");

	UKSEmoteCosmeticComponent_BlueprintPlayEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.BlueprintInterruptEmote
// ()

void UKSEmoteCosmeticComponent::BlueprintInterruptEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.BlueprintInterruptEmote");

	UKSEmoteCosmeticComponent_BlueprintInterruptEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent.AddEmoteCosmeticSubInstance
// ()

void UKSEmoteCosmeticComponent::AddEmoteCosmeticSubInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent.AddEmoteCosmeticSubInstance");

	UKSEmoteCosmeticComponent_AddEmoteCosmeticSubInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent_Spray.NetMulticastPlaySpray
// ()

void UKSEmoteCosmeticComponent_Spray::NetMulticastPlaySpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent_Spray.NetMulticastPlaySpray");

	UKSEmoteCosmeticComponent_Spray_NetMulticastPlaySpray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticComponent_Spray.BlueprintPlaySpray
// ()

void UKSEmoteCosmeticComponent_Spray::BlueprintPlaySpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticComponent_Spray.BlueprintPlaySpray");

	UKSEmoteCosmeticComponent_Spray_BlueprintPlaySpray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.MarkOwnerStopped
// ()

void UKSEmoteCosmeticSubInstance::MarkOwnerStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.MarkOwnerStopped");

	UKSEmoteCosmeticSubInstance_MarkOwnerStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.IsOwnerDeadOrDestroyed
// ()

void UKSEmoteCosmeticSubInstance::IsOwnerDeadOrDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.IsOwnerDeadOrDestroyed");

	UKSEmoteCosmeticSubInstance_IsOwnerDeadOrDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.IsLocallyViewed
// ()

void UKSEmoteCosmeticSubInstance::IsLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.IsLocallyViewed");

	UKSEmoteCosmeticSubInstance_IsLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.IsLocallyManaged
// ()

void UKSEmoteCosmeticSubInstance::IsLocallyManaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.IsLocallyManaged");

	UKSEmoteCosmeticSubInstance_IsLocallyManaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.GetSkinObject
// ()

void UKSEmoteCosmeticSubInstance::GetSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.GetSkinObject");

	UKSEmoteCosmeticSubInstance_GetSkinObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.GetOwningEmoteCosmeticComponent
// ()

void UKSEmoteCosmeticSubInstance::GetOwningEmoteCosmeticComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.GetOwningEmoteCosmeticComponent");

	UKSEmoteCosmeticSubInstance_GetOwningEmoteCosmeticComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.GetCharAnimInstance
// ()

void UKSEmoteCosmeticSubInstance::GetCharAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.GetCharAnimInstance");

	UKSEmoteCosmeticSubInstance_GetCharAnimInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.GetCharacterOwner
// ()

void UKSEmoteCosmeticSubInstance::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.GetCharacterOwner");

	UKSEmoteCosmeticSubInstance_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.GetCharacterMesh
// ()

void UKSEmoteCosmeticSubInstance::GetCharacterMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.GetCharacterMesh");

	UKSEmoteCosmeticSubInstance_GetCharacterMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintStopped
// ()

void UKSEmoteCosmeticSubInstance::BlueprintStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintStopped");

	UKSEmoteCosmeticSubInstance_BlueprintStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintOnUnregister
// ()

void UKSEmoteCosmeticSubInstance::BlueprintOnUnregister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintOnUnregister");

	UKSEmoteCosmeticSubInstance_BlueprintOnUnregister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintOnRegister
// ()

void UKSEmoteCosmeticSubInstance::BlueprintOnRegister()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintOnRegister");

	UKSEmoteCosmeticSubInstance_BlueprintOnRegister_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintInterrupt
// ()

void UKSEmoteCosmeticSubInstance::BlueprintInterrupt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance.BlueprintInterrupt");

	UKSEmoteCosmeticSubInstance_BlueprintInterrupt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance_Play.BlueprintPlayEmote
// ()

void UKSEmoteCosmeticSubInstance_Play::BlueprintPlayEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance_Play.BlueprintPlayEmote");

	UKSEmoteCosmeticSubInstance_Play_BlueprintPlayEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance_Spray.SetPrimarySprayDecalForOwner
// ()

void UKSEmoteCosmeticSubInstance_Spray::SetPrimarySprayDecalForOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance_Spray.SetPrimarySprayDecalForOwner");

	UKSEmoteCosmeticSubInstance_Spray_SetPrimarySprayDecalForOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteCosmeticSubInstance_Spray.BlueprintPlaySpray
// ()

void UKSEmoteCosmeticSubInstance_Spray::BlueprintPlaySpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteCosmeticSubInstance_Spray.BlueprintPlaySpray");

	UKSEmoteCosmeticSubInstance_Spray_BlueprintPlaySpray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteInstance.GetEmoteCosmeticComponent
// ()

void AKSEmoteInstance::GetEmoteCosmeticComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteInstance.GetEmoteCosmeticComponent");

	AKSEmoteInstance_GetEmoteCosmeticComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteMusicManager.RemovePlayingMusic
// ()

void AKSEmoteMusicManager::RemovePlayingMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteMusicManager.RemovePlayingMusic");

	AKSEmoteMusicManager_RemovePlayingMusic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmoteMusicManager.AddPlayingMusic
// ()

void AKSEmoteMusicManager::AddPlayingMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmoteMusicManager.AddPlayingMusic");

	AKSEmoteMusicManager_AddPlayingMusic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponentOwner.GetEmotionFloat
// ()

void UKSEmotionComponentOwner::GetEmotionFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponentOwner.GetEmotionFloat");

	UKSEmotionComponentOwner_GetEmotionFloat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponentOwner.GetEmotion
// ()

void UKSEmotionComponentOwner::GetEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponentOwner.GetEmotion");

	UKSEmotionComponentOwner_GetEmotion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.RemoveEmotionById
// ()

void UKSEmotionComponent::RemoveEmotionById()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.RemoveEmotionById");

	UKSEmotionComponent_RemoveEmotionById_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.RemoveEmotion
// ()

void UKSEmotionComponent::RemoveEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.RemoveEmotion");

	UKSEmotionComponent_RemoveEmotion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.GetEmotionComponentOwner
// ()

void UKSEmotionComponent::GetEmotionComponentOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.GetEmotionComponentOwner");

	UKSEmotionComponent_GetEmotionComponentOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.GetCurrentEmotion
// ()

void UKSEmotionComponent::GetCurrentEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.GetCurrentEmotion");

	UKSEmotionComponent_GetCurrentEmotion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.AddEmotionInternal
// ()

void UKSEmotionComponent::AddEmotionInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddEmotionInternal");

	UKSEmotionComponent_AddEmotionInternal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.AddEmotionForDuration
// ()

void UKSEmotionComponent::AddEmotionForDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddEmotionForDuration");

	UKSEmotionComponent_AddEmotionForDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.AddEmotion
// ()

void UKSEmotionComponent::AddEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddEmotion");

	UKSEmotionComponent_AddEmotion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEmotionComponent.AddAndRemoveEmotion
// ()

void UKSEmotionComponent::AddAndRemoveEmotion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEmotionComponent.AddAndRemoveEmotion");

	UKSEmotionComponent_AddAndRemoveEmotion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.SpawnQueuedBots
// ()

void AKSEncounterManager::SpawnQueuedBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.SpawnQueuedBots");

	AKSEncounterManager_SpawnQueuedBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.RemoveQueuedBots
// ()

void AKSEncounterManager::RemoveQueuedBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.RemoveQueuedBots");

	AKSEncounterManager_RemoveQueuedBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.PerformAutomaticSpawns
// ()

void AKSEncounterManager::PerformAutomaticSpawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.PerformAutomaticSpawns");

	AKSEncounterManager_PerformAutomaticSpawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.OnSpawnedBotDestroyed
// ()

void AKSEncounterManager::OnSpawnedBotDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.OnSpawnedBotDestroyed");

	AKSEncounterManager_OnSpawnedBotDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.OnSpawnedBotDeath
// ()

void AKSEncounterManager::OnSpawnedBotDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.OnSpawnedBotDeath");

	AKSEncounterManager_OnSpawnedBotDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.IsPlayerStartUnseen
// ()

void AKSEncounterManager::IsPlayerStartUnseen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.IsPlayerStartUnseen");

	AKSEncounterManager_IsPlayerStartUnseen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.IsBotQueueEmpty
// ()

void AKSEncounterManager::IsBotQueueEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.IsBotQueueEmpty");

	AKSEncounterManager_IsBotQueueEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.IncreaseCurrentAutoSpawnScore
// ()

void AKSEncounterManager::IncreaseCurrentAutoSpawnScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.IncreaseCurrentAutoSpawnScore");

	AKSEncounterManager_IncreaseCurrentAutoSpawnScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.GetWaveActiveBotCount
// ()

void AKSEncounterManager::GetWaveActiveBotCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.GetWaveActiveBotCount");

	AKSEncounterManager_GetWaveActiveBotCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.GetNumHumanPlayers
// ()

void AKSEncounterManager::GetNumHumanPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.GetNumHumanPlayers");

	AKSEncounterManager_GetNumHumanPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.GetNextBotSpawnCost
// ()

void AKSEncounterManager::GetNextBotSpawnCost()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.GetNextBotSpawnCost");

	AKSEncounterManager_GetNextBotSpawnCost_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.GetHumanPlayers
// ()

void AKSEncounterManager::GetHumanPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.GetHumanPlayers");

	AKSEncounterManager_GetHumanPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.GetEncounterActiveBotCount
// ()

void AKSEncounterManager::GetEncounterActiveBotCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.GetEncounterActiveBotCount");

	AKSEncounterManager_GetEncounterActiveBotCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.GetActiveBotCount
// ()

void AKSEncounterManager::GetActiveBotCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.GetActiveBotCount");

	AKSEncounterManager_GetActiveBotCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.FindEncounter
// ()

void AKSEncounterManager::FindEncounter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.FindEncounter");

	AKSEncounterManager_FindEncounter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.EnqueueEncounterWave
// ()

void AKSEncounterManager::EnqueueEncounterWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.EnqueueEncounterWave");

	AKSEncounterManager_EnqueueEncounterWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.EnableAutoSpawn
// ()

void AKSEncounterManager::EnableAutoSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.EnableAutoSpawn");

	AKSEncounterManager_EnableAutoSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.DisableAutoSpawn
// ()

void AKSEncounterManager::DisableAutoSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.DisableAutoSpawn");

	AKSEncounterManager_DisableAutoSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.ClearQueuedBots
// ()

void AKSEncounterManager::ClearQueuedBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.ClearQueuedBots");

	AKSEncounterManager_ClearQueuedBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.CanSpawnNextBot
// ()

void AKSEncounterManager::CanSpawnNextBot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.CanSpawnNextBot");

	AKSEncounterManager_CanSpawnNextBot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.CanSpawnBotNow
// ()

void AKSEncounterManager::CanSpawnBotNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.CanSpawnBotNow");

	AKSEncounterManager_CanSpawnBotNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterManager.AdvanceWave
// ()

void AKSEncounterManager::AdvanceWave()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterManager.AdvanceWave");

	AKSEncounterManager_AdvanceWave_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterWave.GetCostToSpawn
// ()

void UKSEncounterWave::GetCostToSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterWave.GetCostToSpawn");

	UKSEncounterWave_GetCostToSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEncounterWave.ChooseNSpawnTableRows
// ()

void UKSEncounterWave::ChooseNSpawnTableRows()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEncounterWave.ChooseNSpawnTableRows");

	UKSEncounterWave_ChooseNSpawnTableRows_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEnforcedEquipmentState.OnRep_EnforcedItems
// ()

void AKSEnforcedEquipmentState::OnRep_EnforcedItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEnforcedEquipmentState.OnRep_EnforcedItems");

	AKSEnforcedEquipmentState_OnRep_EnforcedItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEnvironmentVolumeActor.UpdateEnvironmentTag
// ()

void AKSEnvironmentVolumeActor::UpdateEnvironmentTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEnvironmentVolumeActor.UpdateEnvironmentTag");

	AKSEnvironmentVolumeActor_UpdateEnvironmentTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentManagerComponent.SetEquipmentContainerOwner
// ()

void UKSEquipmentManagerComponent::SetEquipmentContainerOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentManagerComponent.SetEquipmentContainerOwner");

	UKSEquipmentManagerComponent_SetEquipmentContainerOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentManagerComponent.OnItemDropped
// ()

void UKSEquipmentManagerComponent::OnItemDropped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentManagerComponent.OnItemDropped");

	UKSEquipmentManagerComponent_OnItemDropped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEquipmentManagerComponent.GetEquipmentByEquipPoint
// ()

void UKSEquipmentManagerComponent::GetEquipmentByEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEquipmentManagerComponent.GetEquipmentByEquipPoint");

	UKSEquipmentManagerComponent_GetEquipmentByEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEscapePoint.OnEscapeOverlapEnd
// ()

void AKSEscapePoint::OnEscapeOverlapEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEscapePoint.OnEscapeOverlapEnd");

	AKSEscapePoint_OnEscapeOverlapEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEscapePoint.OnEscapeOverlapBegin
// ()

void AKSEscapePoint::OnEscapeOverlapBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEscapePoint.OnEscapeOverlapBegin");

	AKSEscapePoint_OnEscapeOverlapBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEscapePoint.NotifyBots
// ()

void AKSEscapePoint::NotifyBots()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEscapePoint.NotifyBots");

	AKSEscapePoint_NotifyBots_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.TriggerEvent
// ()

void UKSEventTracker::TriggerEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.TriggerEvent");

	UKSEventTracker_TriggerEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.TickTracker
// ()

void UKSEventTracker::TickTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.TickTracker");

	UKSEventTracker_TickTracker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.HandleTrackerInitialized
// ()

void UKSEventTracker::HandleTrackerInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.HandleTrackerInitialized");

	UKSEventTracker_HandleTrackerInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.HandleLostPlayerController
// ()

void UKSEventTracker::HandleLostPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.HandleLostPlayerController");

	UKSEventTracker_HandleLostPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.GetWorldSettings
// ()

void UKSEventTracker::GetWorldSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.GetWorldSettings");

	UKSEventTracker_GetWorldSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.GetGameState
// ()

void UKSEventTracker::GetGameState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.GetGameState");

	UKSEventTracker_GetGameState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.GetGameMode
// ()

void UKSEventTracker::GetGameMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.GetGameMode");

	UKSEventTracker_GetGameMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSEventTracker.GetGameInstance
// ()

void UKSEventTracker::GetGameInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSEventTracker.GetGameInstance");

	UKSEventTracker_GetGameInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtinguisher.ShouldExtinguishRightNow
// ()

void UKSExtinguisher::ShouldExtinguishRightNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtinguisher.ShouldExtinguishRightNow");

	UKSExtinguisher_ShouldExtinguishRightNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionPickup.IsPickupUsed
// ()

void AKSExtractionPickup::IsPickupUsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.IsPickupUsed");

	AKSExtractionPickup_IsPickupUsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionPickup.IsPickupEnabled
// ()

void AKSExtractionPickup::IsPickupEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.IsPickupEnabled");

	AKSExtractionPickup_IsPickupEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionPickup.DeactivatePickup
// ()

void AKSExtractionPickup::DeactivatePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.DeactivatePickup");

	AKSExtractionPickup_DeactivatePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSExtractionPickup.ActivatePickup
// ()

void AKSExtractionPickup::ActivatePickup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSExtractionPickup.ActivatePickup");

	AKSExtractionPickup_ActivatePickup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFinalBlowTracker.HandleOnLastPlayer
// ()

void UKSFinalBlowTracker::HandleOnLastPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFinalBlowTracker.HandleOnLastPlayer");

	UKSFinalBlowTracker_HandleOnLastPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFinalBlowTracker.CheckLastPlayer
// ()

void UKSFinalBlowTracker::CheckLastPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFinalBlowTracker.CheckLastPlayer");

	UKSFinalBlowTracker_CheckLastPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFirstBloodTracker.HandleTrackerAccolade
// ()

void UKSFirstBloodTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFirstBloodTracker.HandleTrackerAccolade");

	UKSFirstBloodTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFlightRecoveryVolume.OnOverlapEnd
// ()

void AKSFlightRecoveryVolume::OnOverlapEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFlightRecoveryVolume.OnOverlapEnd");

	AKSFlightRecoveryVolume_OnOverlapEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFlightRecoveryVolume.OnOverlapBegin
// ()

void AKSFlightRecoveryVolume::OnOverlapBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFlightRecoveryVolume.OnOverlapBegin");

	AKSFlightRecoveryVolume_OnOverlapBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFootstepOverrideInterface.GetPriorityLevel
// ()

void UKSFootstepOverrideInterface::GetPriorityLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFootstepOverrideInterface.GetPriorityLevel");

	UKSFootstepOverrideInterface_GetPriorityLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSFootstepOverrideInterface.GetOverrideByLocation
// ()

void UKSFootstepOverrideInterface::GetOverrideByLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSFootstepOverrideInterface.GetOverrideByLocation");

	UKSFootstepOverrideInterface_GetOverrideByLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGadgetAssetDrop.GetLabelInfoForGadgetDescription
// ()

void AKSGadgetAssetDrop::GetLabelInfoForGadgetDescription()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGadgetAssetDrop.GetLabelInfoForGadgetDescription");

	AKSGadgetAssetDrop_GetLabelInfoForGadgetDescription_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.SetGoPlayMapTravelDelayed
// ()

void UKSGameEngine::SetGoPlayMapTravelDelayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.SetGoPlayMapTravelDelayed");

	UKSGameEngine_SetGoPlayMapTravelDelayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.SetGoPlayMapDelayTimeoutLimit
// ()

void UKSGameEngine::SetGoPlayMapDelayTimeoutLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.SetGoPlayMapDelayTimeoutLimit");

	UKSGameEngine_SetGoPlayMapDelayTimeoutLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.QuickGoPlayCachedMap
// ()

void UKSGameEngine::QuickGoPlayCachedMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.QuickGoPlayCachedMap");

	UKSGameEngine_QuickGoPlayCachedMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.OnTriggerGoPlayMap
// ()

void UKSGameEngine::OnTriggerGoPlayMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.OnTriggerGoPlayMap");

	UKSGameEngine_OnTriggerGoPlayMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.GetGoPlayMapTravelDelayed
// ()

void UKSGameEngine::GetGoPlayMapTravelDelayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.GetGoPlayMapTravelDelayed");

	UKSGameEngine_GetGoPlayMapTravelDelayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.GetGoPlayMapDelayTimeoutLimit
// ()

void UKSGameEngine::GetGoPlayMapDelayTimeoutLimit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.GetGoPlayMapDelayTimeoutLimit");

	UKSGameEngine_GetGoPlayMapDelayTimeoutLimit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.FinishGoPlayMap
// ()

void UKSGameEngine::FinishGoPlayMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.FinishGoPlayMap");

	UKSGameEngine_FinishGoPlayMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameEngine.CancelDelayedGoPlayMap
// ()

void UKSGameEngine::CancelDelayedGoPlayMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameEngine.CancelDelayedGoPlayMap");

	UKSGameEngine_CancelDelayedGoPlayMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.UpdateRecordedAnimStats
// ()

void UKSGameInstance::UpdateRecordedAnimStats()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.UpdateRecordedAnimStats");

	UKSGameInstance_UpdateRecordedAnimStats_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.HandleAppResume
// ()

void UKSGameInstance::HandleAppResume()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.HandleAppResume");

	UKSGameInstance_HandleAppResume_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.HandleAppReactivated
// ()

void UKSGameInstance::HandleAppReactivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.HandleAppReactivated");

	UKSGameInstance_HandleAppReactivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetWeaponMasteryManager
// ()

void UKSGameInstance::GetWeaponMasteryManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetWeaponMasteryManager");

	UKSGameInstance_GetWeaponMasteryManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetStoreItemHelper
// ()

void UKSGameInstance::GetStoreItemHelper()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetStoreItemHelper");

	UKSGameInstance_GetStoreItemHelper_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetRankedManager
// ()

void UKSGameInstance::GetRankedManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetRankedManager");

	UKSGameInstance_GetRankedManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetPunishmentManager
// ()

void UKSGameInstance::GetPunishmentManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetPunishmentManager");

	UKSGameInstance_GetPunishmentManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetPlayerStatsManager
// ()

void UKSGameInstance::GetPlayerStatsManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetPlayerStatsManager");

	UKSGameInstance_GetPlayerStatsManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetPlayerInventoryHelper
// ()

void UKSGameInstance::GetPlayerInventoryHelper()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetPlayerInventoryHelper");

	UKSGameInstance_GetPlayerInventoryHelper_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetPlayerChallengesManager
// ()

void UKSGameInstance::GetPlayerChallengesManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetPlayerChallengesManager");

	UKSGameInstance_GetPlayerChallengesManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetNPETrackManager
// ()

void UKSGameInstance::GetNPETrackManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetNPETrackManager");

	UKSGameInstance_GetNPETrackManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetMercMasteryManager
// ()

void UKSGameInstance::GetMercMasteryManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetMercMasteryManager");

	UKSGameInstance_GetMercMasteryManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetLoadingScreenImage
// ()

void UKSGameInstance::GetLoadingScreenImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetLoadingScreenImage");

	UKSGameInstance_GetLoadingScreenImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetGeneralProgressionManager
// ()

void UKSGameInstance::GetGeneralProgressionManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetGeneralProgressionManager");

	UKSGameInstance_GetGeneralProgressionManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetBattlePassProgressionManager
// ()

void UKSGameInstance::GetBattlePassProgressionManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetBattlePassProgressionManager");

	UKSGameInstance_GetBattlePassProgressionManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetAwardsManager
// ()

void UKSGameInstance::GetAwardsManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetAwardsManager");

	UKSGameInstance_GetAwardsManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.GetAudioManager
// ()

void UKSGameInstance::GetAudioManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.GetAudioManager");

	UKSGameInstance_GetAudioManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.ExportAnimAudit
// ()

void UKSGameInstance::ExportAnimAudit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.ExportAnimAudit");

	UKSGameInstance_ExportAnimAudit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.EndLoading
// ()

void UKSGameInstance::EndLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.EndLoading");

	UKSGameInstance_EndLoading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.ClaimTutorialAward
// ()

void UKSGameInstance::ClaimTutorialAward()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.ClaimTutorialAward");

	UKSGameInstance_ClaimTutorialAward_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameInstance.BeginLoading
// ()

void UKSGameInstance::BeginLoading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameInstance.BeginLoading");

	UKSGameInstance_BeginLoading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.UsePlayerLoadouts
// ()

void AKSGameMode::UsePlayerLoadouts()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.UsePlayerLoadouts");

	AKSGameMode_UsePlayerLoadouts_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.StartPreSelectionPhase
// ()

void AKSGameMode::StartPreSelectionPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.StartPreSelectionPhase");

	AKSGameMode_StartPreSelectionPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.SetMatchPhase
// ()

void AKSGameMode::SetMatchPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.SetMatchPhase");

	AKSGameMode_SetMatchPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.SetInfiniteAmmo
// ()

void AKSGameMode::SetInfiniteAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.SetInfiniteAmmo");

	AKSGameMode_SetInfiniteAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.SelectAWinner
// ()

void AKSGameMode::SelectAWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.SelectAWinner");

	AKSGameMode_SelectAWinner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.PopulateLootSites
// ()

void AKSGameMode::PopulateLootSites()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.PopulateLootSites");

	AKSGameMode_PopulateLootSites_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.PopulateInteractiveObjects
// ()

void AKSGameMode::PopulateInteractiveObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.PopulateInteractiveObjects");

	AKSGameMode_PopulateInteractiveObjects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.PlayerCanEnterPlay
// ()

void AKSGameMode::PlayerCanEnterPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.PlayerCanEnterPlay");

	AKSGameMode_PlayerCanEnterPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnWaitForPlayersExpired
// ()

void AKSGameMode::OnWaitForPlayersExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnWaitForPlayersExpired");

	AKSGameMode_OnWaitForPlayersExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnTeamEliminated
// ()

void AKSGameMode::OnTeamEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnTeamEliminated");

	AKSGameMode_OnTeamEliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnPlayerEliminated
// ()

void AKSGameMode::OnPlayerEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnPlayerEliminated");

	AKSGameMode_OnPlayerEliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnPlayerDownStateChanged
// ()

void AKSGameMode::OnPlayerDownStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnPlayerDownStateChanged");

	AKSGameMode_OnPlayerDownStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterRevived
// ()

void AKSGameMode::OnKSCharacterRevived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterRevived");

	AKSGameMode_OnKSCharacterRevived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterRadialMenuItemUsed
// ()

void AKSGameMode::OnKSCharacterRadialMenuItemUsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterRadialMenuItemUsed");

	AKSGameMode_OnKSCharacterRadialMenuItemUsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterDowned
// ()

void AKSGameMode::OnKSCharacterDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterDowned");

	AKSGameMode_OnKSCharacterDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterDownAssist
// ()

void AKSGameMode::OnKSCharacterDownAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterDownAssist");

	AKSGameMode_OnKSCharacterDownAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterCombatSummary
// ()

void AKSGameMode::OnKSCharacterCombatSummary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterCombatSummary");

	AKSGameMode_OnKSCharacterCombatSummary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterCombatEvent
// ()

void AKSGameMode::OnKSCharacterCombatEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterCombatEvent");

	AKSGameMode_OnKSCharacterCombatEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.OnKSCharacterBaseDied
// ()

void AKSGameMode::OnKSCharacterBaseDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.OnKSCharacterBaseDied");

	AKSGameMode_OnKSCharacterBaseDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.K2_OnMatchPhaseSet
// ()

void AKSGameMode::K2_OnMatchPhaseSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.K2_OnMatchPhaseSet");

	AKSGameMode_K2_OnMatchPhaseSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.IsAWinner
// ()

void AKSGameMode::IsAWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.IsAWinner");

	AKSGameMode_IsAWinner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.HandleAllPlayersFinishedPrePrep
// ()

void AKSGameMode::HandleAllPlayersFinishedPrePrep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.HandleAllPlayersFinishedPrePrep");

	AKSGameMode_HandleAllPlayersFinishedPrePrep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetStartingTeamNum
// ()

void AKSGameMode::GetStartingTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetStartingTeamNum");

	AKSGameMode_GetStartingTeamNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetShotListener
// ()

void AKSGameMode::GetShotListener()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetShotListener");

	AKSGameMode_GetShotListener_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetRewardsCalculatorClass
// ()

void AKSGameMode::GetRewardsCalculatorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetRewardsCalculatorClass");

	AKSGameMode_GetRewardsCalculatorClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetPerSecondChargePercent
// ()

void AKSGameMode::GetPerSecondChargePercent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetPerSecondChargePercent");

	AKSGameMode_GetPerSecondChargePercent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetPerSecondChargeMode
// ()

void AKSGameMode::GetPerSecondChargeMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetPerSecondChargeMode");

	AKSGameMode_GetPerSecondChargeMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetMatchTimeElapsed
// ()

void AKSGameMode::GetMatchTimeElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetMatchTimeElapsed");

	AKSGameMode_GetMatchTimeElapsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetMatchPhase
// ()

void AKSGameMode::GetMatchPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetMatchPhase");

	AKSGameMode_GetMatchPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetGamePhase
// ()

void AKSGameMode::GetGamePhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetGamePhase");

	AKSGameMode_GetGamePhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetGameModeHUDSettings
// ()

void AKSGameMode::GetGameModeHUDSettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetGameModeHUDSettings");

	AKSGameMode_GetGameModeHUDSettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetDefaultPlayerMods
// ()

void AKSGameMode::GetDefaultPlayerMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetDefaultPlayerMods");

	AKSGameMode_GetDefaultPlayerMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.GetCachedInteractiveObjects
// ()

void AKSGameMode::GetCachedInteractiveObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.GetCachedInteractiveObjects");

	AKSGameMode_GetCachedInteractiveObjects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.EventOnTeamCreated
// ()

void AKSGameMode::EventOnTeamCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.EventOnTeamCreated");

	AKSGameMode_EventOnTeamCreated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.DoesClearObjectivesMarkedUsedOnSidesFlipped
// ()

void AKSGameMode::DoesClearObjectivesMarkedUsedOnSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.DoesClearObjectivesMarkedUsedOnSidesFlipped");

	AKSGameMode_DoesClearObjectivesMarkedUsedOnSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.DestroyDynamicZipLines
// ()

void AKSGameMode::DestroyDynamicZipLines()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.DestroyDynamicZipLines");

	AKSGameMode_DestroyDynamicZipLines_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.DestroyActive
// ()

void AKSGameMode::DestroyActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.DestroyActive");

	AKSGameMode_DestroyActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.ClearLootSites
// ()

void AKSGameMode::ClearLootSites()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.ClearLootSites");

	AKSGameMode_ClearLootSites_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.ClearInteractiveObjects
// ()

void AKSGameMode::ClearInteractiveObjects()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.ClearInteractiveObjects");

	AKSGameMode_ClearInteractiveObjects_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.CanUsePlayerStart
// ()

void AKSGameMode::CanUsePlayerStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.CanUsePlayerStart");

	AKSGameMode_CanUsePlayerStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.CanSpawnBotsNow
// ()

void AKSGameMode::CanSpawnBotsNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.CanSpawnBotsNow");

	AKSGameMode_CanSpawnBotsNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.AllPlayersLockedInForComponent
// ()

void AKSGameMode::AllPlayersLockedInForComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.AllPlayersLockedInForComponent");

	AKSGameMode_AllPlayersLockedInForComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.AllowDamageNow
// ()

void AKSGameMode::AllowDamageNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.AllowDamageNow");

	AKSGameMode_AllowDamageNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode.AddInteractiveObject
// ()

void AKSGameMode::AddInteractiveObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode.AddInteractiveObject");

	AKSGameMode_AddInteractiveObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.StartRound
// ()

void AKSGameMode_RoundGame::StartRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.StartRound");

	AKSGameMode_RoundGame_StartRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.ReadyToStartNextRound
// ()

void AKSGameMode_RoundGame::ReadyToStartNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.ReadyToStartNextRound");

	AKSGameMode_RoundGame_ReadyToStartNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.ReadyToPrepareNextRound
// ()

void AKSGameMode_RoundGame::ReadyToPrepareNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.ReadyToPrepareNextRound");

	AKSGameMode_RoundGame_ReadyToPrepareNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.PrepareForNextRound
// ()

void AKSGameMode_RoundGame::PrepareForNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.PrepareForNextRound");

	AKSGameMode_RoundGame_PrepareForNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.K2_OnSetRoundState
// ()

void AKSGameMode_RoundGame::K2_OnSetRoundState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.K2_OnSetRoundState");

	AKSGameMode_RoundGame_K2_OnSetRoundState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.IsRoundSetupComplete
// ()

void AKSGameMode_RoundGame::IsRoundSetupComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.IsRoundSetupComplete");

	AKSGameMode_RoundGame_IsRoundSetupComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.IsRoundInProgress
// ()

void AKSGameMode_RoundGame::IsRoundInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.IsRoundInProgress");

	AKSGameMode_RoundGame_IsRoundInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.HasRoundStarted
// ()

void AKSGameMode_RoundGame::HasRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.HasRoundStarted");

	AKSGameMode_RoundGame_HasRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.HasRoundEnded
// ()

void AKSGameMode_RoundGame::HasRoundEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.HasRoundEnded");

	AKSGameMode_RoundGame_HasRoundEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.HasPreparedNextRound
// ()

void AKSGameMode_RoundGame::HasPreparedNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.HasPreparedNextRound");

	AKSGameMode_RoundGame_HasPreparedNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.GetRoundState
// ()

void AKSGameMode_RoundGame::GetRoundState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.GetRoundState");

	AKSGameMode_RoundGame_GetRoundState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.GetRoundStartTime
// ()

void AKSGameMode_RoundGame::GetRoundStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.GetRoundStartTime");

	AKSGameMode_RoundGame_GetRoundStartTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.GetRoundNumber
// ()

void AKSGameMode_RoundGame::GetRoundNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.GetRoundNumber");

	AKSGameMode_RoundGame_GetRoundNumber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.EndRoundKillCam
// ()

void AKSGameMode_RoundGame::EndRoundKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.EndRoundKillCam");

	AKSGameMode_RoundGame_EndRoundKillCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.EndRound
// ()

void AKSGameMode_RoundGame::EndRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.EndRound");

	AKSGameMode_RoundGame_EndRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoundGame.CanPlayerKeepInventoryBetweenRounds
// ()

void AKSGameMode_RoundGame::CanPlayerKeepInventoryBetweenRounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoundGame.CanPlayerKeepInventoryBetweenRounds");

	AKSGameMode_RoundGame_CanPlayerKeepInventoryBetweenRounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Control.OnTeamScored
// ()

void AKSGameMode_Control::OnTeamScored()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Control.OnTeamScored");

	AKSGameMode_Control_OnTeamScored_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Control.GetUpdateRateForControlPoint
// ()

void AKSGameMode_Control::GetUpdateRateForControlPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Control.GetUpdateRateForControlPoint");

	AKSGameMode_Control_GetUpdateRateForControlPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Control.GetTimeUntilScoreForPoint
// ()

void AKSGameMode_Control::GetTimeUntilScoreForPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Control.GetTimeUntilScoreForPoint");

	AKSGameMode_Control_GetTimeUntilScoreForPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Control.GetScoreUpdatePeriodForPoint
// ()

void AKSGameMode_Control::GetScoreUpdatePeriodForPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Control.GetScoreUpdatePeriodForPoint");

	AKSGameMode_Control_GetScoreUpdatePeriodForPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Control.BreakTie
// ()

void AKSGameMode_Control::BreakTie()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Control.BreakTie");

	AKSGameMode_Control_BreakTie_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_NeutralBomb.ResetBombIfInSpawnedState
// ()

void AKSGameMode_NeutralBomb::ResetBombIfInSpawnedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_NeutralBomb.ResetBombIfInSpawnedState");

	AKSGameMode_NeutralBomb_ResetBombIfInSpawnedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_NeutralBomb.ResetBomb
// ()

void AKSGameMode_NeutralBomb::ResetBomb()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_NeutralBomb.ResetBomb");

	AKSGameMode_NeutralBomb_ResetBomb_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_ExtractionCoop.BroadcastAlarm
// ()

void AKSGameMode_ExtractionCoop::BroadcastAlarm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_ExtractionCoop.BroadcastAlarm");

	AKSGameMode_ExtractionCoop_BroadcastAlarm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoyaleBase.TickZoneDamage
// ()

void AKSGameMode_RoyaleBase::TickZoneDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoyaleBase.TickZoneDamage");

	AKSGameMode_RoyaleBase_TickZoneDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_RoyaleBase.GetMustContainActor
// ()

void AKSGameMode_RoyaleBase::GetMustContainActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_RoyaleBase.GetMustContainActor");

	AKSGameMode_RoyaleBase_GetMustContainActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Incursion.HackDefenseSuccessful
// ()

void AKSGameMode_Incursion::HackDefenseSuccessful()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Incursion.HackDefenseSuccessful");

	AKSGameMode_Incursion_HackDefenseSuccessful_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.SetDefendingTeam
// ()

void AKSGameMode_Modular::SetDefendingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.SetDefendingTeam");

	AKSGameMode_Modular_SetDefendingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.SetAttackingTeam
// ()

void AKSGameMode_Modular::SetAttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.SetAttackingTeam");

	AKSGameMode_Modular_SetAttackingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.PushNewRespawnConfigToTeams
// ()

void AKSGameMode_Modular::PushNewRespawnConfigToTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.PushNewRespawnConfigToTeams");

	AKSGameMode_Modular_PushNewRespawnConfigToTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.PushModeDefaultRespawnConfigToTeams
// ()

void AKSGameMode_Modular::PushModeDefaultRespawnConfigToTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.PushModeDefaultRespawnConfigToTeams");

	AKSGameMode_Modular_PushModeDefaultRespawnConfigToTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.OnRoundStart
// ()

void AKSGameMode_Modular::OnRoundStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.OnRoundStart");

	AKSGameMode_Modular_OnRoundStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.OnRoundPrepare
// ()

void AKSGameMode_Modular::OnRoundPrepare()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.OnRoundPrepare");

	AKSGameMode_Modular_OnRoundPrepare_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.FilterRandomTeamObjective
// ()

void AKSGameMode_Modular::FilterRandomTeamObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.FilterRandomTeamObjective");

	AKSGameMode_Modular_FilterRandomTeamObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.FilterRandomObjectiveForTeam
// ()

void AKSGameMode_Modular::FilterRandomObjectiveForTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.FilterRandomObjectiveForTeam");

	AKSGameMode_Modular_FilterRandomObjectiveForTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.FilterRandomObjectiveAgainstTeam
// ()

void AKSGameMode_Modular::FilterRandomObjectiveAgainstTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.FilterRandomObjectiveAgainstTeam");

	AKSGameMode_Modular_FilterRandomObjectiveAgainstTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.FilterNeutralObjectives
// ()

void AKSGameMode_Modular::FilterNeutralObjectives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.FilterNeutralObjectives");

	AKSGameMode_Modular_FilterNeutralObjectives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.EndRoundPrepare
// ()

void AKSGameMode_Modular::EndRoundPrepare()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.EndRoundPrepare");

	AKSGameMode_Modular_EndRoundPrepare_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.ChooseRandomObjective
// ()

void AKSGameMode_Modular::ChooseRandomObjective()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.ChooseRandomObjective");

	AKSGameMode_Modular_ChooseRandomObjective_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Modular.ChangePlayerTeam
// ()

void AKSGameMode_Modular::ChangePlayerTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Modular.ChangePlayerTeam");

	AKSGameMode_Modular_ChangePlayerTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Sabotage.OnHackComplete
// ()

void AKSGameMode_Sabotage::OnHackComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Sabotage.OnHackComplete");

	AKSGameMode_Sabotage_OnHackComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Sabotage.HasDefendingTeamWon
// ()

void AKSGameMode_Sabotage::HasDefendingTeamWon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Sabotage.HasDefendingTeamWon");

	AKSGameMode_Sabotage_HasDefendingTeamWon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_Sabotage.HasAttackingTeamWon
// ()

void AKSGameMode_Sabotage::HasAttackingTeamWon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_Sabotage.HasAttackingTeamWon");

	AKSGameMode_Sabotage_HasAttackingTeamWon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_StrikeOutControl.OnTeamRemainingRespawnsChanged
// ()

void AKSGameMode_StrikeOutControl::OnTeamRemainingRespawnsChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_StrikeOutControl.OnTeamRemainingRespawnsChanged");

	AKSGameMode_StrikeOutControl_OnTeamRemainingRespawnsChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameMode_StrikeOutControl.OnObjectiveUpdate
// ()

void AKSGameMode_StrikeOutControl::OnObjectiveUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameMode_StrikeOutControl.OnObjectiveUpdate");

	AKSGameMode_StrikeOutControl_OnObjectiveUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetOuterDeadZone
// ()

void UKSGamepadCurvedLookSpeedManager::SetOuterDeadZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetOuterDeadZone");

	UKSGamepadCurvedLookSpeedManager_SetOuterDeadZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostMultiplier
// ()

void UKSGamepadCurvedLookSpeedManager::SetBoostMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostMultiplier");

	UKSGamepadCurvedLookSpeedManager_SetBoostMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostAcceleration
// ()

void UKSGamepadCurvedLookSpeedManager::SetBoostAcceleration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBoostAcceleration");

	UKSGamepadCurvedLookSpeedManager_SetBoostAcceleration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBaseVelocityCurve
// ()

void UKSGamepadCurvedLookSpeedManager::SetBaseVelocityCurve()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.SetBaseVelocityCurve");

	UKSGamepadCurvedLookSpeedManager_SetBaseVelocityCurve_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamepadCurvedLookSpeedManager.PrintLookSpeedParameters
// ()

void UKSGamepadCurvedLookSpeedManager::PrintLookSpeedParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamepadCurvedLookSpeedManager.PrintLookSpeedParameters");

	UKSGamepadCurvedLookSpeedManager_PrintLookSpeedParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGamePhaseProxyBase.Activate
// ()

void UKSGamePhaseProxyBase::Activate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGamePhaseProxyBase.Activate");

	UKSGamePhaseProxyBase_Activate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.WasLastPhasePrepare
// ()

void AKSGameState::WasLastPhasePrepare()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.WasLastPhasePrepare");

	AKSGameState_WasLastPhasePrepare_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.TriggerPostSelectionPhaseBeginFadeOutDel
// ()

void AKSGameState::TriggerPostSelectionPhaseBeginFadeOutDel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.TriggerPostSelectionPhaseBeginFadeOutDel");

	AKSGameState_TriggerPostSelectionPhaseBeginFadeOutDel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.TriggerOnTeamCinematicSequenceBeginDel
// ()

void AKSGameState::TriggerOnTeamCinematicSequenceBeginDel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.TriggerOnTeamCinematicSequenceBeginDel");

	AKSGameState_TriggerOnTeamCinematicSequenceBeginDel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.TrackedPlayerStateDestroyed
// ()

void AKSGameState::TrackedPlayerStateDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.TrackedPlayerStateDestroyed");

	AKSGameState_TrackedPlayerStateDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.StopWaveRespawnTimer
// ()

void AKSGameState::StopWaveRespawnTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.StopWaveRespawnTimer");

	AKSGameState_StopWaveRespawnTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.StartWaveRespawnTimer
// ()

void AKSGameState::StartWaveRespawnTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.StartWaveRespawnTimer");

	AKSGameState_StartWaveRespawnTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.ShouldDestroyDeployableOnInstigatorDeath
// ()

void AKSGameState::ShouldDestroyDeployableOnInstigatorDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.ShouldDestroyDeployableOnInstigatorDeath");

	AKSGameState_ShouldDestroyDeployableOnInstigatorDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.SetSideForTeam
// ()

void AKSGameState::SetSideForTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.SetSideForTeam");

	AKSGameState_SetSideForTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.RemoveGameDisplayInfoForActor
// ()

void AKSGameState::RemoveGameDisplayInfoForActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.RemoveGameDisplayInfoForActor");

	AKSGameState_RemoveGameDisplayInfoForActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.RemoveGameDisplayInfoById
// ()

void AKSGameState::RemoveGameDisplayInfoById()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.RemoveGameDisplayInfoById");

	AKSGameState_RemoveGameDisplayInfoById_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.RemoveDeployable
// ()

void AKSGameState::RemoveDeployable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.RemoveDeployable");

	AKSGameState_RemoveDeployable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.ReceivedKillCamStatus
// ()

void AKSGameState::ReceivedKillCamStatus()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.ReceivedKillCamStatus");

	AKSGameState_ReceivedKillCamStatus_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_WaveRespawnTimer
// ()

void AKSGameState::OnRep_WaveRespawnTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_WaveRespawnTimer");

	AKSGameState_OnRep_WaveRespawnTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_MatchPhase
// ()

void AKSGameState::OnRep_MatchPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_MatchPhase");

	AKSGameState_OnRep_MatchPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_LootRarityTimerPairs
// ()

void AKSGameState::OnRep_LootRarityTimerPairs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_LootRarityTimerPairs");

	AKSGameState_OnRep_LootRarityTimerPairs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_InfiniteAmmo
// ()

void AKSGameState::OnRep_InfiniteAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_InfiniteAmmo");

	AKSGameState_OnRep_InfiniteAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.OnRep_DisplayCash
// ()

void AKSGameState::OnRep_DisplayCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.OnRep_DisplayCash");

	AKSGameState_OnRep_DisplayCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.NotifyDropshipDoorOpened
// ()

void AKSGameState::NotifyDropshipDoorOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.NotifyDropshipDoorOpened");

	AKSGameState_NotifyDropshipDoorOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.LootRespawnTimerTick
// ()

void AKSGameState::LootRespawnTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.LootRespawnTimerTick");

	AKSGameState_LootRespawnTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.LootRespawnTimerComplete
// ()

void AKSGameState::LootRespawnTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.LootRespawnTimerComplete");

	AKSGameState_LootRespawnTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.LootRespawnTimerActive
// ()

void AKSGameState::LootRespawnTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.LootRespawnTimerActive");

	AKSGameState_LootRespawnTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.IsRoyaleMode
// ()

void AKSGameState::IsRoyaleMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.IsRoyaleMode");

	AKSGameState_IsRoyaleMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.IsKillCamRecording
// ()

void AKSGameState::IsKillCamRecording()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.IsKillCamRecording");

	AKSGameState_IsKillCamRecording_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.IsInSetup
// ()

void AKSGameState::IsInSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.IsInSetup");

	AKSGameState_IsInSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.IsInSelection
// ()

void AKSGameState::IsInSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.IsInSelection");

	AKSGameState_IsInSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetWorldDeployables
// ()

void AKSGameState::GetWorldDeployables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetWorldDeployables");

	AKSGameState_GetWorldDeployables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetWinningTeamNum
// ()

void AKSGameState::GetWinningTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetWinningTeamNum");

	AKSGameState_GetWinningTeamNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetUIMatchTime
// ()

void AKSGameState::GetUIMatchTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetUIMatchTime");

	AKSGameState_GetUIMatchTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetTrackedWorldDrops
// ()

void AKSGameState::GetTrackedWorldDrops()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetTrackedWorldDrops");

	AKSGameState_GetTrackedWorldDrops_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetTrackedProjectiles
// ()

void AKSGameState::GetTrackedProjectiles()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetTrackedProjectiles");

	AKSGameState_GetTrackedProjectiles_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetTeams
// ()

void AKSGameState::GetTeams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetTeams");

	AKSGameState_GetTeams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetTeamConst
// ()

void AKSGameState::GetTeamConst()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetTeamConst");

	AKSGameState_GetTeamConst_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetSideForTeam
// ()

void AKSGameState::GetSideForTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetSideForTeam");

	AKSGameState_GetSideForTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetRegisteredHeatSources
// ()

void AKSGameState::GetRegisteredHeatSources()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetRegisteredHeatSources");

	AKSGameState_GetRegisteredHeatSources_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetPersistentPlayerDataById
// ()

void AKSGameState::GetPersistentPlayerDataById()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetPersistentPlayerDataById");

	AKSGameState_GetPersistentPlayerDataById_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetMiniMapAssistant
// ()

void AKSGameState::GetMiniMapAssistant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMiniMapAssistant");

	AKSGameState_GetMiniMapAssistant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetMatchTimerState
// ()

void AKSGameState::GetMatchTimerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMatchTimerState");

	AKSGameState_GetMatchTimerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetMatchTimer
// ()

void AKSGameState::GetMatchTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMatchTimer");

	AKSGameState_GetMatchTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetMatchPhase
// ()

void AKSGameState::GetMatchPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetMatchPhase");

	AKSGameState_GetMatchPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetKillCamSecondaryFocusPawn
// ()

void AKSGameState::GetKillCamSecondaryFocusPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamSecondaryFocusPawn");

	AKSGameState_GetKillCamSecondaryFocusPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetKillCamFocusSpecial
// ()

void AKSGameState::GetKillCamFocusSpecial()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamFocusSpecial");

	AKSGameState_GetKillCamFocusSpecial_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetKillCamFocusPawn
// ()

void AKSGameState::GetKillCamFocusPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamFocusPawn");

	AKSGameState_GetKillCamFocusPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetKillCamActor
// ()

void AKSGameState::GetKillCamActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetKillCamActor");

	AKSGameState_GetKillCamActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetFirstTeamForSide
// ()

void AKSGameState::GetFirstTeamForSide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetFirstTeamForSide");

	AKSGameState_GetFirstTeamForSide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetAttackingTeam
// ()

void AKSGameState::GetAttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetAttackingTeam");

	AKSGameState_GetAttackingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.GetAllPersistentPlayerData
// ()

void AKSGameState::GetAllPersistentPlayerData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.GetAllPersistentPlayerData");

	AKSGameState_GetAllPersistentPlayerData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.FlipTeamSides
// ()

void AKSGameState::FlipTeamSides()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.FlipTeamSides");

	AKSGameState_FlipTeamSides_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.EndGameInSurrender
// ()

void AKSGameState::EndGameInSurrender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.EndGameInSurrender");

	AKSGameState_EndGameInSurrender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.ClientsNotifyWinnerSet
// ()

void AKSGameState::ClientsNotifyWinnerSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.ClientsNotifyWinnerSet");

	AKSGameState_ClientsNotifyWinnerSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.ClientsNotifyLastManStanding
// ()

void AKSGameState::ClientsNotifyLastManStanding()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.ClientsNotifyLastManStanding");

	AKSGameState_ClientsNotifyLastManStanding_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.CharacterBodiesPersistAfterDeath
// ()

void AKSGameState::CharacterBodiesPersistAfterDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.CharacterBodiesPersistAfterDeath");

	AKSGameState_CharacterBodiesPersistAfterDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.CalculateCashForAssist
// ()

void AKSGameState::CalculateCashForAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.CalculateCashForAssist");

	AKSGameState_CalculateCashForAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.BroadcastTeamSidesFlipped
// ()

void AKSGameState::BroadcastTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BroadcastTeamSidesFlipped");

	AKSGameState_BroadcastTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.BroadcastKillCamParameters
// ()

void AKSGameState::BroadcastKillCamParameters()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BroadcastKillCamParameters");

	AKSGameState_BroadcastKillCamParameters_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.BlueprintIsMatchInProgress
// ()

void AKSGameState::BlueprintIsMatchInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BlueprintIsMatchInProgress");

	AKSGameState_BlueprintIsMatchInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.BlueprintHasMatchEnded
// ()

void AKSGameState::BlueprintHasMatchEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.BlueprintHasMatchEnded");

	AKSGameState_BlueprintHasMatchEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.AddGameDisplayInfo
// ()

void AKSGameState::AddGameDisplayInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.AddGameDisplayInfo");

	AKSGameState_AddGameDisplayInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState.AddDeployable
// ()

void AKSGameState::AddDeployable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState.AddDeployable");

	AKSGameState_AddDeployable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.TryToReplayLastKill
// ()

void AKSGameState_RoundGame::TryToReplayLastKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.TryToReplayLastKill");

	AKSGameState_RoundGame_TryToReplayLastKill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.RoundHasStarted
// ()

void AKSGameState_RoundGame::RoundHasStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.RoundHasStarted");

	AKSGameState_RoundGame_RoundHasStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.RoundHasEnded
// ()

void AKSGameState_RoundGame::RoundHasEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.RoundHasEnded");

	AKSGameState_RoundGame_RoundHasEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.PreparingForNextRound
// ()

void AKSGameState_RoundGame::PreparingForNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.PreparingForNextRound");

	AKSGameState_RoundGame_PreparingForNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_TotalRounds
// ()

void AKSGameState_RoundGame::OnRep_TotalRounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_TotalRounds");

	AKSGameState_RoundGame_OnRep_TotalRounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_RoundsToWin
// ()

void AKSGameState_RoundGame::OnRep_RoundsToWin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_RoundsToWin");

	AKSGameState_RoundGame_OnRep_RoundsToWin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_RoundResult
// ()

void AKSGameState_RoundGame::OnRep_RoundResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_RoundResult");

	AKSGameState_RoundGame_OnRep_RoundResult_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_RoundInitState
// ()

void AKSGameState_RoundGame::OnRep_RoundInitState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_RoundInitState");

	AKSGameState_RoundGame_OnRep_RoundInitState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnRep_RoundInfo
// ()

void AKSGameState_RoundGame::OnRep_RoundInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnRep_RoundInfo");

	AKSGameState_RoundGame_OnRep_RoundInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.OnMatchTimerUpdate
// ()

void AKSGameState_RoundGame::OnMatchTimerUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.OnMatchTimerUpdate");

	AKSGameState_RoundGame_OnMatchTimerUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.IsTieBreakerRound
// ()

void AKSGameState_RoundGame::IsTieBreakerRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.IsTieBreakerRound");

	AKSGameState_RoundGame_IsTieBreakerRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.IsTeamAtMatchPoint
// ()

void AKSGameState_RoundGame::IsTeamAtMatchPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.IsTeamAtMatchPoint");

	AKSGameState_RoundGame_IsTeamAtMatchPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.IsRoundInProgress
// ()

void AKSGameState_RoundGame::IsRoundInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.IsRoundInProgress");

	AKSGameState_RoundGame_IsRoundInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundStart
// ()

void AKSGameState_RoundGame::HasTriggeredRoundStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundStart");

	AKSGameState_RoundGame_HasTriggeredRoundStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundSetup
// ()

void AKSGameState_RoundGame::HasTriggeredRoundSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundSetup");

	AKSGameState_RoundGame_HasTriggeredRoundSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundOver
// ()

void AKSGameState_RoundGame::HasTriggeredRoundOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.HasTriggeredRoundOver");

	AKSGameState_RoundGame_HasTriggeredRoundOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetTotalRounds
// ()

void AKSGameState_RoundGame::GetTotalRounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetTotalRounds");

	AKSGameState_RoundGame_GetTotalRounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundWinner
// ()

void AKSGameState_RoundGame::GetRoundWinner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundWinner");

	AKSGameState_RoundGame_GetRoundWinner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundTimerState
// ()

void AKSGameState_RoundGame::GetRoundTimerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundTimerState");

	AKSGameState_RoundGame_GetRoundTimerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundTimer
// ()

void AKSGameState_RoundGame::GetRoundTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundTimer");

	AKSGameState_RoundGame_GetRoundTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundsToWin
// ()

void AKSGameState_RoundGame::GetRoundsToWin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundsToWin");

	AKSGameState_RoundGame_GetRoundsToWin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundState
// ()

void AKSGameState_RoundGame::GetRoundState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundState");

	AKSGameState_RoundGame_GetRoundState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundStartTime
// ()

void AKSGameState_RoundGame::GetRoundStartTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundStartTime");

	AKSGameState_RoundGame_GetRoundStartTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetRoundNumber
// ()

void AKSGameState_RoundGame::GetRoundNumber()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetRoundNumber");

	AKSGameState_RoundGame_GetRoundNumber_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoundGame.GetAllRoundResults
// ()

void AKSGameState_RoundGame::GetAllRoundResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoundGame.GetAllRoundResults");

	AKSGameState_RoundGame_GetAllRoundResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Control.GetAllControlPoints
// ()

void AKSGameState_Control::GetAllControlPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Control.GetAllControlPoints");

	AKSGameState_Control_GetAllControlPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Control.GetActiveControlPoints
// ()

void AKSGameState_Control::GetActiveControlPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Control.GetActiveControlPoints");

	AKSGameState_Control_GetActiveControlPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Control.BroadcastTeamScored
// ()

void AKSGameState_Control::BroadcastTeamScored()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Control.BroadcastTeamScored");

	AKSGameState_Control_BroadcastTeamScored_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Control.BroadcastControlCaptured
// ()

void AKSGameState_Control::BroadcastControlCaptured()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Control.BroadcastControlCaptured");

	AKSGameState_Control_BroadcastControlCaptured_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.OnRep_BombStateTimer
// ()

void AKSGameState_NeutralBomb::OnRep_BombStateTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.OnRep_BombStateTimer");

	AKSGameState_NeutralBomb_OnRep_BombStateTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.OnRep_BombState
// ()

void AKSGameState_NeutralBomb::OnRep_BombState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.OnRep_BombState");

	AKSGameState_NeutralBomb_OnRep_BombState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.GetBombState
// ()

void AKSGameState_NeutralBomb::GetBombState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.GetBombState");

	AKSGameState_NeutralBomb_GetBombState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.BombStateTimerTick
// ()

void AKSGameState_NeutralBomb::BombStateTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.BombStateTimerTick");

	AKSGameState_NeutralBomb_BombStateTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.BombStateTimerComplete
// ()

void AKSGameState_NeutralBomb::BombStateTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.BombStateTimerComplete");

	AKSGameState_NeutralBomb_BombStateTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_NeutralBomb.BombStateTimerActive
// ()

void AKSGameState_NeutralBomb::BombStateTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_NeutralBomb.BombStateTimerActive");

	AKSGameState_NeutralBomb_BombStateTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Demolition.OnRep_AttackingTeam
// ()

void AKSGameState_Demolition::OnRep_AttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Demolition.OnRep_AttackingTeam");

	AKSGameState_Demolition_OnRep_AttackingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.OnRep_HackingObjectiveState
// ()

void AKSGameState_Extraction::OnRep_HackingObjectiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.OnRep_HackingObjectiveState");

	AKSGameState_Extraction_OnRep_HackingObjectiveState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.OnRep_AttackingTeam
// ()

void AKSGameState_Extraction::OnRep_AttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.OnRep_AttackingTeam");

	AKSGameState_Extraction_OnRep_AttackingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.IsAComputerHacked
// ()

void AKSGameState_Extraction::IsAComputerHacked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.IsAComputerHacked");

	AKSGameState_Extraction_IsAComputerHacked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.GetComputers
// ()

void AKSGameState_Extraction::GetComputers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.GetComputers");

	AKSGameState_Extraction_GetComputers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.CreditHacker
// ()

void AKSGameState_Extraction::CreditHacker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.CreditHacker");

	AKSGameState_Extraction_CreditHacker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.CreditDehacker
// ()

void AKSGameState_Extraction::CreditDehacker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.CreditDehacker");

	AKSGameState_Extraction_CreditDehacker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Extraction.ComputersUnlocked
// ()

void AKSGameState_Extraction::ComputersUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Extraction.ComputersUnlocked");

	AKSGameState_Extraction_ComputersUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.OnRep_AlarmState
// ()

void AKSGameState_ExtractionCoop::OnRep_AlarmState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.OnRep_AlarmState");

	AKSGameState_ExtractionCoop_OnRep_AlarmState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.BroadcastPhaseTimeout
// ()

void AKSGameState_ExtractionCoop::BroadcastPhaseTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.BroadcastPhaseTimeout");

	AKSGameState_ExtractionCoop_BroadcastPhaseTimeout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.BroadcastExtractionPickupChanged
// ()

void AKSGameState_ExtractionCoop::BroadcastExtractionPickupChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.BroadcastExtractionPickupChanged");

	AKSGameState_ExtractionCoop_BroadcastExtractionPickupChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionCoop.BroadcastEscapePointChanged
// ()

void AKSGameState_ExtractionCoop::BroadcastEscapePointChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionCoop.BroadcastEscapePointChanged");

	AKSGameState_ExtractionCoop_BroadcastEscapePointChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoyaleBase.ZoneWaitStart
// ()

void AKSGameState_RoyaleBase::ZoneWaitStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoyaleBase.ZoneWaitStart");

	AKSGameState_RoyaleBase_ZoneWaitStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_RoyaleBase.ZoneShrinkStart
// ()

void AKSGameState_RoyaleBase::ZoneShrinkStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_RoyaleBase.ZoneShrinkStart");

	AKSGameState_RoyaleBase_ZoneShrinkStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.OnRep_HackingObjectiveState
// ()

void AKSGameState_ExtractionRoyale::OnRep_HackingObjectiveState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.OnRep_HackingObjectiveState");

	AKSGameState_ExtractionRoyale_OnRep_HackingObjectiveState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.OnRep_AttackingTeam
// ()

void AKSGameState_ExtractionRoyale::OnRep_AttackingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.OnRep_AttackingTeam");

	AKSGameState_ExtractionRoyale_OnRep_AttackingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.IsAComputerHacked
// ()

void AKSGameState_ExtractionRoyale::IsAComputerHacked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.IsAComputerHacked");

	AKSGameState_ExtractionRoyale_IsAComputerHacked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.GetComputers
// ()

void AKSGameState_ExtractionRoyale::GetComputers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.GetComputers");

	AKSGameState_ExtractionRoyale_GetComputers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.CreditHacker
// ()

void AKSGameState_ExtractionRoyale::CreditHacker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.CreditHacker");

	AKSGameState_ExtractionRoyale_CreditHacker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.CreditDehacker
// ()

void AKSGameState_ExtractionRoyale::CreditDehacker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.CreditDehacker");

	AKSGameState_ExtractionRoyale_CreditDehacker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_ExtractionRoyale.ComputersUnlocked
// ()

void AKSGameState_ExtractionRoyale::ComputersUnlocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_ExtractionRoyale.ComputersUnlocked");

	AKSGameState_ExtractionRoyale_ComputersUnlocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Heist.OnRep_TeamCash
// ()

void AKSGameState_Heist::OnRep_TeamCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.OnRep_TeamCash");

	AKSGameState_Heist_OnRep_TeamCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Heist.OnRep_Refreshes
// ()

void AKSGameState_Heist::OnRep_Refreshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.OnRep_Refreshes");

	AKSGameState_Heist_OnRep_Refreshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Heist.GetTeamCash
// ()

void AKSGameState_Heist::GetTeamCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.GetTeamCash");

	AKSGameState_Heist_GetTeamCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameState_Heist.GetRefreshes
// ()

void AKSGameState_Heist::GetRefreshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameState_Heist.GetRefreshes");

	AKSGameState_Heist_GetRefreshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameUserSettings.SaveLocalAction
// ()

void UKSGameUserSettings::SaveLocalAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameUserSettings.SaveLocalAction");

	UKSGameUserSettings_SaveLocalAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameUserSettings.GetTextChatEnabled
// ()

void UKSGameUserSettings::GetTextChatEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameUserSettings.GetTextChatEnabled");

	UKSGameUserSettings_GetTextChatEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGameUserSettings.GetSafeFrameScale
// ()

void UKSGameUserSettings::GetSafeFrameScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGameUserSettings.GetSafeFrameScale");

	UKSGameUserSettings_GetSafeFrameScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGlobalShotListener.ShotNotify
// ()

void AKSGlobalShotListener::ShotNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGlobalShotListener.ShotNotify");

	AKSGlobalShotListener_ShotNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGrenadeTargetingModule.ShouldShowPathGivenState
// ()

void UKSGrenadeTargetingModule::ShouldShowPathGivenState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.ShouldShowPathGivenState");

	UKSGrenadeTargetingModule_ShouldShowPathGivenState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_WithProjectile
// ()

void UKSGrenadeTargetingModule::GetWeaponAsset_WithProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_WithProjectile");

	UKSGrenadeTargetingModule_GetWeaponAsset_WithProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_Grenade
// ()

void UKSGrenadeTargetingModule::GetWeaponAsset_Grenade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.GetWeaponAsset_Grenade");

	UKSGrenadeTargetingModule_GetWeaponAsset_Grenade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGrenadeTargetingModule.GetTraceStartLocation
// ()

void UKSGrenadeTargetingModule::GetTraceStartLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeTargetingModule.GetTraceStartLocation");

	UKSGrenadeTargetingModule_GetTraceStartLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGroupedActivityEventTracker.OnChildActivityFinished
// ()

void UKSGroupedActivityEventTracker::OnChildActivityFinished()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGroupedActivityEventTracker.OnChildActivityFinished");

	UKSGroupedActivityEventTracker_OnChildActivityFinished_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeadShotTracker.HandleTrackerAccolade
// ()

void UKSHeadShotTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeadShotTracker.HandleTrackerAccolade");

	UKSHeadShotTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerHealthMeterBase.SetHealthMeterState
// ()

void UKSPlayerHealthMeterBase::SetHealthMeterState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerHealthMeterBase.SetHealthMeterState");

	UKSPlayerHealthMeterBase_SetHealthMeterState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerHealthMeterBase.GetMeterLargestValue
// ()

void UKSPlayerHealthMeterBase::GetMeterLargestValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerHealthMeterBase.GetMeterLargestValue");

	UKSPlayerHealthMeterBase_GetMeterLargestValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.UnregisterWithoutHeatVisibilityBlocker
// ()

void UKSHeatSourceComponent::UnregisterWithoutHeatVisibilityBlocker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.UnregisterWithoutHeatVisibilityBlocker");

	UKSHeatSourceComponent_UnregisterWithoutHeatVisibilityBlocker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.UnregisterHeatOnlyVisibilityBlocker
// ()

void UKSHeatSourceComponent::UnregisterHeatOnlyVisibilityBlocker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.UnregisterHeatOnlyVisibilityBlocker");

	UKSHeatSourceComponent_UnregisterHeatOnlyVisibilityBlocker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.TransitionToTemperature
// ()

void UKSHeatSourceComponent::TransitionToTemperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.TransitionToTemperature");

	UKSHeatSourceComponent_TransitionToTemperature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.SetTemperatureScalarModifier
// ()

void UKSHeatSourceComponent::SetTemperatureScalarModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.SetTemperatureScalarModifier");

	UKSHeatSourceComponent_SetTemperatureScalarModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.SetTemperature
// ()

void UKSHeatSourceComponent::SetTemperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.SetTemperature");

	UKSHeatSourceComponent_SetTemperature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.RegisterWithoutHeatVisibilityBlocker
// ()

void UKSHeatSourceComponent::RegisterWithoutHeatVisibilityBlocker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.RegisterWithoutHeatVisibilityBlocker");

	UKSHeatSourceComponent_RegisterWithoutHeatVisibilityBlocker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.RegisterHeatOnlyVisibilityBlocker
// ()

void UKSHeatSourceComponent::RegisterHeatOnlyVisibilityBlocker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.RegisterHeatOnlyVisibilityBlocker");

	UKSHeatSourceComponent_RegisterHeatOnlyVisibilityBlocker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.OnThermalVisionStateChanged
// ()

void UKSHeatSourceComponent::OnThermalVisionStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.OnThermalVisionStateChanged");

	UKSHeatSourceComponent_OnThermalVisionStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.OnOwnerInfoUpdateNotify
// ()

void UKSHeatSourceComponent::OnOwnerInfoUpdateNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.OnOwnerInfoUpdateNotify");

	UKSHeatSourceComponent_OnOwnerInfoUpdateNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.NotifyThermalVisionStateChanged
// ()

void UKSHeatSourceComponent::NotifyThermalVisionStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.NotifyThermalVisionStateChanged");

	UKSHeatSourceComponent_NotifyThermalVisionStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.GetUnmodifiedTemperature
// ()

void UKSHeatSourceComponent::GetUnmodifiedTemperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.GetUnmodifiedTemperature");

	UKSHeatSourceComponent_GetUnmodifiedTemperature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHeatSourceComponent.GetTemperature
// ()

void UKSHeatSourceComponent::GetTemperature()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHeatSourceComponent.GetTemperature");

	UKSHeatSourceComponent_GetTemperature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDAnnouncementComponent.GetPlayerController
// ()

void UKSHUDAnnouncementComponent::GetPlayerController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDAnnouncementComponent.GetPlayerController");

	UKSHUDAnnouncementComponent_GetPlayerController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.SetSafeFrameScale
// ()

void UKSHUDInterface::SetSafeFrameScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.SetSafeFrameScale");

	UKSHUDInterface_SetSafeFrameScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.SetHUDVisible
// ()

void UKSHUDInterface::SetHUDVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.SetHUDVisible");

	UKSHUDInterface_SetHUDVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.RemoveDataTables
// ()

void UKSHUDInterface::RemoveDataTables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.RemoveDataTables");

	UKSHUDInterface_RemoveDataTables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.RemoveDataTable
// ()

void UKSHUDInterface::RemoveDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.RemoveDataTable");

	UKSHUDInterface_RemoveDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.OnToggleHUD
// ()

void UKSHUDInterface::OnToggleHUD()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.OnToggleHUD");

	UKSHUDInterface_OnToggleHUD_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.OnLoadRoute
// ()

void UKSHUDInterface::OnLoadRoute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.OnLoadRoute");

	UKSHUDInterface_OnLoadRoute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.HandleOpenTextChat
// ()

void UKSHUDInterface::HandleOpenTextChat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.HandleOpenTextChat");

	UKSHUDInterface_HandleOpenTextChat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.GetSkinObject
// ()

void UKSHUDInterface::GetSkinObject()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.GetSkinObject");

	UKSHUDInterface_GetSkinObject_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.CreateGameRuleWidget
// ()

void UKSHUDInterface::CreateGameRuleWidget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.CreateGameRuleWidget");

	UKSHUDInterface_CreateGameRuleWidget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.BroadcastWidgetMessage
// ()

void UKSHUDInterface::BroadcastWidgetMessage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.BroadcastWidgetMessage");

	UKSHUDInterface_BroadcastWidgetMessage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.BindEventToWidgetMessages
// ()

void UKSHUDInterface::BindEventToWidgetMessages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.BindEventToWidgetMessages");

	UKSHUDInterface_BindEventToWidgetMessages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.BindEventToDataTableKeywordUpdate
// ()

void UKSHUDInterface::BindEventToDataTableKeywordUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.BindEventToDataTableKeywordUpdate");

	UKSHUDInterface_BindEventToDataTableKeywordUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.AddDataTables
// ()

void UKSHUDInterface::AddDataTables()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.AddDataTables");

	UKSHUDInterface_AddDataTables_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSHUDInterface.AddDataTable
// ()

void UKSHUDInterface::AddDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSHUDInterface.AddDataTable");

	UKSHUDInterface_AddDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.ServerRequestPurchase
// ()

void UKSInMatchStore::ServerRequestPurchase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.ServerRequestPurchase");

	UKSInMatchStore_ServerRequestPurchase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.RequestPurchase
// ()

void UKSInMatchStore::RequestPurchase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.RequestPurchase");

	UKSInMatchStore_RequestPurchase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.GetStorePages
// ()

void UKSInMatchStore::GetStorePages()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.GetStorePages");

	UKSInMatchStore_GetStorePages_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.GetStoreInventory
// ()

void UKSInMatchStore::GetStoreInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.GetStoreInventory");

	UKSInMatchStore_GetStoreInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.GetStockInCategory
// ()

void UKSInMatchStore::GetStockInCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.GetStockInCategory");

	UKSInMatchStore_GetStockInCategory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.ClientPurchaseSuccess
// ()

void UKSInMatchStore::ClientPurchaseSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.ClientPurchaseSuccess");

	UKSInMatchStore_ClientPurchaseSuccess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInMatchStore.ClientPurchaseError
// ()

void UKSInMatchStore::ClientPurchaseError()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInMatchStore.ClientPurchaseError");

	UKSInMatchStore_ClientPurchaseError_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInputFunctionLibrary.GetGamepadIconSet
// ()

void UKSInputFunctionLibrary::GetGamepadIconSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInputFunctionLibrary.GetGamepadIconSet");

	UKSInputFunctionLibrary_GetGamepadIconSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInspectableMusicManagerActor.StartMusic
// ()

void AKSInspectableMusicManagerActor::StartMusic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInspectableMusicManagerActor.StartMusic");

	AKSInspectableMusicManagerActor_StartMusic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInspectableMusicManagerActor.HandleQueryResults
// ()

void AKSInspectableMusicManagerActor::HandleQueryResults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInspectableMusicManagerActor.HandleQueryResults");

	AKSInspectableMusicManagerActor_HandleQueryResults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInspectableMusicManagerActor.GetSwitchQueryResultValue
// ()

void AKSInspectableMusicManagerActor::GetSwitchQueryResultValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInspectableMusicManagerActor.GetSwitchQueryResultValue");

	AKSInspectableMusicManagerActor_GetSwitchQueryResultValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInspectableMusicManagerActor.GetRtpcQueryResultValue
// ()

void AKSInspectableMusicManagerActor::GetRtpcQueryResultValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInspectableMusicManagerActor.GetRtpcQueryResultValue");

	AKSInspectableMusicManagerActor_GetRtpcQueryResultValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.UsePickupRangeForInteraction
// ()

void UKSInteractable::UsePickupRangeForInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.UsePickupRangeForInteraction");

	UKSInteractable_UsePickupRangeForInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.ShouldDisplayPrompt
// ()

void UKSInteractable::ShouldDisplayPrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.ShouldDisplayPrompt");

	UKSInteractable_ShouldDisplayPrompt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.ShouldDisplayProgress
// ()

void UKSInteractable::ShouldDisplayProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.ShouldDisplayProgress");

	UKSInteractable_ShouldDisplayProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.RemoveInteractionBlocker
// ()

void UKSInteractable::RemoveInteractionBlocker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.RemoveInteractionBlocker");

	UKSInteractable_RemoveInteractionBlocker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.MustCrouchWhileInteracting
// ()

void UKSInteractable::MustCrouchWhileInteracting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.MustCrouchWhileInteracting");

	UKSInteractable_MustCrouchWhileInteracting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.IsInteracting
// ()

void UKSInteractable::IsInteracting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.IsInteracting");

	UKSInteractable_IsInteracting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.IsHiddenInteraction
// ()

void UKSInteractable::IsHiddenInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.IsHiddenInteraction");

	UKSInteractable_IsHiddenInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.IsAutomaticInteraction
// ()

void UKSInteractable::IsAutomaticInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.IsAutomaticInteraction");

	UKSInteractable_IsAutomaticInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetRelativeHeight
// ()

void UKSInteractable::GetRelativeHeight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetRelativeHeight");

	UKSInteractable_GetRelativeHeight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetInteractionType
// ()

void UKSInteractable::GetInteractionType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionType");

	UKSInteractable_GetInteractionType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetInteractionPromptText
// ()

void UKSInteractable::GetInteractionPromptText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionPromptText");

	UKSInteractable_GetInteractionPromptText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetInteractionProgressText
// ()

void UKSInteractable::GetInteractionProgressText()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionProgressText");

	UKSInteractable_GetInteractionProgressText_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetInteractionPriority
// ()

void UKSInteractable::GetInteractionPriority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionPriority");

	UKSInteractable_GetInteractionPriority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetInteractionMode
// ()

void UKSInteractable::GetInteractionMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractionMode");

	UKSInteractable_GetInteractionMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetInteractableGroup
// ()

void UKSInteractable::GetInteractableGroup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetInteractableGroup");

	UKSInteractable_GetInteractableGroup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetCurrentInteractors
// ()

void UKSInteractable::GetCurrentInteractors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetCurrentInteractors");

	UKSInteractable_GetCurrentInteractors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetCurrentInteractNum
// ()

void UKSInteractable::GetCurrentInteractNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetCurrentInteractNum");

	UKSInteractable_GetCurrentInteractNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetCameraTransition
// ()

void UKSInteractable::GetCameraTransition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetCameraTransition");

	UKSInteractable_GetCameraTransition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.GetBestInteractionPoint
// ()

void UKSInteractable::GetBestInteractionPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.GetBestInteractionPoint");

	UKSInteractable_GetBestInteractionPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.FacesInteractable
// ()

void UKSInteractable::FacesInteractable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.FacesInteractable");

	UKSInteractable_FacesInteractable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.ConstructPrompt
// ()

void UKSInteractable::ConstructPrompt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.ConstructPrompt");

	UKSInteractable_ConstructPrompt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.CanInteractWhileVaulting
// ()

void UKSInteractable::CanInteractWhileVaulting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractWhileVaulting");

	UKSInteractable_CanInteractWhileVaulting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.CanInteractWhileSkydiving
// ()

void UKSInteractable::CanInteractWhileSkydiving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractWhileSkydiving");

	UKSInteractable_CanInteractWhileSkydiving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.CanInteractWhileMoving
// ()

void UKSInteractable::CanInteractWhileMoving()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractWhileMoving");

	UKSInteractable_CanInteractWhileMoving_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.CanInteractWhileDown
// ()

void UKSInteractable::CanInteractWhileDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractWhileDown");

	UKSInteractable_CanInteractWhileDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.CanInteractFromBehind
// ()

void UKSInteractable::CanInteractFromBehind()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteractFromBehind");

	UKSInteractable_CanInteractFromBehind_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.CanInteract
// ()

void UKSInteractable::CanInteract()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.CanInteract");

	UKSInteractable_CanInteract_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.AllowsMultipleInteraction
// ()

void UKSInteractable::AllowsMultipleInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.AllowsMultipleInteraction");

	UKSInteractable_AllowsMultipleInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractable.AddInteractionBlocker
// ()

void UKSInteractable::AddInteractionBlocker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractable.AddInteractionBlocker");

	UKSInteractable_AddInteractionBlocker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.WeightedSiteShuffle
// ()

void AKSLootSiteBase::WeightedSiteShuffle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.WeightedSiteShuffle");

	AKSLootSiteBase_WeightedSiteShuffle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnSpecificLoot
// ()

void AKSLootSiteBase::SpawnSpecificLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnSpecificLoot");

	AKSLootSiteBase_SpawnSpecificLoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnSpecificItemDrop
// ()

void AKSLootSiteBase::SpawnSpecificItemDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnSpecificItemDrop");

	AKSLootSiteBase_SpawnSpecificItemDrop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnItemDropInternal
// ()

void AKSLootSiteBase::SpawnItemDropInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnItemDropInternal");

	AKSLootSiteBase_SpawnItemDropInternal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnItemDrop
// ()

void AKSLootSiteBase::SpawnItemDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnItemDrop");

	AKSLootSiteBase_SpawnItemDrop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SpawnedDropDestroyed
// ()

void AKSLootSiteBase::SpawnedDropDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SpawnedDropDestroyed");

	AKSLootSiteBase_SpawnedDropDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.SetSiteActive
// ()

void AKSLootSiteBase::SetSiteActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.SetSiteActive");

	AKSLootSiteBase_SetSiteActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.Reset
// ()

void AKSLootSiteBase::Reset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.Reset");

	AKSLootSiteBase_Reset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnRep_RarityTag
// ()

void AKSLootSiteBase::OnRep_RarityTag()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnRep_RarityTag");

	AKSLootSiteBase_OnRep_RarityTag_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnRep_LootSiteState
// ()

void AKSLootSiteBase::OnRep_LootSiteState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnRep_LootSiteState");

	AKSLootSiteBase_OnRep_LootSiteState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnRep_CosmeticVisible
// ()

void AKSLootSiteBase::OnRep_CosmeticVisible()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnRep_CosmeticVisible");

	AKSLootSiteBase_OnRep_CosmeticVisible_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.OnCosmeticVisibilityChanged
// ()

void AKSLootSiteBase::OnCosmeticVisibilityChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.OnCosmeticVisibilityChanged");

	AKSLootSiteBase_OnCosmeticVisibilityChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.IsLooted
// ()

void AKSLootSiteBase::IsLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.IsLooted");

	AKSLootSiteBase_IsLooted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.IsActive
// ()

void AKSLootSiteBase::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.IsActive");

	AKSLootSiteBase_IsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.GetLootSiteState
// ()

void AKSLootSiteBase::GetLootSiteState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.GetLootSiteState");

	AKSLootSiteBase_GetLootSiteState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.FindBestDropLocation
// ()

void AKSLootSiteBase::FindBestDropLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.FindBestDropLocation");

	AKSLootSiteBase_FindBestDropLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.ChoostLoot
// ()

void AKSLootSiteBase::ChoostLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.ChoostLoot");

	AKSLootSiteBase_ChoostLoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.ChooseRandomLoot
// ()

void AKSLootSiteBase::ChooseRandomLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.ChooseRandomLoot");

	AKSLootSiteBase_ChooseRandomLoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLootSiteBase.ChooseItemAsset
// ()

void AKSLootSiteBase::ChooseItemAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLootSiteBase.ChooseItemAsset");

	AKSLootSiteBase_ChooseItemAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.PickLoot
// ()

void AKSInteractableLootSite::PickLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.PickLoot");

	AKSInteractableLootSite_PickLoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.OnSuccessfulInteraction
// ()

void AKSInteractableLootSite::OnSuccessfulInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.OnSuccessfulInteraction");

	AKSInteractableLootSite_OnSuccessfulInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.OnRep_ChosenLoot
// ()

void AKSInteractableLootSite::OnRep_ChosenLoot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.OnRep_ChosenLoot");

	AKSInteractableLootSite_OnRep_ChosenLoot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.OnRep_bLooted
// ()

void AKSInteractableLootSite::OnRep_bLooted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.OnRep_bLooted");

	AKSInteractableLootSite_OnRep_bLooted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.GetInteractionTime
// ()

void AKSInteractableLootSite::GetInteractionTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.GetInteractionTime");

	AKSInteractableLootSite_GetInteractionTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractableLootSite.ClientBroadcastSpawned
// ()

void AKSInteractableLootSite::ClientBroadcastSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractableLootSite.ClientBroadcastSpawned");

	AKSInteractableLootSite_ClientBroadcastSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerTap
// ()

void UKSInteractionManager::ServerTap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerTap");

	UKSInteractionManager_ServerTap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerStartNew
// ()

void UKSInteractionManager::ServerStartNew()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerStartNew");

	UKSInteractionManager_ServerStartNew_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerHoldRelease
// ()

void UKSInteractionManager::ServerHoldRelease()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerHoldRelease");

	UKSInteractionManager_ServerHoldRelease_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerHold
// ()

void UKSInteractionManager::ServerHold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerHold");

	UKSInteractionManager_ServerHold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ServerCancel
// ()

void UKSInteractionManager::ServerCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ServerCancel");

	UKSInteractionManager_ServerCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ClientInteractionStopped
// ()

void UKSInteractionManager::ClientInteractionStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ClientInteractionStopped");

	UKSInteractionManager_ClientInteractionStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionManager.ClientInteractionStarted
// ()

void UKSInteractionManager::ClientInteractionStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionManager.ClientInteractionStarted");

	UKSInteractionManager_ClientInteractionStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionType.PlayInteractionAnimation
// ()

void UKSInteractionType::PlayInteractionAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.PlayInteractionAnimation");

	UKSInteractionType_PlayInteractionAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionType.MakeInteractableEffect
// ()

void UKSInteractionType::MakeInteractableEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.MakeInteractableEffect");

	UKSInteractionType_MakeInteractableEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionType.MakeCharacterEffect
// ()

void UKSInteractionType::MakeCharacterEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.MakeCharacterEffect");

	UKSInteractionType_MakeCharacterEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionType.GetInteractableEffect
// ()

void UKSInteractionType::GetInteractableEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.GetInteractableEffect");

	UKSInteractionType_GetInteractableEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSInteractionType.GetCharacterEffect
// ()

void UKSInteractionType::GetCharacterEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSInteractionType.GetCharacterEffect");

	UKSInteractionType_GetCharacterEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItem_Gender.GetGender
// ()

void UKSItem_Gender::GetGender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItem_Gender.GetGender");

	UKSItem_Gender_GetGender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSItemBundle.GetSortedBundledItems
// ()

void UKSItemBundle::GetSortedBundledItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSItemBundle.GetSortedBundledItems");

	UKSItemBundle_GetSortedBundledItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.ShowLabel
// ()

void UItemDropWidgetInterface::ShowLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.ShowLabel");

	UItemDropWidgetInterface_ShowLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.SetOwningWidgetComponent
// ()

void UItemDropWidgetInterface::SetOwningWidgetComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.SetOwningWidgetComponent");

	UItemDropWidgetInterface_SetOwningWidgetComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.SetLabel
// ()

void UItemDropWidgetInterface::SetLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.SetLabel");

	UItemDropWidgetInterface_SetLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ItemDropWidgetInterface.HideLabel
// ()

void UItemDropWidgetInterface::HideLabel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ItemDropWidgetInterface.HideLabel");

	UItemDropWidgetInterface_HideLabel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.IsValidJobItem
// ()

void UKSJobItem::IsValidJobItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.IsValidJobItem");

	UKSJobItem_IsValidJobItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetSoftSmallJobIcon
// ()

void UKSJobItem::GetSoftSmallJobIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetSoftSmallJobIcon");

	UKSJobItem_GetSoftSmallJobIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetSoftJobSquarePortrait
// ()

void UKSJobItem::GetSoftJobSquarePortrait()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetSoftJobSquarePortrait");

	UKSJobItem_GetSoftJobSquarePortrait_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetSoftJobPortrait
// ()

void UKSJobItem::GetSoftJobPortrait()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetSoftJobPortrait");

	UKSJobItem_GetSoftJobPortrait_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetSoftJobDiamondPortrait
// ()

void UKSJobItem::GetSoftJobDiamondPortrait()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetSoftJobDiamondPortrait");

	UKSJobItem_GetSoftJobDiamondPortrait_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetSmallJobIcon
// ()

void UKSJobItem::GetSmallJobIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetSmallJobIcon");

	UKSJobItem_GetSmallJobIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetQuickMeleeWeapon
// ()

void UKSJobItem::GetQuickMeleeWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetQuickMeleeWeapon");

	UKSJobItem_GetQuickMeleeWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetPerks
// ()

void UKSJobItem::GetPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetPerks");

	UKSJobItem_GetPerks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetMeleeWeapon
// ()

void UKSJobItem::GetMeleeWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetMeleeWeapon");

	UKSJobItem_GetMeleeWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetJobRole
// ()

void UKSJobItem::GetJobRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetJobRole");

	UKSJobItem_GetJobRole_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetJobMasteryActivityInstance
// ()

void UKSJobItem::GetJobMasteryActivityInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetJobMasteryActivityInstance");

	UKSJobItem_GetJobMasteryActivityInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetFirstPassive
// ()

void UKSJobItem::GetFirstPassive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetFirstPassive");

	UKSJobItem_GetFirstPassive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultSprays
// ()

void UKSJobItem::GetDefaultSprays()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultSprays");

	UKSJobItem_GetDefaultSprays_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultSkin
// ()

void UKSJobItem::GetDefaultSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultSkin");

	UKSJobItem_GetDefaultSkin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultSecondaryWeapon
// ()

void UKSJobItem::GetDefaultSecondaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultSecondaryWeapon");

	UKSJobItem_GetDefaultSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultRadialMenuItems
// ()

void UKSJobItem::GetDefaultRadialMenuItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultRadialMenuItems");

	UKSJobItem_GetDefaultRadialMenuItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultQuips
// ()

void UKSJobItem::GetDefaultQuips()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultQuips");

	UKSJobItem_GetDefaultQuips_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultPrimaryWeapon
// ()

void UKSJobItem::GetDefaultPrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultPrimaryWeapon");

	UKSJobItem_GetDefaultPrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultPerks
// ()

void UKSJobItem::GetDefaultPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultPerks");

	UKSJobItem_GetDefaultPerks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultGadget
// ()

void UKSJobItem::GetDefaultGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultGadget");

	UKSJobItem_GetDefaultGadget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultEmotes
// ()

void UKSJobItem::GetDefaultEmotes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultEmotes");

	UKSJobItem_GetDefaultEmotes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetDefaultCommunications
// ()

void UKSJobItem::GetDefaultCommunications()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetDefaultCommunications");

	UKSJobItem_GetDefaultCommunications_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetAlternativeSecondaryWeapon
// ()

void UKSJobItem::GetAlternativeSecondaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetAlternativeSecondaryWeapon");

	UKSJobItem_GetAlternativeSecondaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetAlternativePrimaryWeapon
// ()

void UKSJobItem::GetAlternativePrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetAlternativePrimaryWeapon");

	UKSJobItem_GetAlternativePrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobItem.GetAlternativeGadget
// ()

void UKSJobItem::GetAlternativeGadget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobItem.GetAlternativeGadget");

	UKSJobItem_GetAlternativeGadget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.JobLoadout.ValidateAttachmentForWeapon
// ()

void UJobLoadout::ValidateAttachmentForWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.ValidateAttachmentForWeapon");

	UJobLoadout_ValidateAttachmentForWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.JobLoadout.SetToJobDefaults
// ()

void UJobLoadout::SetToJobDefaults()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.SetToJobDefaults");

	UJobLoadout_SetToJobDefaults_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.JobLoadout.SetSlot
// ()

void UJobLoadout::SetSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.SetSlot");

	UJobLoadout_SetSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.JobLoadout.GetSlot
// ()

void UJobLoadout::GetSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.GetSlot");

	UJobLoadout_GetSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.JobLoadout.GetAsMap
// ()

void UJobLoadout::GetAsMap()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.GetAsMap");

	UJobLoadout_GetAsMap_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.JobLoadout.CleanJobLoadoutItems
// ()

void UJobLoadout::CleanJobLoadoutItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.JobLoadout.CleanJobLoadoutItems");

	UJobLoadout_CleanJobLoadoutItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.OnRep_EntryCount
// ()

void UKSJobSelectionComponent::OnRep_EntryCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.OnRep_EntryCount");

	UKSJobSelectionComponent_OnRep_EntryCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.OnRep_AllowUnownedJobs
// ()

void UKSJobSelectionComponent::OnRep_AllowUnownedJobs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.OnRep_AllowUnownedJobs");

	UKSJobSelectionComponent_OnRep_AllowUnownedJobs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.OnPhaseChange
// ()

void UKSJobSelectionComponent::OnPhaseChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.OnPhaseChange");

	UKSJobSelectionComponent_OnPhaseChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.NewPlayerStarting
// ()

void UKSJobSelectionComponent::NewPlayerStarting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.NewPlayerStarting");

	UKSJobSelectionComponent_NewPlayerStarting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.NewBotStarting
// ()

void UKSJobSelectionComponent::NewBotStarting()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.NewBotStarting");

	UKSJobSelectionComponent_NewBotStarting_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.IsReady
// ()

void UKSJobSelectionComponent::IsReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.IsReady");

	UKSJobSelectionComponent_IsReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.InitializeJobSelectionList
// ()

void UKSJobSelectionComponent::InitializeJobSelectionList()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.InitializeJobSelectionList");

	UKSJobSelectionComponent_InitializeJobSelectionList_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionComponent.GetJobSelectionEntries
// ()

void UKSJobSelectionComponent::GetJobSelectionEntries()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionComponent.GetJobSelectionEntries");

	UKSJobSelectionComponent_GetJobSelectionEntries_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.ServerRequestSelectionState
// ()

void UKSJobSelectionManager::ServerRequestSelectionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.ServerRequestSelectionState");

	UKSJobSelectionManager_ServerRequestSelectionState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.RequestSelectionState
// ()

void UKSJobSelectionManager::RequestSelectionState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.RequestSelectionState");

	UKSJobSelectionManager_RequestSelectionState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.PlayerTeamSet
// ()

void UKSJobSelectionManager::PlayerTeamSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.PlayerTeamSet");

	UKSJobSelectionManager_PlayerTeamSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.PlayerStateSet
// ()

void UKSJobSelectionManager::PlayerStateSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.PlayerStateSet");

	UKSJobSelectionManager_PlayerStateSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.JobSelectionComponentReady
// ()

void UKSJobSelectionManager::JobSelectionComponentReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.JobSelectionComponentReady");

	UKSJobSelectionManager_JobSelectionComponentReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.IsReady
// ()

void UKSJobSelectionManager::IsReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.IsReady");

	UKSJobSelectionManager_IsReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.GetJobSelectionComponent
// ()

void UKSJobSelectionManager::GetJobSelectionComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.GetJobSelectionComponent");

	UKSJobSelectionManager_GetJobSelectionComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectionManager.ClientAcknowledgeStateSelection
// ()

void UKSJobSelectionManager::ClientAcknowledgeStateSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectionManager.ClientAcknowledgeStateSelection");

	UKSJobSelectionManager_ClientAcknowledgeStateSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetOwningPlayerName
// ()

void AKSJobSelectPreviewActor::SetOwningPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetOwningPlayerName");

	AKSJobSelectPreviewActor_SetOwningPlayerName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetModelViewerDelay
// ()

void AKSJobSelectPreviewActor::SetModelViewerDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetModelViewerDelay");

	AKSJobSelectPreviewActor_SetModelViewerDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetJobToQueuedId
// ()

void AKSJobSelectPreviewActor::SetJobToQueuedId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetJobToQueuedId");

	AKSJobSelectPreviewActor_SetJobToQueuedId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetJobAndSkin
// ()

void AKSJobSelectPreviewActor::SetJobAndSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetJobAndSkin");

	AKSJobSelectPreviewActor_SetJobAndSkin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetJob
// ()

void AKSJobSelectPreviewActor::SetJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetJob");

	AKSJobSelectPreviewActor_SetJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.SetHoveredJob
// ()

void AKSJobSelectPreviewActor::SetHoveredJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.SetHoveredJob");

	AKSJobSelectPreviewActor_SetHoveredJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.PreLobbyCharacterDestroy
// ()

void AKSJobSelectPreviewActor::PreLobbyCharacterDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.PreLobbyCharacterDestroy");

	AKSJobSelectPreviewActor_PreLobbyCharacterDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.PostLobbyCharacterSpawned
// ()

void AKSJobSelectPreviewActor::PostLobbyCharacterSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.PostLobbyCharacterSpawned");

	AKSJobSelectPreviewActor_PostLobbyCharacterSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.IsLockedIn
// ()

void AKSJobSelectPreviewActor::IsLockedIn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.IsLockedIn");

	AKSJobSelectPreviewActor_IsLockedIn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.HasQueuedJob
// ()

void AKSJobSelectPreviewActor::HasQueuedJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.HasQueuedJob");

	AKSJobSelectPreviewActor_HasQueuedJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetSkinBundle
// ()

void AKSJobSelectPreviewActor::GetSkinBundle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetSkinBundle");

	AKSJobSelectPreviewActor_GetSkinBundle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetPreviewLoadState
// ()

void AKSJobSelectPreviewActor::GetPreviewLoadState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetPreviewLoadState");

	AKSJobSelectPreviewActor_GetPreviewLoadState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetPositionIndex
// ()

void AKSJobSelectPreviewActor::GetPositionIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetPositionIndex");

	AKSJobSelectPreviewActor_GetPositionIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetOwningPlayerName
// ()

void AKSJobSelectPreviewActor::GetOwningPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetOwningPlayerName");

	AKSJobSelectPreviewActor_GetOwningPlayerName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetLobbyCharacter
// ()

void AKSJobSelectPreviewActor::GetLobbyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetLobbyCharacter");

	AKSJobSelectPreviewActor_GetLobbyCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetJobItem
// ()

void AKSJobSelectPreviewActor::GetJobItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetJobItem");

	AKSJobSelectPreviewActor_GetJobItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetCharacterName
// ()

void AKSJobSelectPreviewActor::GetCharacterName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetCharacterName");

	AKSJobSelectPreviewActor_GetCharacterName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.GetCharacterFriendlySearchName
// ()

void AKSJobSelectPreviewActor::GetCharacterFriendlySearchName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.GetCharacterFriendlySearchName");

	AKSJobSelectPreviewActor_GetCharacterFriendlySearchName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSJobSelectPreviewActor.BlueprintStateChanged
// ()

void AKSJobSelectPreviewActor::BlueprintStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSJobSelectPreviewActor.BlueprintStateChanged");

	AKSJobSelectPreviewActor_BlueprintStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillCam.KillCamStop
// ()

void UKSKillCam::KillCamStop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillCam.KillCamStop");

	UKSKillCam_KillCamStop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillCam.DestroySpectatorController
// ()

void UKSKillCam::DestroySpectatorController()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillCam.DestroySpectatorController");

	UKSKillCam_DestroySpectatorController_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnTakeDamage
// ()

void AKSPlayerController::ViewedPawnTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnTakeDamage");

	AKSPlayerController_ViewedPawnTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnTakeArmorDamage
// ()

void AKSPlayerController::ViewedPawnTakeArmorDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnTakeArmorDamage");

	AKSPlayerController_ViewedPawnTakeArmorDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamageNotify
// ()

void AKSPlayerController::ViewedPawnInstigatedDamageNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamageNotify");

	AKSPlayerController_ViewedPawnInstigatedDamageNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamage
// ()

void AKSPlayerController::ViewedPawnInstigatedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ViewedPawnInstigatedDamage");

	AKSPlayerController_ViewedPawnInstigatedDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.TriggerInputAction
// ()

void AKSPlayerController::TriggerInputAction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.TriggerInputAction");

	AKSPlayerController_TriggerInputAction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ToggleTouch
// ()

void AKSPlayerController::ToggleTouch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ToggleTouch");

	AKSPlayerController_ToggleTouch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ShouldVoteBlockMenu
// ()

void AKSPlayerController::ShouldVoteBlockMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ShouldVoteBlockMenu");

	AKSPlayerController_ShouldVoteBlockMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ShouldThermalVisionSkipTeammates
// ()

void AKSPlayerController::ShouldThermalVisionSkipTeammates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ShouldThermalVisionSkipTeammates");

	AKSPlayerController_ShouldThermalVisionSkipTeammates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetVoteShouldBlockMenu
// ()

void AKSPlayerController::SetVoteShouldBlockMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetVoteShouldBlockMenu");

	AKSPlayerController_SetVoteShouldBlockMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetSkipTeammatesForThermalVision
// ()

void AKSPlayerController::SetSkipTeammatesForThermalVision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetSkipTeammatesForThermalVision");

	AKSPlayerController_SetSkipTeammatesForThermalVision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetIsTeamLoadedInLobby
// ()

void AKSPlayerController::SetIsTeamLoadedInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetIsTeamLoadedInLobby");

	AKSPlayerController_SetIsTeamLoadedInLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetGamepadTurnRateScale
// ()

void AKSPlayerController::SetGamepadTurnRateScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetGamepadTurnRateScale");

	AKSPlayerController_SetGamepadTurnRateScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetGamepadLookUpRateScale
// ()

void AKSPlayerController::SetGamepadLookUpRateScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetGamepadLookUpRateScale");

	AKSPlayerController_SetGamepadLookUpRateScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetForceThermalVision
// ()

void AKSPlayerController::SetForceThermalVision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetForceThermalVision");

	AKSPlayerController_SetForceThermalVision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.SetAutoPickupEnabled
// ()

void AKSPlayerController::SetAutoPickupEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.SetAutoPickupEnabled");

	AKSPlayerController_SetAutoPickupEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerUpdatePing
// ()

void AKSPlayerController::ServerUpdatePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerUpdatePing");

	AKSPlayerController_ServerUpdatePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerSetIsTeamLoadedInLobby
// ()

void AKSPlayerController::ServerSetIsTeamLoadedInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerSetIsTeamLoadedInLobby");

	AKSPlayerController_ServerSetIsTeamLoadedInLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerSetAutoPickupPreference
// ()

void AKSPlayerController::ServerSetAutoPickupPreference()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerSetAutoPickupPreference");

	AKSPlayerController_ServerSetAutoPickupPreference_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerReportQuitFromMenu
// ()

void AKSPlayerController::ServerReportQuitFromMenu()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerReportQuitFromMenu");

	AKSPlayerController_ServerReportQuitFromMenu_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerPushInputTypeUse
// ()

void AKSPlayerController::ServerPushInputTypeUse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerPushInputTypeUse");

	AKSPlayerController_ServerPushInputTypeUse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerPushFrameRateData
// ()

void AKSPlayerController::ServerPushFrameRateData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerPushFrameRateData");

	AKSPlayerController_ServerPushFrameRateData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerPushClientContext
// ()

void AKSPlayerController::ServerPushClientContext()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerPushClientContext");

	AKSPlayerController_ServerPushClientContext_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerNotifyClientSimpleSimulation
// ()

void AKSPlayerController::ServerNotifyClientSimpleSimulation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerNotifyClientSimpleSimulation");

	AKSPlayerController_ServerNotifyClientSimpleSimulation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerLagCompensationVisualization
// ()

void AKSPlayerController::ServerLagCompensationVisualization()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerLagCompensationVisualization");

	AKSPlayerController_ServerLagCompensationVisualization_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerChangeSpectateTarget
// ()

void AKSPlayerController::ServerChangeSpectateTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerChangeSpectateTarget");

	AKSPlayerController_ServerChangeSpectateTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ServerBouncePing
// ()

void AKSPlayerController::ServerBouncePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ServerBouncePing");

	AKSPlayerController_ServerBouncePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportWeaponsEquipped
// ()

void AKSPlayerController::ReportWeaponsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportWeaponsEquipped");

	AKSPlayerController_ReportWeaponsEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportTimeRevealedCharacter
// ()

void AKSPlayerController::ReportTimeRevealedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportTimeRevealedCharacter");

	AKSPlayerController_ReportTimeRevealedCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportSetRevealCharacter
// ()

void AKSPlayerController::ReportSetRevealCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportSetRevealCharacter");

	AKSPlayerController_ReportSetRevealCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportKillcamWorldReady
// ()

void AKSPlayerController::ReportKillcamWorldReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportKillcamWorldReady");

	AKSPlayerController_ReportKillcamWorldReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportApparelApplied
// ()

void AKSPlayerController::ReportApparelApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportApparelApplied");

	AKSPlayerController_ReportApparelApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ReportAllReadyConditionsMet
// ()

void AKSPlayerController::ReportAllReadyConditionsMet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ReportAllReadyConditionsMet");

	AKSPlayerController_ReportAllReadyConditionsMet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.RadialMenuUseLastSelection
// ()

void AKSPlayerController::RadialMenuUseLastSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.RadialMenuUseLastSelection");

	AKSPlayerController_RadialMenuUseLastSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.RadialMenuReleased
// ()

void AKSPlayerController::RadialMenuReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.RadialMenuReleased");

	AKSPlayerController_RadialMenuReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.RadialMenuPressed
// ()

void AKSPlayerController::RadialMenuPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.RadialMenuPressed");

	AKSPlayerController_RadialMenuPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.RadialMenuForceClosed
// ()

void AKSPlayerController::RadialMenuForceClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.RadialMenuForceClosed");

	AKSPlayerController_RadialMenuForceClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnSpectateViewTargetDestroyed
// ()

void AKSPlayerController::OnSpectateViewTargetDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnSpectateViewTargetDestroyed");

	AKSPlayerController_OnSpectateViewTargetDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnSpectateViewedCharacterKilledTimerElapsed
// ()

void AKSPlayerController::OnSpectateViewedCharacterKilledTimerElapsed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnSpectateViewedCharacterKilledTimerElapsed");

	AKSPlayerController_OnSpectateViewedCharacterKilledTimerElapsed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnSpectateViewedCharacterKilled
// ()

void AKSPlayerController::OnSpectateViewedCharacterKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnSpectateViewedCharacterKilled");

	AKSPlayerController_OnSpectateViewedCharacterKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnSpectateControllerDestroyed
// ()

void AKSPlayerController::OnSpectateControllerDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnSpectateControllerDestroyed");

	AKSPlayerController_OnSpectateControllerDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnPrimaryPawnDestroyed
// ()

void AKSPlayerController::OnPrimaryPawnDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnPrimaryPawnDestroyed");

	AKSPlayerController_OnPrimaryPawnDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnKillcamWorldReady
// ()

void AKSPlayerController::OnKillcamWorldReady()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnKillcamWorldReady");

	AKSPlayerController_OnKillcamWorldReady_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnCurrentSpectateTargetDestroyed
// ()

void AKSPlayerController::OnCurrentSpectateTargetDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnCurrentSpectateTargetDestroyed");

	AKSPlayerController_OnCurrentSpectateTargetDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnCharacterWeaponsEquipped
// ()

void AKSPlayerController::OnCharacterWeaponsEquipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnCharacterWeaponsEquipped");

	AKSPlayerController_OnCharacterWeaponsEquipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.OnCharacterApparelApplied
// ()

void AKSPlayerController::OnCharacterApparelApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.OnCharacterApparelApplied");

	AKSPlayerController_OnCharacterApparelApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.LocalStopAimDownSights
// ()

void AKSPlayerController::LocalStopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.LocalStopAimDownSights");

	AKSPlayerController_LocalStopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.LocalStartAimDownSights
// ()

void AKSPlayerController::LocalStartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.LocalStartAimDownSights");

	AKSPlayerController_LocalStartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.IsThermalVisionForced
// ()

void AKSPlayerController::IsThermalVisionForced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.IsThermalVisionForced");

	AKSPlayerController_IsThermalVisionForced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.IsRadialMenuOpen
// ()

void AKSPlayerController::IsRadialMenuOpen()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.IsRadialMenuOpen");

	AKSPlayerController_IsRadialMenuOpen_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.IsInShownWorld
// ()

void AKSPlayerController::IsInShownWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.IsInShownWorld");

	AKSPlayerController_IsInShownWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.IsAutoPickupEnabled
// ()

void AKSPlayerController::IsAutoPickupEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.IsAutoPickupEnabled");

	AKSPlayerController_IsAutoPickupEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.HasUIBlockingRightStickLookInput
// ()

void AKSPlayerController::HasUIBlockingRightStickLookInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.HasUIBlockingRightStickLookInput");

	AKSPlayerController_HasUIBlockingRightStickLookInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetValidSpectateTargetCount
// ()

void AKSPlayerController::GetValidSpectateTargetCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetValidSpectateTargetCount");

	AKSPlayerController_GetValidSpectateTargetCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetUIPawn
// ()

void AKSPlayerController::GetUIPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetUIPawn");

	AKSPlayerController_GetUIPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetUIKSCharacter
// ()

void AKSPlayerController::GetUIKSCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetUIKSCharacter");

	AKSPlayerController_GetUIKSCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetTelemetrySettings
// ()

void AKSPlayerController::GetTelemetrySettings()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetTelemetrySettings");

	AKSPlayerController_GetTelemetrySettings_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetShotListener
// ()

void AKSPlayerController::GetShotListener()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetShotListener");

	AKSPlayerController_GetShotListener_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetRadialItemNameByEquipPoint
// ()

void AKSPlayerController::GetRadialItemNameByEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetRadialItemNameByEquipPoint");

	AKSPlayerController_GetRadialItemNameByEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetPrimaryPawn
// ()

void AKSPlayerController::GetPrimaryPawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetPrimaryPawn");

	AKSPlayerController_GetPrimaryPawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetPingManager
// ()

void AKSPlayerController::GetPingManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetPingManager");

	AKSPlayerController_GetPingManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetPing
// ()

void AKSPlayerController::GetPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetPing");

	AKSPlayerController_GetPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetOutgoingPacketInfo
// ()

void AKSPlayerController::GetOutgoingPacketInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetOutgoingPacketInfo");

	AKSPlayerController_GetOutgoingPacketInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetJobSelectionManager
// ()

void AKSPlayerController::GetJobSelectionManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetJobSelectionManager");

	AKSPlayerController_GetJobSelectionManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetIsTeamLoadedInLobby
// ()

void AKSPlayerController::GetIsTeamLoadedInLobby()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetIsTeamLoadedInLobby");

	AKSPlayerController_GetIsTeamLoadedInLobby_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetIncomingPacketInfo
// ()

void AKSPlayerController::GetIncomingPacketInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetIncomingPacketInfo");

	AKSPlayerController_GetIncomingPacketInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetHUDAnnouncmentComponent
// ()

void AKSPlayerController::GetHUDAnnouncmentComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetHUDAnnouncmentComponent");

	AKSPlayerController_GetHUDAnnouncmentComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetGamepadLookSpeedManager
// ()

void AKSPlayerController::GetGamepadLookSpeedManager()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetGamepadLookSpeedManager");

	AKSPlayerController_GetGamepadLookSpeedManager_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetFPS
// ()

void AKSPlayerController::GetFPS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetFPS");

	AKSPlayerController_GetFPS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetEquipmentManagerComponent
// ()

void AKSPlayerController::GetEquipmentManagerComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetEquipmentManagerComponent");

	AKSPlayerController_GetEquipmentManagerComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.GetAimAssistComponent
// ()

void AKSPlayerController::GetAimAssistComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.GetAimAssistComponent");

	AKSPlayerController_GetAimAssistComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.FlushVoteInput
// ()

void AKSPlayerController::FlushVoteInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.FlushVoteInput");

	AKSPlayerController_FlushVoteInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.FinalizeAutoPickupPreferenceChange
// ()

void AKSPlayerController::FinalizeAutoPickupPreferenceChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.FinalizeAutoPickupPreferenceChange");

	AKSPlayerController_FinalizeAutoPickupPreferenceChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.FillInClientContext
// ()

void AKSPlayerController::FillInClientContext()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.FillInClientContext");

	AKSPlayerController_FillInClientContext_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnTakeDamage
// ()

void AKSPlayerController::EventViewedPawnTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnTakeDamage");

	AKSPlayerController_EventViewedPawnTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnTakeArmorDamage
// ()

void AKSPlayerController::EventViewedPawnTakeArmorDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnTakeArmorDamage");

	AKSPlayerController_EventViewedPawnTakeArmorDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamageNotify
// ()

void AKSPlayerController::EventViewedPawnInstigatedDamageNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamageNotify");

	AKSPlayerController_EventViewedPawnInstigatedDamageNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamage
// ()

void AKSPlayerController::EventViewedPawnInstigatedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EventViewedPawnInstigatedDamage");

	AKSPlayerController_EventViewedPawnInstigatedDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.EnablePreventFlushPressedKeys
// ()

void AKSPlayerController::EnablePreventFlushPressedKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.EnablePreventFlushPressedKeys");

	AKSPlayerController_EnablePreventFlushPressedKeys_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ControllerChangedForPickupLabeling
// ()

void AKSPlayerController::ControllerChangedForPickupLabeling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ControllerChangedForPickupLabeling");

	AKSPlayerController_ControllerChangedForPickupLabeling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.CompVis
// ()

void AKSPlayerController::CompVis()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.CompVis");

	AKSPlayerController_CompVis_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientViewedPawnTakeDamage
// ()

void AKSPlayerController::ClientViewedPawnTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientViewedPawnTakeDamage");

	AKSPlayerController_ClientViewedPawnTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientViewedPawnTakeArmorDamage
// ()

void AKSPlayerController::ClientViewedPawnTakeArmorDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientViewedPawnTakeArmorDamage");

	AKSPlayerController_ClientViewedPawnTakeArmorDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientViewedPawnInstigatedDamageNotify
// ()

void AKSPlayerController::ClientViewedPawnInstigatedDamageNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientViewedPawnInstigatedDamageNotify");

	AKSPlayerController_ClientViewedPawnInstigatedDamageNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientUpdateActivityProgressCount
// ()

void AKSPlayerController::ClientUpdateActivityProgressCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientUpdateActivityProgressCount");

	AKSPlayerController_ClientUpdateActivityProgressCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientSpectateTeam
// ()

void AKSPlayerController::ClientSpectateTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientSpectateTeam");

	AKSPlayerController_ClientSpectateTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientSignalEndOfMatch
// ()

void AKSPlayerController::ClientSignalEndOfMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientSignalEndOfMatch");

	AKSPlayerController_ClientSignalEndOfMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientReturnPing
// ()

void AKSPlayerController::ClientReturnPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientReturnPing");

	AKSPlayerController_ClientReturnPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientPlayInstantReplay
// ()

void AKSPlayerController::ClientPlayInstantReplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientPlayInstantReplay");

	AKSPlayerController_ClientPlayInstantReplay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientOnPollStateChanged
// ()

void AKSPlayerController::ClientOnPollStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientOnPollStateChanged");

	AKSPlayerController_ClientOnPollStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientOnPollCompleted
// ()

void AKSPlayerController::ClientOnPollCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientOnPollCompleted");

	AKSPlayerController_ClientOnPollCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugSphere
// ()

void AKSPlayerController::ClientDrawDebugSphere()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugSphere");

	AKSPlayerController_ClientDrawDebugSphere_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugLine
// ()

void AKSPlayerController::ClientDrawDebugLine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugLine");

	AKSPlayerController_ClientDrawDebugLine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugCapsule
// ()

void AKSPlayerController::ClientDrawDebugCapsule()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugCapsule");

	AKSPlayerController_ClientDrawDebugCapsule_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClientDrawDebugBox
// ()

void AKSPlayerController::ClientDrawDebugBox()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClientDrawDebugBox");

	AKSPlayerController_ClientDrawDebugBox_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ClearActiveInteractableUI
// ()

void AKSPlayerController::ClearActiveInteractableUI()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ClearActiveInteractableUI");

	AKSPlayerController_ClearActiveInteractableUI_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.CachePostMatchScoreboard
// ()

void AKSPlayerController::CachePostMatchScoreboard()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.CachePostMatchScoreboard");

	AKSPlayerController_CachePostMatchScoreboard_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.CachePostMatchInfo
// ()

void AKSPlayerController::CachePostMatchInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.CachePostMatchInfo");

	AKSPlayerController_CachePostMatchInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ApplyKickback
// ()

void AKSPlayerController::ApplyKickback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ApplyKickback");

	AKSPlayerController_ApplyKickback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.AimStateChangedForPickupLabeling
// ()

void AKSPlayerController::AimStateChangedForPickupLabeling()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.AimStateChangedForPickupLabeling");

	AKSPlayerController_AimStateChangedForPickupLabeling_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.AddTimePlayed
// ()

void AKSPlayerController::AddTimePlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.AddTimePlayed");

	AKSPlayerController_AddTimePlayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerController.ActivateRadialItemByEquipPoint
// ()

void AKSPlayerController::ActivateRadialItemByEquipPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerController.ActivateRadialItemByEquipPoint");

	AKSPlayerController_ActivateRadialItemByEquipPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillLeaderTracker.ProcessElimEntry
// ()

void UKSKillLeaderTracker::ProcessElimEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.ProcessElimEntry");

	UKSKillLeaderTracker_ProcessElimEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillLeaderTracker.HandleTrackerAccolade
// ()

void UKSKillLeaderTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.HandleTrackerAccolade");

	UKSKillLeaderTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillLeaderTracker.FindPlayerEntry
// ()

void UKSKillLeaderTracker::FindPlayerEntry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.FindPlayerEntry");

	UKSKillLeaderTracker_FindPlayerEntry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSKillLeaderTracker.CheckKillLeader
// ()

void UKSKillLeaderTracker::CheckKillLeader()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSKillLeaderTracker.CheckKillLeader");

	UKSKillLeaderTracker_CheckKillLeader_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetWeapons
// ()

void UKSLoadoutBundle::GetWeapons()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetWeapons");

	UKSLoadoutBundle_GetWeapons_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetWeaponItemIds
// ()

void UKSLoadoutBundle::GetWeaponItemIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetWeaponItemIds");

	UKSLoadoutBundle_GetWeaponItemIds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetPerks
// ()

void UKSLoadoutBundle::GetPerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetPerks");

	UKSLoadoutBundle_GetPerks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetPerkItemIds
// ()

void UKSLoadoutBundle::GetPerkItemIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetPerkItemIds");

	UKSLoadoutBundle_GetPerkItemIds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetBundlePerks
// ()

void UKSLoadoutBundle::GetBundlePerks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetBundlePerks");

	UKSLoadoutBundle_GetBundlePerks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetBundleAbilities
// ()

void UKSLoadoutBundle::GetBundleAbilities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetBundleAbilities");

	UKSLoadoutBundle_GetBundleAbilities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetAttachments
// ()

void UKSLoadoutBundle::GetAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAttachments");

	UKSLoadoutBundle_GetAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetAttachmentItemIds
// ()

void UKSLoadoutBundle::GetAttachmentItemIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAttachmentItemIds");

	UKSLoadoutBundle_GetAttachmentItemIds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetAbilityItemIds
// ()

void UKSLoadoutBundle::GetAbilityItemIds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAbilityItemIds");

	UKSLoadoutBundle_GetAbilityItemIds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutBundle.GetAbilities
// ()

void UKSLoadoutBundle::GetAbilities()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutBundle.GetAbilities");

	UKSLoadoutBundle_GetAbilities_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutClass.GetDynamicPoseImage
// ()

void UKSLoadoutClass::GetDynamicPoseImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutClass.GetDynamicPoseImage");

	UKSLoadoutClass_GetDynamicPoseImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutDataFactory.IsAccountItemEquippedInSlot
// ()

void UKSLoadoutDataFactory::IsAccountItemEquippedInSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutDataFactory.IsAccountItemEquippedInSlot");

	UKSLoadoutDataFactory_IsAccountItemEquippedInSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutDataFactory.GetEquippedAccountItem
// ()

void UKSLoadoutDataFactory::GetEquippedAccountItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutDataFactory.GetEquippedAccountItem");

	UKSLoadoutDataFactory_GetEquippedAccountItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutDataFactory.GetDefaultCosmeticItem
// ()

void UKSLoadoutDataFactory::GetDefaultCosmeticItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutDataFactory.GetDefaultCosmeticItem");

	UKSLoadoutDataFactory_GetDefaultCosmeticItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutDataFactory.EquipAccountItemToSlot
// ()

void UKSLoadoutDataFactory::EquipAccountItemToSlot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutDataFactory.EquipAccountItemToSlot");

	UKSLoadoutDataFactory_EquipAccountItemToSlot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLoadoutRuleComponent.AllowItem
// ()

void UKSLoadoutRuleComponent::AllowItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLoadoutRuleComponent.AllowItem");

	UKSLoadoutRuleComponent_AllowItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.VisibilityChanged
// ()

void AKSLobbyCharacter::VisibilityChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.VisibilityChanged");

	AKSLobbyCharacter_VisibilityChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.UpdateHiddenInGame
// ()

void AKSLobbyCharacter::UpdateHiddenInGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.UpdateHiddenInGame");

	AKSLobbyCharacter_UpdateHiddenInGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.UnsetCharacter
// ()

void AKSLobbyCharacter::UnsetCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.UnsetCharacter");

	AKSLobbyCharacter_UnsetCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.StopLobbyCharacterMontage
// ()

void AKSLobbyCharacter::StopLobbyCharacterMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.StopLobbyCharacterMontage");

	AKSLobbyCharacter_StopLobbyCharacterMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.StopCurrentEmote
// ()

void AKSLobbyCharacter::StopCurrentEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.StopCurrentEmote");

	AKSLobbyCharacter_StopCurrentEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.ShowLobbyNameplate
// ()

void AKSLobbyCharacter::ShowLobbyNameplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.ShowLobbyNameplate");

	AKSLobbyCharacter_ShowLobbyNameplate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetUpStaticLobbyProp
// ()

void AKSLobbyCharacter::SetUpStaticLobbyProp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetUpStaticLobbyProp");

	AKSLobbyCharacter_SetUpStaticLobbyProp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetUpSkeletalLobbyProp
// ()

void AKSLobbyCharacter::SetUpSkeletalLobbyProp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetUpSkeletalLobbyProp");

	AKSLobbyCharacter_SetUpSkeletalLobbyProp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetupLobbyCharacter
// ()

void AKSLobbyCharacter::SetupLobbyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetupLobbyCharacter");

	AKSLobbyCharacter_SetupLobbyCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetShouldHideInGame
// ()

void AKSLobbyCharacter::SetShouldHideInGame()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetShouldHideInGame");

	AKSLobbyCharacter_SetShouldHideInGame_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetLobbyNameplate
// ()

void AKSLobbyCharacter::SetLobbyNameplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetLobbyNameplate");

	AKSLobbyCharacter_SetLobbyNameplate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetLobbyCharacterAnimState
// ()

void AKSLobbyCharacter::SetLobbyCharacterAnimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetLobbyCharacterAnimState");

	AKSLobbyCharacter_SetLobbyCharacterAnimState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetCharacterSkin
// ()

void AKSLobbyCharacter::SetCharacterSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetCharacterSkin");

	AKSLobbyCharacter_SetCharacterSkin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.SetCharacterEmote
// ()

void AKSLobbyCharacter::SetCharacterEmote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.SetCharacterEmote");

	AKSLobbyCharacter_SetCharacterEmote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.PlayLobbyCharacterMontage
// ()

void AKSLobbyCharacter::PlayLobbyCharacterMontage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.PlayLobbyCharacterMontage");

	AKSLobbyCharacter_PlayLobbyCharacterMontage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.OnLobbyPresenceStateChange
// ()

void AKSLobbyCharacter::OnLobbyPresenceStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.OnLobbyPresenceStateChange");

	AKSLobbyCharacter_OnLobbyPresenceStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.IsSet
// ()

void AKSLobbyCharacter::IsSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.IsSet");

	AKSLobbyCharacter_IsSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.IsLobbyCharacter
// ()

void AKSLobbyCharacter::IsLobbyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.IsLobbyCharacter");

	AKSLobbyCharacter_IsLobbyCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.InitializeLobbyCharacterAnimation
// ()

void AKSLobbyCharacter::InitializeLobbyCharacterAnimation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.InitializeLobbyCharacterAnimation");

	AKSLobbyCharacter_InitializeLobbyCharacterAnimation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.HideLobbyNameplate
// ()

void AKSLobbyCharacter::HideLobbyNameplate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.HideLobbyNameplate");

	AKSLobbyCharacter_HideLobbyNameplate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.GetCurrentMontagePosition
// ()

void AKSLobbyCharacter::GetCurrentMontagePosition()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.GetCurrentMontagePosition");

	AKSLobbyCharacter_GetCurrentMontagePosition_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.GetCurrentAnimState
// ()

void AKSLobbyCharacter::GetCurrentAnimState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.GetCurrentAnimState");

	AKSLobbyCharacter_GetCurrentAnimState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.GetCharacterIndex
// ()

void AKSLobbyCharacter::GetCharacterIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.GetCharacterIndex");

	AKSLobbyCharacter_GetCharacterIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.EmoteCosmeticComponentCreated
// ()

void AKSLobbyCharacter::EmoteCosmeticComponentCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.EmoteCosmeticComponentCreated");

	AKSLobbyCharacter_EmoteCosmeticComponentCreated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.EmoteActionStateChanged
// ()

void AKSLobbyCharacter::EmoteActionStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.EmoteActionStateChanged");

	AKSLobbyCharacter_EmoteActionStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.DeattachStaticLobbyProp
// ()

void AKSLobbyCharacter::DeattachStaticLobbyProp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.DeattachStaticLobbyProp");

	AKSLobbyCharacter_DeattachStaticLobbyProp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.DeattachSkeletalLobbyProp
// ()

void AKSLobbyCharacter::DeattachSkeletalLobbyProp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.DeattachSkeletalLobbyProp");

	AKSLobbyCharacter_DeattachSkeletalLobbyProp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.DeattachAllLobbyProps
// ()

void AKSLobbyCharacter::DeattachAllLobbyProps()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.DeattachAllLobbyProps");

	AKSLobbyCharacter_DeattachAllLobbyProps_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.ClearAllLobbyPropInfo
// ()

void AKSLobbyCharacter::ClearAllLobbyPropInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.ClearAllLobbyPropInfo");

	AKSLobbyCharacter_ClearAllLobbyPropInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLobbyCharacter.AttachAllActiveLobbyProps
// ()

void AKSLobbyCharacter::AttachAllActiveLobbyProps()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLobbyCharacter.AttachAllActiveLobbyProps");

	AKSLobbyCharacter_AttachAllActiveLobbyProps_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLocalPlayer.IsKillCamReplayActive
// ()

void UKSLocalPlayer::IsKillCamReplayActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLocalPlayer.IsKillCamReplayActive");

	UKSLocalPlayer_IsKillCamReplayActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLocalPlayer.GetRealWorld
// ()

void UKSLocalPlayer::GetRealWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLocalPlayer.GetRealWorld");

	UKSLocalPlayer_GetRealWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLocalPlayer.GetKillCam
// ()

void UKSLocalPlayer::GetKillCam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLocalPlayer.GetKillCam");

	UKSLocalPlayer_GetKillCam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSLongShot.HandleTrackerAccolade
// ()

void UKSLongShot::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSLongShot.HandleTrackerAccolade");

	UKSLongShot_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleTeamCreated
// ()

void AKSMapDifficultyManager::HandleTeamCreated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleTeamCreated");

	AKSMapDifficultyManager_HandleTeamCreated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleRoundStart
// ()

void AKSMapDifficultyManager::HandleRoundStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleRoundStart");

	AKSMapDifficultyManager_HandleRoundStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleRoundSetup
// ()

void AKSMapDifficultyManager::HandleRoundSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleRoundSetup");

	AKSMapDifficultyManager_HandleRoundSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandlePhaseChange
// ()

void AKSMapDifficultyManager::HandlePhaseChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandlePhaseChange");

	AKSMapDifficultyManager_HandlePhaseChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleObjectiveClaimed
// ()

void AKSMapDifficultyManager::HandleObjectiveClaimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleObjectiveClaimed");

	AKSMapDifficultyManager_HandleObjectiveClaimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMapDifficultyManager.HandleCharacterOnTeamKilled
// ()

void AKSMapDifficultyManager::HandleCharacterOnTeamKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMapDifficultyManager.HandleCharacterOnTeamKilled");

	AKSMapDifficultyManager_HandleCharacterOnTeamKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMatchDataRecorder.OnPlayerLogout
// ()

void UKSMatchDataRecorder::OnPlayerLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMatchDataRecorder.OnPlayerLogout");

	UKSMatchDataRecorder_OnPlayerLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMatchDataRecorder.OnPlayerLogin
// ()

void UKSMatchDataRecorder::OnPlayerLogin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMatchDataRecorder.OnPlayerLogin");

	UKSMatchDataRecorder_OnPlayerLogin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.ShiftLocationBetweenTransforms
// ()

void UKSMath::ShiftLocationBetweenTransforms()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ShiftLocationBetweenTransforms");

	UKSMath_ShiftLocationBetweenTransforms_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.ScaleInterpCurveVector2D
// ()

void UKSMath::ScaleInterpCurveVector2D()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ScaleInterpCurveVector2D");

	UKSMath_ScaleInterpCurveVector2D_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.ScaleInterpCurveFloatInput
// ()

void UKSMath::ScaleInterpCurveFloatInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ScaleInterpCurveFloatInput");

	UKSMath_ScaleInterpCurveFloatInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.RInterpConstantToDirectional
// ()

void UKSMath::RInterpConstantToDirectional()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.RInterpConstantToDirectional");

	UKSMath_RInterpConstantToDirectional_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.GetRotationFromNormals
// ()

void UKSMath::GetRotationFromNormals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.GetRotationFromNormals");

	UKSMath_GetRotationFromNormals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.GetLineSphereIntersectionPoints
// ()

void UKSMath::GetLineSphereIntersectionPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.GetLineSphereIntersectionPoints");

	UKSMath_GetLineSphereIntersectionPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.GetLineRectangleIntersectionPoints
// ()

void UKSMath::GetLineRectangleIntersectionPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.GetLineRectangleIntersectionPoints");

	UKSMath_GetLineRectangleIntersectionPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.GetLineCircleIntersectionPoints
// ()

void UKSMath::GetLineCircleIntersectionPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.GetLineCircleIntersectionPoints");

	UKSMath_GetLineCircleIntersectionPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.FloatInterpCurveIntegralTrapezoid
// ()

void UKSMath::FloatInterpCurveIntegralTrapezoid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FloatInterpCurveIntegralTrapezoid");

	UKSMath_FloatInterpCurveIntegralTrapezoid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.FInterpRadiansTo
// ()

void UKSMath::FInterpRadiansTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FInterpRadiansTo");

	UKSMath_FInterpRadiansTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.FInterpEaseOutViewStyle
// ()

void UKSMath::FInterpEaseOutViewStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FInterpEaseOutViewStyle");

	UKSMath_FInterpEaseOutViewStyle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.FInterpEaseOutInverse
// ()

void UKSMath::FInterpEaseOutInverse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FInterpEaseOutInverse");

	UKSMath_FInterpEaseOutInverse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.FInterpEaseInViewStyle
// ()

void UKSMath::FInterpEaseInViewStyle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FInterpEaseInViewStyle");

	UKSMath_FInterpEaseInViewStyle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.FInterpDegreesTo
// ()

void UKSMath::FInterpDegreesTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.FInterpDegreesTo");

	UKSMath_FInterpDegreesTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMath.ClampVector2D
// ()

void UKSMath::ClampVector2D()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMath.ClampVector2D");

	UKSMath_ClampVector2D_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMedPack.GetBuildupTime
// ()

void AKSMedPack::GetBuildupTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMedPack.GetBuildupTime");

	AKSMedPack_GetBuildupTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMercMasteryManager.GetWinPercentForJob
// ()

void UKSMercMasteryManager::GetWinPercentForJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetWinPercentForJob");

	UKSMercMasteryManager_GetWinPercentForJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMercMasteryManager.GetLowestJobForActivityType
// ()

void UKSMercMasteryManager::GetLowestJobForActivityType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetLowestJobForActivityType");

	UKSMercMasteryManager_GetLowestJobForActivityType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMercMasteryManager.GetHighestJobForActivityType
// ()

void UKSMercMasteryManager::GetHighestJobForActivityType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetHighestJobForActivityType");

	UKSMercMasteryManager_GetHighestJobForActivityType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithType
// ()

void UKSMercMasteryManager::GetActivityInstancesWithType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithType");

	UKSMercMasteryManager_GetActivityInstancesWithType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithJob
// ()

void UKSMercMasteryManager::GetActivityInstancesWithJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetActivityInstancesWithJob");

	UKSMercMasteryManager_GetActivityInstancesWithJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMercMasteryManager.GetActivityInstanceByJobAndType
// ()

void UKSMercMasteryManager::GetActivityInstanceByJobAndType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.GetActivityInstanceByJobAndType");

	UKSMercMasteryManager_GetActivityInstanceByJobAndType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMercMasteryManager.FindActivityByJobAndType
// ()

void UKSMercMasteryManager::FindActivityByJobAndType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMercMasteryManager.FindActivityByJobAndType");

	UKSMercMasteryManager_FindActivityByJobAndType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMiniMapAssistant.GetRelativeMinimapHeightToLocalPlayer
// ()

void AKSMiniMapAssistant::GetRelativeMinimapHeightToLocalPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMiniMapAssistant.GetRelativeMinimapHeightToLocalPlayer");

	AKSMiniMapAssistant_GetRelativeMinimapHeightToLocalPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMinimapRendererBase.GetMinimapWidth
// ()

void AKSMinimapRendererBase::GetMinimapWidth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMinimapRendererBase.GetMinimapWidth");

	AKSMinimapRendererBase_GetMinimapWidth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.StopAnimationFromEvent
// ()

void UKSPlayerModInstance::StopAnimationFromEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.StopAnimationFromEvent");

	UKSPlayerModInstance_StopAnimationFromEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.ReactsToAnimationEvent
// ()

void UKSPlayerModInstance::ReactsToAnimationEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.ReactsToAnimationEvent");

	UKSPlayerModInstance_ReactsToAnimationEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.PlayAnimationFromEvent
// ()

void UKSPlayerModInstance::PlayAnimationFromEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.PlayAnimationFromEvent");

	UKSPlayerModInstance_PlayAnimationFromEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OwnerIsLocal
// ()

void UKSPlayerModInstance::OwnerIsLocal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OwnerIsLocal");

	UKSPlayerModInstance_OwnerIsLocal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OwnerHasAuthority
// ()

void UKSPlayerModInstance::OwnerHasAuthority()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OwnerHasAuthority");

	UKSPlayerModInstance_OwnerHasAuthority_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OverrideInteraction
// ()

void UKSPlayerModInstance::OverrideInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OverrideInteraction");

	UKSPlayerModInstance_OverrideInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnRep_OwnerCharacter
// ()

void UKSPlayerModInstance::OnRep_OwnerCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnRep_OwnerCharacter");

	UKSPlayerModInstance_OnRep_OwnerCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnRep_ModAsset
// ()

void UKSPlayerModInstance::OnRep_ModAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnRep_ModAsset");

	UKSPlayerModInstance_OnRep_ModAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnRep_InstanceCount
// ()

void UKSPlayerModInstance::OnRep_InstanceCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnRep_InstanceCount");

	UKSPlayerModInstance_OnRep_InstanceCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnOwnerDied
// ()

void UKSPlayerModInstance::OnOwnerDied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnOwnerDied");

	UKSPlayerModInstance_OnOwnerDied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnNewCharacter
// ()

void UKSPlayerModInstance::OnNewCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnNewCharacter");

	UKSPlayerModInstance_OnNewCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnModInitialized
// ()

void UKSPlayerModInstance::OnModInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnModInitialized");

	UKSPlayerModInstance_OnModInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.OnCharacterOwnerDeath
// ()

void UKSPlayerModInstance::OnCharacterOwnerDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.OnCharacterOwnerDeath");

	UKSPlayerModInstance_OnCharacterOwnerDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.ModifyDamageDealt
// ()

void UKSPlayerModInstance::ModifyDamageDealt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.ModifyDamageDealt");

	UKSPlayerModInstance_ModifyDamageDealt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.ModEventReceived
// ()

void UKSPlayerModInstance::ModEventReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.ModEventReceived");

	UKSPlayerModInstance_ModEventReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.InitializeMod
// ()

void UKSPlayerModInstance::InitializeMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.InitializeMod");

	UKSPlayerModInstance_InitializeMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetPlayerStateOwner
// ()

void UKSPlayerModInstance::GetPlayerStateOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetPlayerStateOwner");

	UKSPlayerModInstance_GetPlayerStateOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetModType
// ()

void UKSPlayerModInstance::GetModType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetModType");

	UKSPlayerModInstance_GetModType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetModInstigator
// ()

void UKSPlayerModInstance::GetModInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetModInstigator");

	UKSPlayerModInstance_GetModInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetModAsset
// ()

void UKSPlayerModInstance::GetModAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetModAsset");

	UKSPlayerModInstance_GetModAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetInstanceCount
// ()

void UKSPlayerModInstance::GetInstanceCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetInstanceCount");

	UKSPlayerModInstance_GetInstanceCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetDuration
// ()

void UKSPlayerModInstance::GetDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetDuration");

	UKSPlayerModInstance_GetDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.GetCharacterOwner
// ()

void UKSPlayerModInstance::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.GetCharacterOwner");

	UKSPlayerModInstance_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.BroadcastModTriggeredInternal
// ()

void UKSPlayerModInstance::BroadcastModTriggeredInternal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.BroadcastModTriggeredInternal");

	UKSPlayerModInstance_BroadcastModTriggeredInternal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInstance.BroadcastModTriggered
// ()

void UKSPlayerModInstance::BroadcastModTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInstance.BroadcastModTriggered");

	UKSPlayerModInstance_BroadcastModTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.UpdateChargeDirect
// ()

void UKSModInst_Activated::UpdateChargeDirect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.UpdateChargeDirect");

	UKSModInst_Activated_UpdateChargeDirect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.UpdateCharge
// ()

void UKSModInst_Activated::UpdateCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.UpdateCharge");

	UKSModInst_Activated_UpdateCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.TryToCancel
// ()

void UKSModInst_Activated::TryToCancel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.TryToCancel");

	UKSModInst_Activated_TryToCancel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.TryToActivate
// ()

void UKSModInst_Activated::TryToActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.TryToActivate");

	UKSModInst_Activated_TryToActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.SetAbilityMovementMode
// ()

void UKSModInst_Activated::SetAbilityMovementMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.SetAbilityMovementMode");

	UKSModInst_Activated_SetAbilityMovementMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.SetAbilityMovementDisabled
// ()

void UKSModInst_Activated::SetAbilityMovementDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.SetAbilityMovementDisabled");

	UKSModInst_Activated_SetAbilityMovementDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.RefundCharge
// ()

void UKSModInst_Activated::RefundCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.RefundCharge");

	UKSModInst_Activated_RefundCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.Recharge
// ()

void UKSModInst_Activated::Recharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.Recharge");

	UKSModInst_Activated_Recharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnSetupComplete
// ()

void UKSModInst_Activated::OnSetupComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnSetupComplete");

	UKSModInst_Activated_OnSetupComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnSetupActive
// ()

void UKSModInst_Activated::OnSetupActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnSetupActive");

	UKSModInst_Activated_OnSetupActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnSetup
// ()

void UKSModInst_Activated::OnSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnSetup");

	UKSModInst_Activated_OnSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_SetupTimer
// ()

void UKSModInst_Activated::OnRep_SetupTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_SetupTimer");

	UKSModInst_Activated_OnRep_SetupTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_LockoutTimer
// ()

void UKSModInst_Activated::OnRep_LockoutTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_LockoutTimer");

	UKSModInst_Activated_OnRep_LockoutTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_Locked
// ()

void UKSModInst_Activated::OnRep_Locked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_Locked");

	UKSModInst_Activated_OnRep_Locked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_CurrentlyHeldId
// ()

void UKSModInst_Activated::OnRep_CurrentlyHeldId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_CurrentlyHeldId");

	UKSModInst_Activated_OnRep_CurrentlyHeldId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnRep_CurrentCharge
// ()

void UKSModInst_Activated::OnRep_CurrentCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnRep_CurrentCharge");

	UKSModInst_Activated_OnRep_CurrentCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnOwnerDownStateChanged
// ()

void UKSModInst_Activated::OnOwnerDownStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnOwnerDownStateChanged");

	UKSModInst_Activated_OnOwnerDownStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnLockoutTimerTick
// ()

void UKSModInst_Activated::OnLockoutTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnLockoutTimerTick");

	UKSModInst_Activated_OnLockoutTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnLockoutTimerActive
// ()

void UKSModInst_Activated::OnLockoutTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnLockoutTimerActive");

	UKSModInst_Activated_OnLockoutTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnFullyCharged
// ()

void UKSModInst_Activated::OnFullyCharged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnFullyCharged");

	UKSModInst_Activated_OnFullyCharged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnEndRecovery
// ()

void UKSModInst_Activated::OnEndRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnEndRecovery");

	UKSModInst_Activated_OnEndRecovery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnEndActivationWarning
// ()

void UKSModInst_Activated::OnEndActivationWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnEndActivationWarning");

	UKSModInst_Activated_OnEndActivationWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnEndActivation
// ()

void UKSModInst_Activated::OnEndActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnEndActivation");

	UKSModInst_Activated_OnEndActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnActivation
// ()

void UKSModInst_Activated::OnActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnActivation");

	UKSModInst_Activated_OnActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.OnAbilityReleased
// ()

void UKSModInst_Activated::OnAbilityReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.OnAbilityReleased");

	UKSModInst_Activated_OnAbilityReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.IsUIActivateableNow
// ()

void UKSModInst_Activated::IsUIActivateableNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsUIActivateableNow");

	UKSModInst_Activated_IsUIActivateableNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.IsLocked
// ()

void UKSModInst_Activated::IsLocked()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsLocked");

	UKSModInst_Activated_IsLocked_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.IsInSetup
// ()

void UKSModInst_Activated::IsInSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsInSetup");

	UKSModInst_Activated_IsInSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.IsActivated
// ()

void UKSModInst_Activated::IsActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsActivated");

	UKSModInst_Activated_IsActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.IsAbilityMovementDisabled
// ()

void UKSModInst_Activated::IsAbilityMovementDisabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.IsAbilityMovementDisabled");

	UKSModInst_Activated_IsAbilityMovementDisabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.HandleSetupTimerComplete
// ()

void UKSModInst_Activated::HandleSetupTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.HandleSetupTimerComplete");

	UKSModInst_Activated_HandleSetupTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.HandleSetupTimerActive
// ()

void UKSModInst_Activated::HandleSetupTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.HandleSetupTimerActive");

	UKSModInst_Activated_HandleSetupTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.HandleCharacterOwnerTakeDamage
// ()

void UKSModInst_Activated::HandleCharacterOwnerTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.HandleCharacterOwnerTakeDamage");

	UKSModInst_Activated_HandleCharacterOwnerTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetStateMachine
// ()

void UKSModInst_Activated::GetStateMachine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetStateMachine");

	UKSModInst_Activated_GetStateMachine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetSetupActionRestrictor
// ()

void UKSModInst_Activated::GetSetupActionRestrictor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetSetupActionRestrictor");

	UKSModInst_Activated_GetSetupActionRestrictor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetRequiredCharge
// ()

void UKSModInst_Activated::GetRequiredCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetRequiredCharge");

	UKSModInst_Activated_GetRequiredCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetRecoveryActionRestrictor
// ()

void UKSModInst_Activated::GetRecoveryActionRestrictor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetRecoveryActionRestrictor");

	UKSModInst_Activated_GetRecoveryActionRestrictor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetMaximumCharge
// ()

void UKSModInst_Activated::GetMaximumCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetMaximumCharge");

	UKSModInst_Activated_GetMaximumCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetLockoutTimeRemaining
// ()

void UKSModInst_Activated::GetLockoutTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetLockoutTimeRemaining");

	UKSModInst_Activated_GetLockoutTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetDefaultCharge
// ()

void UKSModInst_Activated::GetDefaultCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetDefaultCharge");

	UKSModInst_Activated_GetDefaultCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetCurrentCharge
// ()

void UKSModInst_Activated::GetCurrentCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetCurrentCharge");

	UKSModInst_Activated_GetCurrentCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetActivatedModAsset
// ()

void UKSModInst_Activated::GetActivatedModAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetActivatedModAsset");

	UKSModInst_Activated_GetActivatedModAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetAbilitySetupDuration
// ()

void UKSModInst_Activated::GetAbilitySetupDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetAbilitySetupDuration");

	UKSModInst_Activated_GetAbilitySetupDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetAbilityRecoveryDuration
// ()

void UKSModInst_Activated::GetAbilityRecoveryDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetAbilityRecoveryDuration");

	UKSModInst_Activated_GetAbilityRecoveryDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.GetAbilityDuration
// ()

void UKSModInst_Activated::GetAbilityDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.GetAbilityDuration");

	UKSModInst_Activated_GetAbilityDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.EndActivation
// ()

void UKSModInst_Activated::EndActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.EndActivation");

	UKSModInst_Activated_EndActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.ConsumeChargeAmount
// ()

void UKSModInst_Activated::ConsumeChargeAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.ConsumeChargeAmount");

	UKSModInst_Activated_ConsumeChargeAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.ConsumeCharge
// ()

void UKSModInst_Activated::ConsumeCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.ConsumeCharge");

	UKSModInst_Activated_ConsumeCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.ClientModFailedToActivate
// ()

void UKSModInst_Activated::ClientModFailedToActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.ClientModFailedToActivate");

	UKSModInst_Activated_ClientModFailedToActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.CanActivateWhileDowned
// ()

void UKSModInst_Activated::CanActivateWhileDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.CanActivateWhileDowned");

	UKSModInst_Activated_CanActivateWhileDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.CanActivateNow
// ()

void UKSModInst_Activated::CanActivateNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.CanActivateNow");

	UKSModInst_Activated_CanActivateNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BroadcastModActivated
// ()

void UKSModInst_Activated::BroadcastModActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BroadcastModActivated");

	UKSModInst_Activated_BroadcastModActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BroadcastEndRecovery
// ()

void UKSModInst_Activated::BroadcastEndRecovery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BroadcastEndRecovery");

	UKSModInst_Activated_BroadcastEndRecovery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BroadcastEndActivationWarning
// ()

void UKSModInst_Activated::BroadcastEndActivationWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BroadcastEndActivationWarning");

	UKSModInst_Activated_BroadcastEndActivationWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.BeginActivation
// ()

void UKSModInst_Activated::BeginActivation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.BeginActivation");

	UKSModInst_Activated_BeginActivation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_Activated.AbilityActivationRequestTimeout
// ()

void UKSModInst_Activated::AbilityActivationRequestTimeout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_Activated.AbilityActivationRequestTimeout");

	UKSModInst_Activated_AbilityActivationRequestTimeout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.TryToSetAsActiveMod
// ()

void UKSModInst_ActivatedStateMachine::TryToSetAsActiveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.TryToSetAsActiveMod");

	UKSModInst_ActivatedStateMachine_TryToSetAsActiveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.RemoveFromStateStorage
// ()

void UKSModInst_ActivatedStateMachine::RemoveFromStateStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.RemoveFromStateStorage");

	UKSModInst_ActivatedStateMachine_RemoveFromStateStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.OnRep_StateStorage
// ()

void UKSModInst_ActivatedStateMachine::OnRep_StateStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.OnRep_StateStorage");

	UKSModInst_ActivatedStateMachine_OnRep_StateStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.OnRep_CurrentActiveMod
// ()

void UKSModInst_ActivatedStateMachine::OnRep_CurrentActiveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.OnRep_CurrentActiveMod");

	UKSModInst_ActivatedStateMachine_OnRep_CurrentActiveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.OnActiveModFailedToActivate
// ()

void UKSModInst_ActivatedStateMachine::OnActiveModFailedToActivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.OnActiveModFailedToActivate");

	UKSModInst_ActivatedStateMachine_OnActiveModFailedToActivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.OnActiveModChargeChanged
// ()

void UKSModInst_ActivatedStateMachine::OnActiveModChargeChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.OnActiveModChargeChanged");

	UKSModInst_ActivatedStateMachine_OnActiveModChargeChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.GetStoredPlayerStates
// ()

void UKSModInst_ActivatedStateMachine::GetStoredPlayerStates()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.GetStoredPlayerStates");

	UKSModInst_ActivatedStateMachine_GetStoredPlayerStates_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.GetStateStorage
// ()

void UKSModInst_ActivatedStateMachine::GetStateStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.GetStateStorage");

	UKSModInst_ActivatedStateMachine_GetStateStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.ClearStateStorage
// ()

void UKSModInst_ActivatedStateMachine::ClearStateStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.ClearStateStorage");

	UKSModInst_ActivatedStateMachine_ClearStateStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.AddToStateStorage
// ()

void UKSModInst_ActivatedStateMachine::AddToStateStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.AddToStateStorage");

	UKSModInst_ActivatedStateMachine_AddToStateStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedStateMachine.AddPlayerStateToStateStorage
// ()

void UKSModInst_ActivatedStateMachine::AddPlayerStateToStateStorage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedStateMachine.AddPlayerStateToStateStorage");

	UKSModInst_ActivatedStateMachine_AddPlayerStateToStateStorage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedTarget.GetCachedTarget
// ()

void UKSModInst_ActivatedTarget::GetCachedTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedTarget.GetCachedTarget");

	UKSModInst_ActivatedTarget_GetCachedTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedTarget.BroadcastTarget
// ()

void UKSModInst_ActivatedTarget::BroadcastTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedTarget.BroadcastTarget");

	UKSModInst_ActivatedTarget_BroadcastTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ActivatedTarget.AssignTarget
// ()

void UKSModInst_ActivatedTarget::AssignTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ActivatedTarget.AssignTarget");

	UKSModInst_ActivatedTarget_AssignTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDamageOther.OnMatchingDamageDealt
// ()

void UKSModInst_OnDamageOther::OnMatchingDamageDealt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDamageOther.OnMatchingDamageDealt");

	UKSModInst_OnDamageOther_OnMatchingDamageDealt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDamageOther.OnInstigatedDamageNotify
// ()

void UKSModInst_OnDamageOther::OnInstigatedDamageNotify()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDamageOther.OnInstigatedDamageNotify");

	UKSModInst_OnDamageOther_OnInstigatedDamageNotify_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDamageOther.OnInstigatedDamage
// ()

void UKSModInst_OnDamageOther::OnInstigatedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDamageOther.OnInstigatedDamage");

	UKSModInst_OnDamageOther_OnInstigatedDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDamageOther.DoesDamageMatch
// ()

void UKSModInst_OnDamageOther::DoesDamageMatch()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDamageOther.DoesDamageMatch");

	UKSModInst_OnDamageOther_DoesDamageMatch_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.TryToRemoveItem
// ()

void UKSModInst_GiveItemOnActivation::TryToRemoveItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.TryToRemoveItem");

	UKSModInst_GiveItemOnActivation_TryToRemoveItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.TryToGiveItem
// ()

void UKSModInst_GiveItemOnActivation::TryToGiveItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.TryToGiveItem");

	UKSModInst_GiveItemOnActivation_TryToGiveItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.OnRep_GivenItem
// ()

void UKSModInst_GiveItemOnActivation::OnRep_GivenItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.OnRep_GivenItem");

	UKSModInst_GiveItemOnActivation_OnRep_GivenItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.OnNewGivenItem
// ()

void UKSModInst_GiveItemOnActivation::OnNewGivenItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.OnNewGivenItem");

	UKSModInst_GiveItemOnActivation_OnNewGivenItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.OnItemRemoved
// ()

void UKSModInst_GiveItemOnActivation::OnItemRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.OnItemRemoved");

	UKSModInst_GiveItemOnActivation_OnItemRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.GetOnNewCharacterItemIndex
// ()

void UKSModInst_GiveItemOnActivation::GetOnNewCharacterItemIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.GetOnNewCharacterItemIndex");

	UKSModInst_GiveItemOnActivation_GetOnNewCharacterItemIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveItemOnActivation.AsyncItemGiveComplete
// ()

void UKSModInst_GiveItemOnActivation::AsyncItemGiveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveItemOnActivation.AsyncItemGiveComplete");

	UKSModInst_GiveItemOnActivation_AsyncItemGiveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.TryToSwapBackToWeapon
// ()

void UKSModInst_GiveWeaponOnActivation::TryToSwapBackToWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.TryToSwapBackToWeapon");

	UKSModInst_GiveWeaponOnActivation_TryToSwapBackToWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.SwapFromRetry
// ()

void UKSModInst_GiveWeaponOnActivation::SwapFromRetry()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.SwapFromRetry");

	UKSModInst_GiveWeaponOnActivation_SwapFromRetry_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.RegisterDeployable
// ()

void UKSModInst_GiveWeaponOnActivation::RegisterDeployable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.RegisterDeployable");

	UKSModInst_GiveWeaponOnActivation_RegisterDeployable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.OnWeaponStateChanged
// ()

void UKSModInst_GiveWeaponOnActivation::OnWeaponStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.OnWeaponStateChanged");

	UKSModInst_GiveWeaponOnActivation_OnWeaponStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.OnGivenWeaponInstigatedDamage
// ()

void UKSModInst_GiveWeaponOnActivation::OnGivenWeaponInstigatedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.OnGivenWeaponInstigatedDamage");

	UKSModInst_GiveWeaponOnActivation_OnGivenWeaponInstigatedDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.OnDeployableDestroyed
// ()

void UKSModInst_GiveWeaponOnActivation::OnDeployableDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.OnDeployableDestroyed");

	UKSModInst_GiveWeaponOnActivation_OnDeployableDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.HandleWeaponExhausted
// ()

void UKSModInst_GiveWeaponOnActivation::HandleWeaponExhausted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.HandleWeaponExhausted");

	UKSModInst_GiveWeaponOnActivation_HandleWeaponExhausted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.GivenWeaponInstigatedDamage
// ()

void UKSModInst_GiveWeaponOnActivation::GivenWeaponInstigatedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.GivenWeaponInstigatedDamage");

	UKSModInst_GiveWeaponOnActivation_GivenWeaponInstigatedDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnHolster
// ()

void UKSModInst_GiveWeaponOnActivation::EndsActivationOnHolster()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnHolster");

	UKSModInst_GiveWeaponOnActivation_EndsActivationOnHolster_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnEmptyClip
// ()

void UKSModInst_GiveWeaponOnActivation::EndsActivationOnEmptyClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.EndsActivationOnEmptyClip");

	UKSModInst_GiveWeaponOnActivation_EndsActivationOnEmptyClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveWeaponOnActivation.BroadcastGivenWeaponInstigatedDamage
// ()

void UKSModInst_GiveWeaponOnActivation::BroadcastGivenWeaponInstigatedDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveWeaponOnActivation.BroadcastGivenWeaponInstigatedDamage");

	UKSModInst_GiveWeaponOnActivation_BroadcastGivenWeaponInstigatedDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_BuffWeaponOnActivation.OnRep_BaseWeapon
// ()

void UKSModInst_BuffWeaponOnActivation::OnRep_BaseWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_BuffWeaponOnActivation.OnRep_BaseWeapon");

	UKSModInst_BuffWeaponOnActivation_OnRep_BaseWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_BuffWeaponOnActivation.OnBaseWeaponDestroyed
// ()

void UKSModInst_BuffWeaponOnActivation::OnBaseWeaponDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_BuffWeaponOnActivation.OnBaseWeaponDestroyed");

	UKSModInst_BuffWeaponOnActivation_OnBaseWeaponDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OverTimeEffect.OnRep_EffectTimer
// ()

void UKSModInst_OverTimeEffect::OnRep_EffectTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OverTimeEffect.OnRep_EffectTimer");

	UKSModInst_OverTimeEffect_OnRep_EffectTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OverTimeEffect.GetEffectTickPeriod
// ()

void UKSModInst_OverTimeEffect::GetEffectTickPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OverTimeEffect.GetEffectTickPeriod");

	UKSModInst_OverTimeEffect_GetEffectTickPeriod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OverTimeEffect.EffectTick
// ()

void UKSModInst_OverTimeEffect::EffectTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OverTimeEffect.EffectTick");

	UKSModInst_OverTimeEffect_EffectTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DetectEnemy.OnRep_EnemyDetected
// ()

void UKSModInst_DetectEnemy::OnRep_EnemyDetected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.OnRep_EnemyDetected");

	UKSModInst_DetectEnemy_OnRep_EnemyDetected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DetectEnemy.IsDetectingEnemy
// ()

void UKSModInst_DetectEnemy::IsDetectingEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.IsDetectingEnemy");

	UKSModInst_DetectEnemy_IsDetectingEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DetectEnemy.GetWidgetClass
// ()

void UKSModInst_DetectEnemy::GetWidgetClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.GetWidgetClass");

	UKSModInst_DetectEnemy_GetWidgetClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_DetectEnemy.DetectEnemy
// ()

void UKSModInst_DetectEnemy::DetectEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_DetectEnemy.DetectEnemy");

	UKSModInst_DetectEnemy_DetectEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_FireWeaponOnActivation.HandleIdle
// ()

void UKSModInst_FireWeaponOnActivation::HandleIdle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_FireWeaponOnActivation.HandleIdle");

	UKSModInst_FireWeaponOnActivation_HandleIdle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_FireWeaponOnActivation.HandleCooldown
// ()

void UKSModInst_FireWeaponOnActivation::HandleCooldown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_FireWeaponOnActivation.HandleCooldown");

	UKSModInst_FireWeaponOnActivation_HandleCooldown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_FireWeaponOnActivation.HandleBuildup
// ()

void UKSModInst_FireWeaponOnActivation::HandleBuildup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_FireWeaponOnActivation.HandleBuildup");

	UKSModInst_FireWeaponOnActivation_HandleBuildup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSucceeded
// ()

void UKSModInst_GiveBuildOnActivation::BuildSucceeded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSucceeded");

	UKSModInst_GiveBuildOnActivation_BuildSucceeded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSpawned
// ()

void UKSModInst_GiveBuildOnActivation::BuildSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildSpawned");

	UKSModInst_GiveBuildOnActivation_BuildSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildReclaimed
// ()

void UKSModInst_GiveBuildOnActivation::BuildReclaimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildReclaimed");

	UKSModInst_GiveBuildOnActivation_BuildReclaimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_GiveBuildOnActivation.BuildFailed
// ()

void UKSModInst_GiveBuildOnActivation::BuildFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_GiveBuildOnActivation.BuildFailed");

	UKSModInst_GiveBuildOnActivation_BuildFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_HoldToTarget.OnRep_CurrentTarget
// ()

void UKSModInst_HoldToTarget::OnRep_CurrentTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_HoldToTarget.OnRep_CurrentTarget");

	UKSModInst_HoldToTarget_OnRep_CurrentTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_MartialArtist.GetThrowDistance
// ()

void UKSModInst_MartialArtist::GetThrowDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.GetThrowDistance");

	UKSModInst_MartialArtist_GetThrowDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_MartialArtist.GetThrowDirection
// ()

void UKSModInst_MartialArtist::GetThrowDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.GetThrowDirection");

	UKSModInst_MartialArtist_GetThrowDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_MartialArtist.GetCardinalThrowDirection
// ()

void UKSModInst_MartialArtist::GetCardinalThrowDirection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.GetCardinalThrowDirection");

	UKSModInst_MartialArtist_GetCardinalThrowDirection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_MartialArtist.BroadcastTargetInfo
// ()

void UKSModInst_MartialArtist::BroadcastTargetInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MartialArtist.BroadcastTargetInfo");

	UKSModInst_MartialArtist_BroadcastTargetInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_MovementAbility.GetDistance
// ()

void UKSModInst_MovementAbility::GetDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_MovementAbility.GetDistance");

	UKSModInst_MovementAbility_GetDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDodgeRoll.Triggered
// ()

void UKSModInst_OnDodgeRoll::Triggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDodgeRoll.Triggered");

	UKSModInst_OnDodgeRoll_Triggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDodgeRoll.OnDodgeRoll
// ()

void UKSModInst_OnDodgeRoll::OnDodgeRoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDodgeRoll.OnDodgeRoll");

	UKSModInst_OnDodgeRoll_OnDodgeRoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDownOrRevive.OnReviveComplete
// ()

void UKSModInst_OnDownOrRevive::OnReviveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDownOrRevive.OnReviveComplete");

	UKSModInst_OnDownOrRevive_OnReviveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDownOther.OnDownOther
// ()

void UKSModInst_OnDownOther::OnDownOther()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDownOther.OnDownOther");

	UKSModInst_OnDownOther_OnDownOther_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnDownOther.DownTriggered
// ()

void UKSModInst_OnDownOther::DownTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnDownOther.DownTriggered");

	UKSModInst_OnDownOther_DownTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnPickupItem.OnItemPickedUp
// ()

void UKSModInst_OnPickupItem::OnItemPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnPickupItem.OnItemPickedUp");

	UKSModInst_OnPickupItem_OnItemPickedUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnPickupItem.ItemPickedUp
// ()

void UKSModInst_OnPickupItem::ItemPickedUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnPickupItem.ItemPickedUp");

	UKSModInst_OnPickupItem_ItemPickedUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnReviveOther.Triggered
// ()

void UKSModInst_OnReviveOther::Triggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnReviveOther.Triggered");

	UKSModInst_OnReviveOther_Triggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnReviveOther.OnReviveOther
// ()

void UKSModInst_OnReviveOther::OnReviveOther()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnReviveOther.OnReviveOther");

	UKSModInst_OnReviveOther_OnReviveOther_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.TakeDamageTimerComplete
// ()

void UKSModInst_OnTakeDamage::TakeDamageTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.TakeDamageTimerComplete");

	UKSModInst_OnTakeDamage_TakeDamageTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.StopTakeDamageTimer
// ()

void UKSModInst_OnTakeDamage::StopTakeDamageTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.StopTakeDamageTimer");

	UKSModInst_OnTakeDamage_StopTakeDamageTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.StartTakeDamageTimer
// ()

void UKSModInst_OnTakeDamage::StartTakeDamageTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.StartTakeDamageTimer");

	UKSModInst_OnTakeDamage_StartTakeDamageTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.ReviveCompleted
// ()

void UKSModInst_OnTakeDamage::ReviveCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.ReviveCompleted");

	UKSModInst_OnTakeDamage_ReviveCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.OnTakeDamage
// ()

void UKSModInst_OnTakeDamage::OnTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.OnTakeDamage");

	UKSModInst_OnTakeDamage_OnTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.OnReviveCompleted
// ()

void UKSModInst_OnTakeDamage::OnReviveCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.OnReviveCompleted");

	UKSModInst_OnTakeDamage_OnReviveCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.OnRep_TakeDamageTimer
// ()

void UKSModInst_OnTakeDamage::OnRep_TakeDamageTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.OnRep_TakeDamageTimer");

	UKSModInst_OnTakeDamage_OnRep_TakeDamageTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_OnTakeDamage.MatchingDamageTaken
// ()

void UKSModInst_OnTakeDamage::MatchingDamageTaken()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_OnTakeDamage.MatchingDamageTaken");

	UKSModInst_OnTakeDamage_MatchingDamageTaken_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.PingFromDownedEnemy
// ()

void UKSModInst_PingOnOtherDowned::PingFromDownedEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.PingFromDownedEnemy");

	UKSModInst_PingOnOtherDowned_PingFromDownedEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.OnPlayerDowned
// ()

void UKSModInst_PingOnOtherDowned::OnPlayerDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.OnPlayerDowned");

	UKSModInst_PingOnOtherDowned_OnPlayerDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.OnCharacterPinged
// ()

void UKSModInst_PingOnOtherDowned::OnCharacterPinged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.OnCharacterPinged");

	UKSModInst_PingOnOtherDowned_OnCharacterPinged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastSpawnPingEmitter
// ()

void UKSModInst_PingOnOtherDowned::BroadcastSpawnPingEmitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastSpawnPingEmitter");

	UKSModInst_PingOnOtherDowned_BroadcastSpawnPingEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastPingedCharacter
// ()

void UKSModInst_PingOnOtherDowned::BroadcastPingedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_PingOnOtherDowned.BroadcastPingedCharacter");

	UKSModInst_PingOnOtherDowned_BroadcastPingedCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_RevealOnMinimap.IsValidReveal
// ()

void UKSModInst_RevealOnMinimap::IsValidReveal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_RevealOnMinimap.IsValidReveal");

	UKSModInst_RevealOnMinimap_IsValidReveal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.ResetToAvailability
// ()

void UKSModInst_ReviveDrone::ResetToAvailability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.ResetToAvailability");

	UKSModInst_ReviveDrone_ResetToAvailability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnReviveDroneEvent
// ()

void UKSModInst_ReviveDrone::OnReviveDroneEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnReviveDroneEvent");

	UKSModInst_ReviveDrone_OnReviveDroneEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnRep_ReviveDroneAbilityState
// ()

void UKSModInst_ReviveDrone::OnRep_ReviveDroneAbilityState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnRep_ReviveDroneAbilityState");

	UKSModInst_ReviveDrone_OnRep_ReviveDroneAbilityState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnDroneTargetRevive
// ()

void UKSModInst_ReviveDrone::OnDroneTargetRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnDroneTargetRevive");

	UKSModInst_ReviveDrone_OnDroneTargetRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnDroneSpawned
// ()

void UKSModInst_ReviveDrone::OnDroneSpawned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnDroneSpawned");

	UKSModInst_ReviveDrone_OnDroneSpawned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnDroneReviveComplete
// ()

void UKSModInst_ReviveDrone::OnDroneReviveComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnDroneReviveComplete");

	UKSModInst_ReviveDrone_OnDroneReviveComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnDroneReviveBegin
// ()

void UKSModInst_ReviveDrone::OnDroneReviveBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnDroneReviveBegin");

	UKSModInst_ReviveDrone_OnDroneReviveBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnDroneHealthUpdate
// ()

void UKSModInst_ReviveDrone::OnDroneHealthUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnDroneHealthUpdate");

	UKSModInst_ReviveDrone_OnDroneHealthUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnDroneDestroyed
// ()

void UKSModInst_ReviveDrone::OnDroneDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnDroneDestroyed");

	UKSModInst_ReviveDrone_OnDroneDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.OnDroneAbort
// ()

void UKSModInst_ReviveDrone::OnDroneAbort()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.OnDroneAbort");

	UKSModInst_ReviveDrone_OnDroneAbort_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.GetReviveProgress
// ()

void UKSModInst_ReviveDrone::GetReviveProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.GetReviveProgress");

	UKSModInst_ReviveDrone_GetReviveProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.GetReviveDroneAbilityState
// ()

void UKSModInst_ReviveDrone::GetReviveDroneAbilityState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.GetReviveDroneAbilityState");

	UKSModInst_ReviveDrone_GetReviveDroneAbilityState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveDrone.BroadcastReviveDroneEvent
// ()

void UKSModInst_ReviveDrone::BroadcastReviveDroneEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveDrone.BroadcastReviveDroneEvent");

	UKSModInst_ReviveDrone_BroadcastReviveDroneEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveTarget.TargetKilled
// ()

void UKSModInst_ReviveTarget::TargetKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveTarget.TargetKilled");

	UKSModInst_ReviveTarget_TargetKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveTarget.ReviveEnd
// ()

void UKSModInst_ReviveTarget::ReviveEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveTarget.ReviveEnd");

	UKSModInst_ReviveTarget_ReviveEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_ReviveTarget.GetTargetCharacter
// ()

void UKSModInst_ReviveTarget::GetTargetCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_ReviveTarget.GetTargetCharacter");

	UKSModInst_ReviveTarget_GetTargetCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_StartingEquipment.GiveEquipment
// ()

void UKSModInst_StartingEquipment::GiveEquipment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_StartingEquipment.GiveEquipment");

	UKSModInst_StartingEquipment_GiveEquipment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModInst_WeaponSkinOverride.OnActiveWeaponChanged
// ()

void UKSModInst_WeaponSkinOverride::OnActiveWeaponChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModInst_WeaponSkinOverride.OnActiveWeaponChanged");

	UKSModInst_WeaponSkinOverride_OnActiveWeaponChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModZone.OnCharacterPossessedOutsideZone
// ()

void AKSModZone::OnCharacterPossessedOutsideZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModZone.OnCharacterPossessedOutsideZone");

	AKSModZone_OnCharacterPossessedOutsideZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSModZone.OnCharacterPossessedInsideZone
// ()

void AKSModZone::OnCharacterPossessedInsideZone()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSModZone.OnCharacterPossessedInsideZone");

	AKSModZone_OnCharacterPossessedInsideZone_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.RemoveTrackerByPlayerState
// ()

void UKSMultiDownsTracker::RemoveTrackerByPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.RemoveTrackerByPlayerState");

	UKSMultiDownsTracker_RemoveTrackerByPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.RemoveTracker
// ()

void UKSMultiDownsTracker::RemoveTracker()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.RemoveTracker");

	UKSMultiDownsTracker_RemoveTracker_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.HandleTrackerAccolade
// ()

void UKSMultiDownsTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.HandleTrackerAccolade");

	UKSMultiDownsTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiDownsTracker.GetTrackPlayer
// ()

void UKSMultiDownsTracker::GetTrackPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiDownsTracker.GetTrackPlayer");

	UKSMultiDownsTracker_GetTrackPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiElimTracker.RemoveTrackerByPlayerState
// ()

void UKSMultiElimTracker::RemoveTrackerByPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiElimTracker.RemoveTrackerByPlayerState");

	UKSMultiElimTracker_RemoveTrackerByPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiElimTracker.HandleTrackerAccolade
// ()

void UKSMultiElimTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiElimTracker.HandleTrackerAccolade");

	UKSMultiElimTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSMultiElimTracker.GetTrackPlayer
// ()

void UKSMultiElimTracker::GetTrackPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSMultiElimTracker.GetTrackPlayer");

	UKSMultiElimTracker_GetTrackPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNamedObject.GetKSName
// ()

void UKSNamedObject::GetKSName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNamedObject.GetKSName");

	UKSNamedObject_GetKSName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNavModifierComponent.UpdateNavigationMesh
// ()

void UKSNavModifierComponent::UpdateNavigationMesh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNavModifierComponent.UpdateNavigationMesh");

	UKSNavModifierComponent_UpdateNavigationMesh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNavModifierComponent.UpdateCachedBounds
// ()

void UKSNavModifierComponent::UpdateCachedBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNavModifierComponent.UpdateCachedBounds");

	UKSNavModifierComponent_UpdateCachedBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNavModifierComponent.SetAreaClassAndCacheBounds
// ()

void UKSNavModifierComponent::SetAreaClassAndCacheBounds()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNavModifierComponent.SetAreaClassAndCacheBounds");

	UKSNavModifierComponent_SetAreaClassAndCacheBounds_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNoFlyZoneTracker.UpdatePlayerTrackers
// ()

void UKSNoFlyZoneTracker::UpdatePlayerTrackers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNoFlyZoneTracker.UpdatePlayerTrackers");

	UKSNoFlyZoneTracker_UpdatePlayerTrackers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNoFlyZoneTracker.HandleTrackerAccolade
// ()

void UKSNoFlyZoneTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNoFlyZoneTracker.HandleTrackerAccolade");

	UKSNoFlyZoneTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNPETrackManager.GetActivityInstanceByType
// ()

void UKSNPETrackManager::GetActivityInstanceByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNPETrackManager.GetActivityInstanceByType");

	UKSNPETrackManager_GetActivityInstanceByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNPETrackManager.FindActivityByType
// ()

void UKSNPETrackManager::FindActivityByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNPETrackManager.FindActivityByType");

	UKSNPETrackManager_FindActivityByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSNPETrackManager.CompleteNPEActivityByType
// ()

void UKSNPETrackManager::CompleteNPEActivityByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSNPETrackManager.CompleteNPEActivityByType");

	UKSNPETrackManager_CompleteNPEActivityByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.TickDamage
// ()

void UKSOutOfBoundsManager::TickDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.TickDamage");

	UKSOutOfBoundsManager_TickDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnOutOfBoundsWarningExpired
// ()

void UKSOutOfBoundsManager::OnOutOfBoundsWarningExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnOutOfBoundsWarningExpired");

	UKSOutOfBoundsManager_OnOutOfBoundsWarningExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnCharacterOutOfWorld
// ()

void UKSOutOfBoundsManager::OnCharacterOutOfWorld()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnCharacterOutOfWorld");

	UKSOutOfBoundsManager_OnCharacterOutOfWorld_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneEnd
// ()

void UKSOutOfBoundsManager::OnActorOverlapZoneEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneEnd");

	UKSOutOfBoundsManager_OnActorOverlapZoneEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneBegin
// ()

void UKSOutOfBoundsManager::OnActorOverlapZoneBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapZoneBegin");

	UKSOutOfBoundsManager_OnActorOverlapZoneBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeEnd
// ()

void UKSOutOfBoundsManager::OnActorOverlapVolumeEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeEnd");

	UKSOutOfBoundsManager_OnActorOverlapVolumeEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeBegin
// ()

void UKSOutOfBoundsManager::OnActorOverlapVolumeBegin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.OnActorOverlapVolumeBegin");

	UKSOutOfBoundsManager_OnActorOverlapVolumeBegin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager.ExpireTimeSpentGroundedTimer
// ()

void UKSOutOfBoundsManager::ExpireTimeSpentGroundedTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager.ExpireTimeSpentGroundedTimer");

	UKSOutOfBoundsManager_ExpireTimeSpentGroundedTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager_RoundGame.OnRoundStarted
// ()

void UKSOutOfBoundsManager_RoundGame::OnRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager_RoundGame.OnRoundStarted");

	UKSOutOfBoundsManager_RoundGame_OnRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsManager_RoundGame.OnFreezeEnd
// ()

void UKSOutOfBoundsManager_RoundGame::OnFreezeEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsManager_RoundGame.OnFreezeEnd");

	UKSOutOfBoundsManager_RoundGame_OnFreezeEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsZone.TurnOnDropBoundary
// ()

void AKSOutOfBoundsZone::TurnOnDropBoundary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsZone.TurnOnDropBoundary");

	AKSOutOfBoundsZone_TurnOnDropBoundary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsZone.TurnOffDropBoundary
// ()

void AKSOutOfBoundsZone::TurnOffDropBoundary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsZone.TurnOffDropBoundary");

	AKSOutOfBoundsZone_TurnOffDropBoundary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsZone.TurnOffCollision
// ()

void AKSOutOfBoundsZone::TurnOffCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsZone.TurnOffCollision");

	AKSOutOfBoundsZone_TurnOffCollision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsVolume.TurnOnCollision
// ()

void AKSOutOfBoundsVolume::TurnOnCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsVolume.TurnOnCollision");

	AKSOutOfBoundsVolume_TurnOnCollision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSOutOfBoundsVolume.TurnOffCollision
// ()

void AKSOutOfBoundsVolume::TurnOffCollision()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSOutOfBoundsVolume.TurnOffCollision");

	AKSOutOfBoundsVolume_TurnOffCollision_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPawnCommonInterface.PrepareForNextRound
// ()

void UKSPawnCommonInterface::PrepareForNextRound()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPawnCommonInterface.PrepareForNextRound");

	UKSPawnCommonInterface_PrepareForNextRound_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPayBackTracker.IsVictimStored
// ()

void UKSPayBackTracker::IsVictimStored()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPayBackTracker.IsVictimStored");

	UKSPayBackTracker_IsVictimStored_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPayBackTracker.HandleTrackerAccolade
// ()

void UKSPayBackTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPayBackTracker.HandleTrackerAccolade");

	UKSPayBackTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPayBackTracker.CheckLastInstigator
// ()

void UKSPayBackTracker::CheckLastInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPayBackTracker.CheckLastInstigator");

	UKSPayBackTracker_CheckLastInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPerformanceCaptureCamera.GetNextCamera
// ()

void AKSPerformanceCaptureCamera::GetNextCamera()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPerformanceCaptureCamera.GetNextCamera");

	AKSPerformanceCaptureCamera_GetNextCamera_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.IsAbandoned
// ()

void UKSPersistentPlayerData::IsAbandoned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.IsAbandoned");

	UKSPersistentPlayerData_IsAbandoned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetTotalCashEarned
// ()

void UKSPersistentPlayerData::GetTotalCashEarned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetTotalCashEarned");

	UKSPersistentPlayerData_GetTotalCashEarned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetTeamNum
// ()

void UKSPersistentPlayerData::GetTeamNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetTeamNum");

	UKSPersistentPlayerData_GetTeamNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetRevives
// ()

void UKSPersistentPlayerData::GetRevives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetRevives");

	UKSPersistentPlayerData_GetRevives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetPlayerState
// ()

void UKSPersistentPlayerData::GetPlayerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetPlayerState");

	UKSPersistentPlayerData_GetPlayerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetPlayerName
// ()

void UKSPersistentPlayerData::GetPlayerName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetPlayerName");

	UKSPersistentPlayerData_GetPlayerName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetMoney
// ()

void UKSPersistentPlayerData::GetMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetMoney");

	UKSPersistentPlayerData_GetMoney_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetJob
// ()

void UKSPersistentPlayerData::GetJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetJob");

	UKSPersistentPlayerData_GetJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetEliminations
// ()

void UKSPersistentPlayerData::GetEliminations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetEliminations");

	UKSPersistentPlayerData_GetEliminations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetDowns
// ()

void UKSPersistentPlayerData::GetDowns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetDowns");

	UKSPersistentPlayerData_GetDowns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetDeaths
// ()

void UKSPersistentPlayerData::GetDeaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetDeaths");

	UKSPersistentPlayerData_GetDeaths_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.GetAssists
// ()

void UKSPersistentPlayerData::GetAssists()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.GetAssists");

	UKSPersistentPlayerData_GetAssists_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPersistentPlayerData.BoundPlayerStateDestroyed
// ()

void UKSPersistentPlayerData::BoundPlayerStateDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPersistentPlayerData.BoundPlayerStateDestroyed");

	UKSPersistentPlayerData_BoundPlayerStateDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.SetGameModePhaseTime
// ()

void UKSPhaseRuleComponent::SetGameModePhaseTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.SetGameModePhaseTime");

	UKSPhaseRuleComponent_SetGameModePhaseTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.SetGameModePhaseNameAndTimer
// ()

void UKSPhaseRuleComponent::SetGameModePhaseNameAndTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.SetGameModePhaseNameAndTimer");

	UKSPhaseRuleComponent_SetGameModePhaseNameAndTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.SetGameModePhaseName
// ()

void UKSPhaseRuleComponent::SetGameModePhaseName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.SetGameModePhaseName");

	UKSPhaseRuleComponent_SetGameModePhaseName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.PhaseTimerExpired
// ()

void UKSPhaseRuleComponent::PhaseTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.PhaseTimerExpired");

	UKSPhaseRuleComponent_PhaseTimerExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.OnPhaseStarted
// ()

void UKSPhaseRuleComponent::OnPhaseStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.OnPhaseStarted");

	UKSPhaseRuleComponent_OnPhaseStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.HandleTeamSidesFlipped
// ()

void UKSPhaseRuleComponent::HandleTeamSidesFlipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.HandleTeamSidesFlipped");

	UKSPhaseRuleComponent_HandleTeamSidesFlipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.HandlePhaseStarted
// ()

void UKSPhaseRuleComponent::HandlePhaseStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.HandlePhaseStarted");

	UKSPhaseRuleComponent_HandlePhaseStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.HandlePhaseInterrupted
// ()

void UKSPhaseRuleComponent::HandlePhaseInterrupted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.HandlePhaseInterrupted");

	UKSPhaseRuleComponent_HandlePhaseInterrupted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.GetGameModeModular
// ()

void UKSPhaseRuleComponent::GetGameModeModular()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.GetGameModeModular");

	UKSPhaseRuleComponent_GetGameModeModular_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.GetCurrentGamePhase
// ()

void UKSPhaseRuleComponent::GetCurrentGamePhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.GetCurrentGamePhase");

	UKSPhaseRuleComponent_GetCurrentGamePhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhaseRuleComponent.CompletePhase
// ()

void UKSPhaseRuleComponent::CompletePhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhaseRuleComponent.CompletePhase");

	UKSPhaseRuleComponent_CompletePhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhysicsAssetUtilities.RemovePhysicsAsset
// ()

void UKSPhysicsAssetUtilities::RemovePhysicsAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhysicsAssetUtilities.RemovePhysicsAsset");

	UKSPhysicsAssetUtilities_RemovePhysicsAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPhysicsAssetUtilities.AppendPhysicsAsset
// ()

void UKSPhysicsAssetUtilities::AppendPhysicsAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPhysicsAssetUtilities.AppendPhysicsAsset");

	UKSPhysicsAssetUtilities_AppendPhysicsAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingBeaconBase.SetupBeaconDisplay
// ()

void AKSPingBeaconBase::SetupBeaconDisplay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingBeaconBase.SetupBeaconDisplay");

	AKSPingBeaconBase_SetupBeaconDisplay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingBeaconBase.PingRemoved
// ()

void AKSPingBeaconBase::PingRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingBeaconBase.PingRemoved");

	AKSPingBeaconBase_PingRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingBeaconBase.GetPingColorForBeacon
// ()

void AKSPingBeaconBase::GetPingColorForBeacon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingBeaconBase.GetPingColorForBeacon");

	AKSPingBeaconBase_GetPingColorForBeacon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingBeaconBase.FindRowByType
// ()

void AKSPingBeaconBase::FindRowByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingBeaconBase.FindRowByType");

	AKSPingBeaconBase_FindRowByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.UpdateCachedHoveredActor
// ()

void UKSPingManager::UpdateCachedHoveredActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.UpdateCachedHoveredActor");

	UKSPingManager_UpdateCachedHoveredActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ThrottleDetectionPeriodExpired
// ()

void UKSPingManager::ThrottleDetectionPeriodExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ThrottleDetectionPeriodExpired");

	UKSPingManager_ThrottleDetectionPeriodExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ShowOutline
// ()

void UKSPingManager::ShowOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ShowOutline");

	UKSPingManager_ShowOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ServerSendVoiceLineOnly
// ()

void UKSPingManager::ServerSendVoiceLineOnly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ServerSendVoiceLineOnly");

	UKSPingManager_ServerSendVoiceLineOnly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ServerRemovePing
// ()

void UKSPingManager::ServerRemovePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ServerRemovePing");

	UKSPingManager_ServerRemovePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ServerPingRequest
// ()

void UKSPingManager::ServerPingRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ServerPingRequest");

	UKSPingManager_ServerPingRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ServerChangePing
// ()

void UKSPingManager::ServerChangePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ServerChangePing");

	UKSPingManager_ServerChangePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ResetCachedHoveredActor
// ()

void UKSPingManager::ResetCachedHoveredActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ResetCachedHoveredActor");

	UKSPingManager_ResetCachedHoveredActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.RemovePing
// ()

void UKSPingManager::RemovePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.RemovePing");

	UKSPingManager_RemovePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.RemoveInternalPingInfo
// ()

void UKSPingManager::RemoveInternalPingInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.RemoveInternalPingInfo");

	UKSPingManager_RemoveInternalPingInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.RemoveHoveredPing
// ()

void UKSPingManager::RemoveHoveredPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.RemoveHoveredPing");

	UKSPingManager_RemoveHoveredPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.OnPingExpired
// ()

void UKSPingManager::OnPingExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.OnPingExpired");

	UKSPingManager_OnPingExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.IsSelfPing
// ()

void UKSPingManager::IsSelfPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.IsSelfPing");

	UKSPingManager_IsSelfPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.IsInvisiblePingType
// ()

void UKSPingManager::IsInvisiblePingType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.IsInvisiblePingType");

	UKSPingManager_IsInvisiblePingType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.HideOutline
// ()

void UKSPingManager::HideOutline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.HideOutline");

	UKSPingManager_HideOutline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.GetPingTypesToCheck
// ()

void UKSPingManager::GetPingTypesToCheck()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetPingTypesToCheck");

	UKSPingManager_GetPingTypesToCheck_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.GetPingLifetimes
// ()

void UKSPingManager::GetPingLifetimes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetPingLifetimes");

	UKSPingManager_GetPingLifetimes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.GetPingInfoByIdAndPlayer
// ()

void UKSPingManager::GetPingInfoByIdAndPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetPingInfoByIdAndPlayer");

	UKSPingManager_GetPingInfoByIdAndPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.GetPingIdForDisplayId
// ()

void UKSPingManager::GetPingIdForDisplayId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetPingIdForDisplayId");

	UKSPingManager_GetPingIdForDisplayId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.GetDisplayIdForPingId
// ()

void UKSPingManager::GetDisplayIdForPingId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GetDisplayIdForPingId");

	UKSPingManager_GetDisplayIdForPingId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.GameRoundOver
// ()

void UKSPingManager::GameRoundOver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.GameRoundOver");

	UKSPingManager_GameRoundOver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.DoesWorldSelfPingFollowPlayer
// ()

void UKSPingManager::DoesWorldSelfPingFollowPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.DoesWorldSelfPingFollowPlayer");

	UKSPingManager_DoesWorldSelfPingFollowPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ClientPingRejected
// ()

void UKSPingManager::ClientPingRejected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ClientPingRejected");

	UKSPingManager_ClientPingRejected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ClearPingsOfType
// ()

void UKSPingManager::ClearPingsOfType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ClearPingsOfType");

	UKSPingManager_ClearPingsOfType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ClearAllPingsForPlayer
// ()

void UKSPingManager::ClearAllPingsForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ClearAllPingsForPlayer");

	UKSPingManager_ClearAllPingsForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.CheckIfFriendlyCharacter
// ()

void UKSPingManager::CheckIfFriendlyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.CheckIfFriendlyCharacter");

	UKSPingManager_CheckIfFriendlyCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.CheckIfEnemyCharacter
// ()

void UKSPingManager::CheckIfEnemyCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.CheckIfEnemyCharacter");

	UKSPingManager_CheckIfEnemyCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.CheckIfDeployable
// ()

void UKSPingManager::CheckIfDeployable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.CheckIfDeployable");

	UKSPingManager_CheckIfDeployable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.ChangePing
// ()

void UKSPingManager::ChangePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.ChangePing");

	UKSPingManager_ChangePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptRemovePing
// ()

void UKSPingManager::AttemptRemovePing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptRemovePing");

	UKSPingManager_AttemptRemovePing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptPing2D
// ()

void UKSPingManager::AttemptPing2D()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptPing2D");

	UKSPingManager_AttemptPing2D_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptManualPing
// ()

void UKSPingManager::AttemptManualPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptManualPing");

	UKSPingManager_AttemptManualPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptContextualPing
// ()

void UKSPingManager::AttemptContextualPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptContextualPing");

	UKSPingManager_AttemptContextualPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AttemptCommunicationPing
// ()

void UKSPingManager::AttemptCommunicationPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AttemptCommunicationPing");

	UKSPingManager_AttemptCommunicationPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AddPing
// ()

void UKSPingManager::AddPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AddPing");

	UKSPingManager_AddPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AddInternalPingInfo
// ()

void UKSPingManager::AddInternalPingInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AddInternalPingInfo");

	UKSPingManager_AddInternalPingInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPingManager.AddHoveredPing
// ()

void UKSPingManager::AddHoveredPing()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPingManager.AddHoveredPing");

	UKSPingManager_AddHoveredPing_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivityInstance.RerollChallenge
// ()

void UKSChallengeActivityInstance::RerollChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivityInstance.RerollChallenge");

	UKSChallengeActivityInstance_RerollChallenge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivityInstance.PromptRerollChallenge
// ()

void UKSChallengeActivityInstance::PromptRerollChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivityInstance.PromptRerollChallenge");

	UKSChallengeActivityInstance_PromptRerollChallenge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivityInstance.IsChallengeActive
// ()

void UKSChallengeActivityInstance::IsChallengeActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivityInstance.IsChallengeActive");

	UKSChallengeActivityInstance_IsChallengeActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivityInstance.GetDisplayProgess
// ()

void UKSChallengeActivityInstance::GetDisplayProgess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivityInstance.GetDisplayProgess");

	UKSChallengeActivityInstance_GetDisplayProgess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivityInstance.GetDisplayCompletionProgress
// ()

void UKSChallengeActivityInstance::GetDisplayCompletionProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivityInstance.GetDisplayCompletionProgress");

	UKSChallengeActivityInstance_GetDisplayCompletionProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivityInstance.CanRerollChallenge
// ()

void UKSChallengeActivityInstance::CanRerollChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivityInstance.CanRerollChallenge");

	UKSChallengeActivityInstance_CanRerollChallenge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivity.IsDailyChallenge
// ()

void UKSChallengeActivity::IsDailyChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivity.IsDailyChallenge");

	UKSChallengeActivity_IsDailyChallenge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivity.InitNewlyCreatedChallengeActivity
// ()

void UKSChallengeActivity::InitNewlyCreatedChallengeActivity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivity.InitNewlyCreatedChallengeActivity");

	UKSChallengeActivity_InitNewlyCreatedChallengeActivity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSChallengeActivity.GetRerollLootId
// ()

void UKSChallengeActivity::GetRerollLootId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSChallengeActivity.GetRerollLootId");

	UKSChallengeActivity_GetRerollLootId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerChallengesManager.RequestNewChallenge
// ()

void UKSPlayerChallengesManager::RequestNewChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerChallengesManager.RequestNewChallenge");

	UKSPlayerChallengesManager_RequestNewChallenge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerChallengesManager.OnDailyChallengeTimerRefresh
// ()

void UKSPlayerChallengesManager::OnDailyChallengeTimerRefresh()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerChallengesManager.OnDailyChallengeTimerRefresh");

	UKSPlayerChallengesManager_OnDailyChallengeTimerRefresh_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerChallengesManager.OnChallengeProgressUpdated
// ()

void UKSPlayerChallengesManager::OnChallengeProgressUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerChallengesManager.OnChallengeProgressUpdated");

	UKSPlayerChallengesManager_OnChallengeProgressUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerChallengesManager.GetSecondsTillNewDailyChallenge
// ()

void UKSPlayerChallengesManager::GetSecondsTillNewDailyChallenge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerChallengesManager.GetSecondsTillNewDailyChallenge");

	UKSPlayerChallengesManager_GetSecondsTillNewDailyChallenge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerChallengesManager.GetActiveDailyChallenges
// ()

void UKSPlayerChallengesManager::GetActiveDailyChallenges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerChallengesManager.GetActiveDailyChallenges");

	UKSPlayerChallengesManager_GetActiveDailyChallenges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInput.DoesInputTypeSupportChords
// ()

void UKSPlayerInput::DoesInputTypeSupportChords()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInput.DoesInputTypeSupportChords");

	UKSPlayerInput_DoesInputTypeSupportChords_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemUpdatedCallbacks
// ()

void UKSPlayerInventoryHelper::RemoveAllItemUpdatedCallbacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemUpdatedCallbacks");

	UKSPlayerInventoryHelper_RemoveAllItemUpdatedCallbacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemTypeUpdatedCallbacks
// ()

void UKSPlayerInventoryHelper::RemoveAllItemTypeUpdatedCallbacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.RemoveAllItemTypeUpdatedCallbacks");

	UKSPlayerInventoryHelper_RemoveAllItemTypeUpdatedCallbacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.GetCountByType
// ()

void UKSPlayerInventoryHelper::GetCountByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.GetCountByType");

	UKSPlayerInventoryHelper_GetCountByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.GetCount
// ()

void UKSPlayerInventoryHelper::GetCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.GetCount");

	UKSPlayerInventoryHelper_GetCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.GetAcquiredTime
// ()

void UKSPlayerInventoryHelper::GetAcquiredTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.GetAcquiredTime");

	UKSPlayerInventoryHelper_GetAcquiredTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.AddItemUpdatedCallback
// ()

void UKSPlayerInventoryHelper::AddItemUpdatedCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.AddItemUpdatedCallback");

	UKSPlayerInventoryHelper_AddItemUpdatedCallback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerInventoryHelper.AddItemTypeUpdatedCallback
// ()

void UKSPlayerInventoryHelper::AddItemTypeUpdatedCallback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerInventoryHelper.AddItemTypeUpdatedCallback");

	UKSPlayerInventoryHelper_AddItemTypeUpdatedCallback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.IsSingleInstanceStack
// ()

void UKSPlayerMod::IsSingleInstanceStack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.IsSingleInstanceStack");

	UKSPlayerMod_IsSingleInstanceStack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.IsPerk
// ()

void UKSPlayerMod::IsPerk()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.IsPerk");

	UKSPlayerMod_IsPerk_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.IsModTemporary
// ()

void UKSPlayerMod::IsModTemporary()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.IsModTemporary");

	UKSPlayerMod_IsModTemporary_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.IsInstanceReplicated
// ()

void UKSPlayerMod::IsInstanceReplicated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.IsInstanceReplicated");

	UKSPlayerMod_IsInstanceReplicated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetTriggerEvents
// ()

void UKSPlayerMod::GetTriggerEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetTriggerEvents");

	UKSPlayerMod_GetTriggerEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetPerkCategory
// ()

void UKSPlayerMod::GetPerkCategory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetPerkCategory");

	UKSPlayerMod_GetPerkCategory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetModUnlockTier
// ()

void UKSPlayerMod::GetModUnlockTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetModUnlockTier");

	UKSPlayerMod_GetModUnlockTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetModType
// ()

void UKSPlayerMod::GetModType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetModType");

	UKSPlayerMod_GetModType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetModInteraction
// ()

void UKSPlayerMod::GetModInteraction()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetModInteraction");

	UKSPlayerMod_GetModInteraction_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetFunctionalClass
// ()

void UKSPlayerMod::GetFunctionalClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetFunctionalClass");

	UKSPlayerMod_GetFunctionalClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod.GetEffectCategories
// ()

void UKSPlayerMod::GetEffectCategories()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod.GetEffectCategories");

	UKSPlayerMod_GetEffectCategories_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetRequiredCharge
// ()

void UKSPlayerMod_Activated::GetRequiredCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetRequiredCharge");

	UKSPlayerMod_Activated_GetRequiredCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetRefundFactor
// ()

void UKSPlayerMod_Activated::GetRefundFactor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetRefundFactor");

	UKSPlayerMod_Activated_GetRefundFactor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetMaximumCharge
// ()

void UKSPlayerMod_Activated::GetMaximumCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetMaximumCharge");

	UKSPlayerMod_Activated_GetMaximumCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetDefaultCharge
// ()

void UKSPlayerMod_Activated::GetDefaultCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetDefaultCharge");

	UKSPlayerMod_Activated_GetDefaultCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetBuffs
// ()

void UKSPlayerMod_Activated::GetBuffs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetBuffs");

	UKSPlayerMod_Activated_GetBuffs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilitySetupDuration
// ()

void UKSPlayerMod_Activated::GetAbilitySetupDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilitySetupDuration");

	UKSPlayerMod_Activated_GetAbilitySetupDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilityRecoveryDuration
// ()

void UKSPlayerMod_Activated::GetAbilityRecoveryDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilityRecoveryDuration");

	UKSPlayerMod_Activated_GetAbilityRecoveryDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilityEndWarningTime
// ()

void UKSPlayerMod_Activated::GetAbilityEndWarningTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilityEndWarningTime");

	UKSPlayerMod_Activated_GetAbilityEndWarningTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_Activated.GetAbilityDuration
// ()

void UKSPlayerMod_Activated::GetAbilityDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_Activated.GetAbilityDuration");

	UKSPlayerMod_Activated_GetAbilityDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_ActivatedTarget.GetTargetBuffs
// ()

void UKSPlayerMod_ActivatedTarget::GetTargetBuffs()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ActivatedTarget.GetTargetBuffs");

	UKSPlayerMod_ActivatedTarget_GetTargetBuffs_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngleFromEnemies
// ()

void UKSPlayerMod_AngleConfig::CheckDistanceAndAngleFromEnemies()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngleFromEnemies");

	UKSPlayerMod_AngleConfig_CheckDistanceAndAngleFromEnemies_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngle
// ()

void UKSPlayerMod_AngleConfig::CheckDistanceAndAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_AngleConfig.CheckDistanceAndAngle");

	UKSPlayerMod_AngleConfig_CheckDistanceAndAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_AngleConfig.CheckAngle
// ()

void UKSPlayerMod_AngleConfig::CheckAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_AngleConfig.CheckAngle");

	UKSPlayerMod_AngleConfig_CheckAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_ApplyModOnEvent.RemoveMod
// ()

void UKSPlayerMod_ApplyModOnEvent::RemoveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ApplyModOnEvent.RemoveMod");

	UKSPlayerMod_ApplyModOnEvent_RemoveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_ApplyModOnEvent.GetModDuration
// ()

void UKSPlayerMod_ApplyModOnEvent::GetModDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ApplyModOnEvent.GetModDuration");

	UKSPlayerMod_ApplyModOnEvent_GetModDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_ApplyModOnEvent.ApplyMod
// ()

void UKSPlayerMod_ApplyModOnEvent::ApplyMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_ApplyModOnEvent.ApplyMod");

	UKSPlayerMod_ApplyModOnEvent_ApplyMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_DamageTaken.GetAffectedDamageCategories
// ()

void UKSPlayerMod_DamageTaken::GetAffectedDamageCategories()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_DamageTaken.GetAffectedDamageCategories");

	UKSPlayerMod_DamageTaken_GetAffectedDamageCategories_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveItemOnActivation.GetGivenItem
// ()

void UKSPlayerMod_GiveItemOnActivation::GetGivenItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveItemOnActivation.GetGivenItem");

	UKSPlayerMod_GiveItemOnActivation_GetGivenItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveItemOnEvent.GiveItem
// ()

void UKSPlayerMod_GiveItemOnEvent::GiveItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveItemOnEvent.GiveItem");

	UKSPlayerMod_GiveItemOnEvent_GiveItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveItemOnEvent.GetItemToGive
// ()

void UKSPlayerMod_GiveItemOnEvent::GetItemToGive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveItemOnEvent.GetItemToGive");

	UKSPlayerMod_GiveItemOnEvent_GetItemToGive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetReclaimCharge
// ()

void UKSPlayerMod_GiveWeaponConfig::GetReclaimCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetReclaimCharge");

	UKSPlayerMod_GiveWeaponConfig_GetReclaimCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetRadius
// ()

void UKSPlayerMod_GiveWeaponConfig::GetRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetRadius");

	UKSPlayerMod_GiveWeaponConfig_GetRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetAllowedActiveDeployableCount
// ()

void UKSPlayerMod_GiveWeaponConfig::GetAllowedActiveDeployableCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveWeaponConfig.GetAllowedActiveDeployableCount");

	UKSPlayerMod_GiveWeaponConfig_GetAllowedActiveDeployableCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_GiveWeaponConfig.CanActivateInAir
// ()

void UKSPlayerMod_GiveWeaponConfig::CanActivateInAir()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_GiveWeaponConfig.CanActivateInAir");

	UKSPlayerMod_GiveWeaponConfig_CanActivateInAir_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealUpTo
// ()

void UKSPlayerMod_HealOnEvent::GetHealUpTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealUpTo");

	UKSPlayerMod_HealOnEvent_GetHealUpTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealTickCount
// ()

void UKSPlayerMod_HealOnEvent::GetHealTickCount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealTickCount");

	UKSPlayerMod_HealOnEvent_GetHealTickCount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthPercentage
// ()

void UKSPlayerMod_HealOnEvent::GetHealthPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthPercentage");

	UKSPlayerMod_HealOnEvent_GetHealthPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthAmount
// ()

void UKSPlayerMod_HealOnEvent::GetHealthAmount()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealthAmount");

	UKSPlayerMod_HealOnEvent_GetHealthAmount_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealPeriod
// ()

void UKSPlayerMod_HealOnEvent::GetHealPeriod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealPeriod");

	UKSPlayerMod_HealOnEvent_GetHealPeriod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealDelay
// ()

void UKSPlayerMod_HealOnEvent::GetHealDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealDelay");

	UKSPlayerMod_HealOnEvent_GetHealDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetHealAsPercentage
// ()

void UKSPlayerMod_HealOnEvent::GetHealAsPercentage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetHealAsPercentage");

	UKSPlayerMod_HealOnEvent_GetHealAsPercentage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.GetFirstTickImmediately
// ()

void UKSPlayerMod_HealOnEvent::GetFirstTickImmediately()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.GetFirstTickImmediately");

	UKSPlayerMod_HealOnEvent_GetFirstTickImmediately_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.ApplyOverheal
// ()

void UKSPlayerMod_HealOnEvent::ApplyOverheal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.ApplyOverheal");

	UKSPlayerMod_HealOnEvent_ApplyOverheal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_HealOnEvent.ApplyHeal
// ()

void UKSPlayerMod_HealOnEvent::ApplyHeal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_HealOnEvent.ApplyHeal");

	UKSPlayerMod_HealOnEvent_ApplyHeal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMod_PickupRange.GetPickupRadius
// ()

void UKSPlayerMod_PickupRange::GetPickupRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMod_PickupRange.GetPickupRadius");

	UKSPlayerMod_PickupRange_GetPickupRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInst_WeaponAttachment.WeaponAddedToOwnerInventory
// ()

void UKSPlayerModInst_WeaponAttachment::WeaponAddedToOwnerInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInst_WeaponAttachment.WeaponAddedToOwnerInventory");

	UKSPlayerModInst_WeaponAttachment_WeaponAddedToOwnerInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentRemoved
// ()

void UKSPlayerModInst_WeaponAttachment::OnAttachmentRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentRemoved");

	UKSPlayerModInst_WeaponAttachment_OnAttachmentRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGivenSuccess
// ()

void UKSPlayerModInst_WeaponAttachment::OnAttachmentGivenSuccess()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGivenSuccess");

	UKSPlayerModInst_WeaponAttachment_OnAttachmentGivenSuccess_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGiven
// ()

void UKSPlayerModInst_WeaponAttachment::OnAttachmentGiven()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerModInst_WeaponAttachment.OnAttachmentGiven");

	UKSPlayerModInst_WeaponAttachment_OnAttachmentGiven_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWidgetInfoActor.OnHUDSetup
// ()

void AKSWidgetInfoActor::OnHUDSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWidgetInfoActor.OnHUDSetup");

	AKSWidgetInfoActor_OnHUDSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ZoneLeftByPlayer
// ()

void AKSPlayerShop::ZoneLeftByPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ZoneLeftByPlayer");

	AKSPlayerShop_ZoneLeftByPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ZoneEnteredByPlayer
// ()

void AKSPlayerShop::ZoneEnteredByPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ZoneEnteredByPlayer");

	AKSPlayerShop_ZoneEnteredByPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.Undo
// ()

void AKSPlayerShop::Undo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.Undo");

	AKSPlayerShop_Undo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.TryToSetItemActive
// ()

void AKSPlayerShop::TryToSetItemActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.TryToSetItemActive");

	AKSPlayerShop_TryToSetItemActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.TryToPurchaseItem
// ()

void AKSPlayerShop::TryToPurchaseItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.TryToPurchaseItem");

	AKSPlayerShop_TryToPurchaseItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ToggleShop
// ()

void AKSPlayerShop::ToggleShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ToggleShop");

	AKSPlayerShop_ToggleShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ServerSetItemActive
// ()

void AKSPlayerShop::ServerSetItemActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ServerSetItemActive");

	AKSPlayerShop_ServerSetItemActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ServerAttemptRefund
// ()

void AKSPlayerShop::ServerAttemptRefund()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ServerAttemptRefund");

	AKSPlayerShop_ServerAttemptRefund_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ServerAttemptPurchase
// ()

void AKSPlayerShop::ServerAttemptPurchase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ServerAttemptPurchase");

	AKSPlayerShop_ServerAttemptPurchase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OpenShop
// ()

void AKSPlayerShop::OpenShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OpenShop");

	AKSPlayerShop_OpenShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnRep_bAvailable
// ()

void AKSPlayerShop::OnRep_bAvailable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnRep_bAvailable");

	AKSPlayerShop_OnRep_bAvailable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnPlayerScoreChanged
// ()

void AKSPlayerShop::OnPlayerScoreChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnPlayerScoreChanged");

	AKSPlayerShop_OnPlayerScoreChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnPlayerJobChanged
// ()

void AKSPlayerShop::OnPlayerJobChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnPlayerJobChanged");

	AKSPlayerShop_OnPlayerJobChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.OnOwnerDestroyed
// ()

void AKSPlayerShop::OnOwnerDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.OnOwnerDestroyed");

	AKSPlayerShop_OnOwnerDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.NotifyShopItemRefunded
// ()

void AKSPlayerShop::NotifyShopItemRefunded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.NotifyShopItemRefunded");

	AKSPlayerShop_NotifyShopItemRefunded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.NotifyShopItemPurchased
// ()

void AKSPlayerShop::NotifyShopItemPurchased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.NotifyShopItemPurchased");

	AKSPlayerShop_NotifyShopItemPurchased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.NotifyShopItemChanged
// ()

void AKSPlayerShop::NotifyShopItemChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.NotifyShopItemChanged");

	AKSPlayerShop_NotifyShopItemChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.InitializeShopItems
// ()

void AKSPlayerShop::InitializeShopItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.InitializeShopItems");

	AKSPlayerShop_InitializeShopItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.GetShopItemByType
// ()

void AKSPlayerShop::GetShopItemByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.GetShopItemByType");

	AKSPlayerShop_GetShopItemByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.GetShopAvailability
// ()

void AKSPlayerShop::GetShopAvailability()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.GetShopAvailability");

	AKSPlayerShop_GetShopAvailability_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.GetPriceOfItem
// ()

void AKSPlayerShop::GetPriceOfItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.GetPriceOfItem");

	AKSPlayerShop_GetPriceOfItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.CloseShop
// ()

void AKSPlayerShop::CloseShop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.CloseShop");

	AKSPlayerShop_CloseShop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ClientRefundAcknowledge
// ()

void AKSPlayerShop::ClientRefundAcknowledge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ClientRefundAcknowledge");

	AKSPlayerShop_ClientRefundAcknowledge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.ClientPurchaseAcknowledge
// ()

void AKSPlayerShop::ClientPurchaseAcknowledge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.ClientPurchaseAcknowledge");

	AKSPlayerShop_ClientPurchaseAcknowledge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.CanRefundItemNow
// ()

void AKSPlayerShop::CanRefundItemNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.CanRefundItemNow");

	AKSPlayerShop_CanRefundItemNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShop.CanPurchaseItemNow
// ()

void AKSPlayerShop::CanPurchaseItemNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShop.CanPurchaseItemNow");

	AKSPlayerShop_CanPurchaseItemNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShopHistoryComponent.ClearTransactionHistory
// ()

void UKSPlayerShopHistoryComponent::ClearTransactionHistory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShopHistoryComponent.ClearTransactionHistory");

	UKSPlayerShopHistoryComponent_ClearTransactionHistory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShopZone.ZoneLeftByPlayer
// ()

void AKSPlayerShopZone::ZoneLeftByPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShopZone.ZoneLeftByPlayer");

	AKSPlayerShopZone_ZoneLeftByPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShopZone.ZoneEnteredByPlayer
// ()

void AKSPlayerShopZone::ZoneEnteredByPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShopZone.ZoneEnteredByPlayer");

	AKSPlayerShopZone_ZoneEnteredByPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShopZone.OnPlayerStateDestroyed
// ()

void AKSPlayerShopZone::OnPlayerStateDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShopZone.OnPlayerStateDestroyed");

	AKSPlayerShopZone_OnPlayerStateDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShotListener.OnKSGameStateDestroyed
// ()

void UKSPlayerShotListener::OnKSGameStateDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShotListener.OnKSGameStateDestroyed");

	UKSPlayerShotListener_OnKSGameStateDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShotListener.ClientRecieveShotInfo
// ()

void UKSPlayerShotListener::ClientRecieveShotInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShotListener.ClientRecieveShotInfo");

	UKSPlayerShotListener_ClientRecieveShotInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerShotListener.Authority_ProcessShotInfo
// ()

void UKSPlayerShotListener::Authority_ProcessShotInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerShotListener.Authority_ProcessShotInfo");

	UKSPlayerShotListener_Authority_ProcessShotInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStart.SetSideNum
// ()

void AKSPlayerStart::SetSideNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.SetSideNum");

	AKSPlayerStart_SetSideNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStart.Init
// ()

void AKSPlayerStart::Init()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.Init");

	AKSPlayerStart_Init_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStart.GetSideNum
// ()

void AKSPlayerStart::GetSideNum()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.GetSideNum");

	AKSPlayerStart_GetSideNum_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStart.CharacterLoadoutRestored
// ()

void AKSPlayerStart::CharacterLoadoutRestored()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStart.CharacterLoadoutRestored");

	AKSPlayerStart_CharacterLoadoutRestored_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.UpdatePollVotes
// ()

void AKSPlayerState::UpdatePollVotes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.UpdatePollVotes");

	AKSPlayerState_UpdatePollVotes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.TryToBroadCastUIRelevantInfoHasChanged
// ()

void AKSPlayerState::TryToBroadCastUIRelevantInfoHasChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.TryToBroadCastUIRelevantInfoHasChanged");

	AKSPlayerState_TryToBroadCastUIRelevantInfoHasChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.SpendCash
// ()

void AKSPlayerState::SpendCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SpendCash");

	AKSPlayerState_SpendCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.SpawnedDropDestroyed
// ()

void AKSPlayerState::SpawnedDropDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SpawnedDropDestroyed");

	AKSPlayerState_SpawnedDropDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.SetMoney
// ()

void AKSPlayerState::SetMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SetMoney");

	AKSPlayerState_SetMoney_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ServerPlayerProposePoll
// ()

void AKSPlayerState::ServerPlayerProposePoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ServerPlayerProposePoll");

	AKSPlayerState_ServerPlayerProposePoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ServerPlayerCastVote
// ()

void AKSPlayerState::ServerPlayerCastVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ServerPlayerCastVote");

	AKSPlayerState_ServerPlayerCastVote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.SelectActiveMod
// ()

void AKSPlayerState::SelectActiveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.SelectActiveMod");

	AKSPlayerState_SelectActiveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RespawnTimerTick
// ()

void AKSPlayerState::RespawnTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RespawnTimerTick");

	AKSPlayerState_RespawnTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RespawnTimerComplete
// ()

void AKSPlayerState::RespawnTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RespawnTimerComplete");

	AKSPlayerState_RespawnTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RespawnTimerActive
// ()

void AKSPlayerState::RespawnTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RespawnTimerActive");

	AKSPlayerState_RespawnTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ResetElimination
// ()

void AKSPlayerState::ResetElimination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ResetElimination");

	AKSPlayerState_ResetElimination_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.RemoveMod
// ()

void AKSPlayerState::RemoveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.RemoveMod");

	AKSPlayerState_RemoveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.PollEnded
// ()

void AKSPlayerState::PollEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.PollEnded");

	AKSPlayerState_PollEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.PlayerProposePoll
// ()

void AKSPlayerState::PlayerProposePoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.PlayerProposePoll");

	AKSPlayerState_PlayerProposePoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.PlayerCastVote
// ()

void AKSPlayerState::PlayerCastVote()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.PlayerCastVote");

	AKSPlayerState_PlayerCastVote_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnTeamUpdated
// ()

void AKSPlayerState::OnTeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnTeamUpdated");

	AKSPlayerState_OnTeamUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnReverseFriendlyFireEnabled
// ()

void AKSPlayerState::OnReverseFriendlyFireEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnReverseFriendlyFireEnabled");

	AKSPlayerState_OnReverseFriendlyFireEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_TotalCashEarned
// ()

void AKSPlayerState::OnRep_TotalCashEarned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_TotalCashEarned");

	AKSPlayerState_OnRep_TotalCashEarned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Specialties
// ()

void AKSPlayerState::OnRep_Specialties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Specialties");

	AKSPlayerState_OnRep_Specialties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_SkinItem
// ()

void AKSPlayerState::OnRep_SkinItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_SkinItem");

	AKSPlayerState_OnRep_SkinItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_RespawnTimer
// ()

void AKSPlayerState::OnRep_RespawnTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_RespawnTimer");

	AKSPlayerState_OnRep_RespawnTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_RespawnTickets
// ()

void AKSPlayerState::OnRep_RespawnTickets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_RespawnTickets");

	AKSPlayerState_OnRep_RespawnTickets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_PlayerType
// ()

void AKSPlayerState::OnRep_PlayerType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_PlayerType");

	AKSPlayerState_OnRep_PlayerType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Money
// ()

void AKSPlayerState::OnRep_Money()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Money");

	AKSPlayerState_OnRep_Money_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_MctsNetId
// ()

void AKSPlayerState::OnRep_MctsNetId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_MctsNetId");

	AKSPlayerState_OnRep_MctsNetId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_LoadoutClass
// ()

void AKSPlayerState::OnRep_LoadoutClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_LoadoutClass");

	AKSPlayerState_OnRep_LoadoutClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_JobMasteryXpLevel
// ()

void AKSPlayerState::OnRep_JobMasteryXpLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_JobMasteryXpLevel");

	AKSPlayerState_OnRep_JobMasteryXpLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_JobItem
// ()

void AKSPlayerState::OnRep_JobItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_JobItem");

	AKSPlayerState_OnRep_JobItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_HasVoted
// ()

void AKSPlayerState::OnRep_HasVoted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_HasVoted");

	AKSPlayerState_OnRep_HasVoted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Gender
// ()

void AKSPlayerState::OnRep_Gender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Gender");

	AKSPlayerState_OnRep_Gender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Eliminated
// ()

void AKSPlayerState::OnRep_Eliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Eliminated");

	AKSPlayerState_OnRep_Eliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Downed
// ()

void AKSPlayerState::OnRep_Downed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Downed");

	AKSPlayerState_OnRep_Downed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_DisallowGiveUpTimer
// ()

void AKSPlayerState::OnRep_DisallowGiveUpTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_DisallowGiveUpTimer");

	AKSPlayerState_OnRep_DisallowGiveUpTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_CurrentPollType
// ()

void AKSPlayerState::OnRep_CurrentPollType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_CurrentPollType");

	AKSPlayerState_OnRep_CurrentPollType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_Cash
// ()

void AKSPlayerState::OnRep_Cash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_Cash");

	AKSPlayerState_OnRep_Cash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnRep_CachedPollData
// ()

void AKSPlayerState::OnRep_CachedPollData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnRep_CachedPollData");

	AKSPlayerState_OnRep_CachedPollData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnJobMasteryInventoryUpdated
// ()

void AKSPlayerState::OnJobMasteryInventoryUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnJobMasteryInventoryUpdated");

	AKSPlayerState_OnJobMasteryInventoryUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.OnDeathDrop
// ()

void AKSPlayerState::OnDeathDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.OnDeathDrop");

	AKSPlayerState_OnDeathDrop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.NotifyScoreChange
// ()

void AKSPlayerState::NotifyScoreChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.NotifyScoreChange");

	AKSPlayerState_NotifyScoreChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.NotifyCashChange
// ()

void AKSPlayerState::NotifyCashChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.NotifyCashChange");

	AKSPlayerState_NotifyCashChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.LoadoutSetSkin
// ()

void AKSPlayerState::LoadoutSetSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.LoadoutSetSkin");

	AKSPlayerState_LoadoutSetSkin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsWaitingForGiveUp
// ()

void AKSPlayerState::IsWaitingForGiveUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsWaitingForGiveUp");

	AKSPlayerState_IsWaitingForGiveUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsUIRelevant
// ()

void AKSPlayerState::IsUIRelevant()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsUIRelevant");

	AKSPlayerState_IsUIRelevant_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsReverseFriendlyFireEnabled
// ()

void AKSPlayerState::IsReverseFriendlyFireEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsReverseFriendlyFireEnabled");

	AKSPlayerState_IsReverseFriendlyFireEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsRespawning
// ()

void AKSPlayerState::IsRespawning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsRespawning");

	AKSPlayerState_IsRespawning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsPremiumBoosted
// ()

void AKSPlayerState::IsPremiumBoosted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsPremiumBoosted");

	AKSPlayerState_IsPremiumBoosted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsPollInProgress
// ()

void AKSPlayerState::IsPollInProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsPollInProgress");

	AKSPlayerState_IsPollInProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsPlayer
// ()

void AKSPlayerState::IsPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsPlayer");

	AKSPlayerState_IsPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsLossPreventionEnabled
// ()

void AKSPlayerState::IsLossPreventionEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsLossPreventionEnabled");

	AKSPlayerState_IsLossPreventionEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsInPlay
// ()

void AKSPlayerState::IsInPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsInPlay");

	AKSPlayerState_IsInPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsInParty
// ()

void AKSPlayerState::IsInParty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsInParty");

	AKSPlayerState_IsInParty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsEliminated
// ()

void AKSPlayerState::IsEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsEliminated");

	AKSPlayerState_IsEliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.IsDowned
// ()

void AKSPlayerState::IsDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.IsDowned");

	AKSPlayerState_IsDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.HasRole
// ()

void AKSPlayerState::HasRole()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.HasRole");

	AKSPlayerState_HasRole_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.HasModAny
// ()

void AKSPlayerState::HasModAny()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.HasModAny");

	AKSPlayerState_HasModAny_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.HasMod
// ()

void AKSPlayerState::HasMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.HasMod");

	AKSPlayerState_HasMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.HasHideTarget
// ()

void AKSPlayerState::HasHideTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.HasHideTarget");

	AKSPlayerState_HasHideTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GiveModInstance
// ()

void AKSPlayerState::GiveModInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GiveModInstance");

	AKSPlayerState_GiveModInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GiveMod
// ()

void AKSPlayerState::GiveMod()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GiveMod");

	AKSPlayerState_GiveMod_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetTotalCashEarned
// ()

void AKSPlayerState::GetTotalCashEarned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetTotalCashEarned");

	AKSPlayerState_GetTotalCashEarned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetTimeUntilGiveUpAllowed
// ()

void AKSPlayerState::GetTimeUntilGiveUpAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetTimeUntilGiveUpAllowed");

	AKSPlayerState_GetTimeUntilGiveUpAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetSpecialties
// ()

void AKSPlayerState::GetSpecialties()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetSpecialties");

	AKSPlayerState_GetSpecialties_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetSkinItem
// ()

void AKSPlayerState::GetSkinItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetSkinItem");

	AKSPlayerState_GetSkinItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetScore
// ()

void AKSPlayerState::GetScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetScore");

	AKSPlayerState_GetScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRevives
// ()

void AKSPlayerState::GetRevives()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRevives");

	AKSPlayerState_GetRevives_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRespawnTickets
// ()

void AKSPlayerState::GetRespawnTickets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRespawnTickets");

	AKSPlayerState_GetRespawnTickets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRemainingRespawnTime
// ()

void AKSPlayerState::GetRemainingRespawnTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRemainingRespawnTime");

	AKSPlayerState_GetRemainingRespawnTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRankedXpWinBaseValue
// ()

void AKSPlayerState::GetRankedXpWinBaseValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRankedXpWinBaseValue");

	AKSPlayerState_GetRankedXpWinBaseValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRankedXpMinBonusClamp
// ()

void AKSPlayerState::GetRankedXpMinBonusClamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRankedXpMinBonusClamp");

	AKSPlayerState_GetRankedXpMinBonusClamp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRankedXpMaxBonusClamp
// ()

void AKSPlayerState::GetRankedXpMaxBonusClamp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRankedXpMaxBonusClamp");

	AKSPlayerState_GetRankedXpMaxBonusClamp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRankedXpLossBaseValue
// ()

void AKSPlayerState::GetRankedXpLossBaseValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRankedXpLossBaseValue");

	AKSPlayerState_GetRankedXpLossBaseValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetRankDifferenceMultiplier
// ()

void AKSPlayerState::GetRankDifferenceMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetRankDifferenceMultiplier");

	AKSPlayerState_GetRankDifferenceMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetPlayerInfo
// ()

void AKSPlayerState::GetPlayerInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetPlayerInfo");

	AKSPlayerState_GetPlayerInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetPlayerId
// ()

void AKSPlayerState::GetPlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetPlayerId");

	AKSPlayerState_GetPlayerId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetPartySize
// ()

void AKSPlayerState::GetPartySize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetPartySize");

	AKSPlayerState_GetPartySize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetModTierProgress
// ()

void AKSPlayerState::GetModTierProgress()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetModTierProgress");

	AKSPlayerState_GetModTierProgress_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetModOptionsOfTier
// ()

void AKSPlayerState::GetModOptionsOfTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetModOptionsOfTier");

	AKSPlayerState_GetModOptionsOfTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetModInstancesOfType
// ()

void AKSPlayerState::GetModInstancesOfType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetModInstancesOfType");

	AKSPlayerState_GetModInstancesOfType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetModInstances
// ()

void AKSPlayerState::GetModInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetModInstances");

	AKSPlayerState_GetModInstances_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetMmrZoneRankedLevel
// ()

void AKSPlayerState::GetMmrZoneRankedLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetMmrZoneRankedLevel");

	AKSPlayerState_GetMmrZoneRankedLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetMctsPlayerId
// ()

void AKSPlayerState::GetMctsPlayerId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetMctsPlayerId");

	AKSPlayerState_GetMctsPlayerId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetLoadoutClass
// ()

void AKSPlayerState::GetLoadoutClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetLoadoutClass");

	AKSPlayerState_GetLoadoutClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetKills
// ()

void AKSPlayerState::GetKills()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetKills");

	AKSPlayerState_GetKills_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetJobMasteryLevel
// ()

void AKSPlayerState::GetJobMasteryLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetJobMasteryLevel");

	AKSPlayerState_GetJobMasteryLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetJob
// ()

void AKSPlayerState::GetJob()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetJob");

	AKSPlayerState_GetJob_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetItemsDroppedOnDeath
// ()

void AKSPlayerState::GetItemsDroppedOnDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetItemsDroppedOnDeath");

	AKSPlayerState_GetItemsDroppedOnDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetHacks
// ()

void AKSPlayerState::GetHacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetHacks");

	AKSPlayerState_GetHacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetEliminations
// ()

void AKSPlayerState::GetEliminations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetEliminations");

	AKSPlayerState_GetEliminations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetEliminatedState
// ()

void AKSPlayerState::GetEliminatedState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetEliminatedState");

	AKSPlayerState_GetEliminatedState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetDownSpree
// ()

void AKSPlayerState::GetDownSpree()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDownSpree");

	AKSPlayerState_GetDownSpree_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetDowns
// ()

void AKSPlayerState::GetDowns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDowns");

	AKSPlayerState_GetDowns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetDistanceSprinted
// ()

void AKSPlayerState::GetDistanceSprinted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDistanceSprinted");

	AKSPlayerState_GetDistanceSprinted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetDehacks
// ()

void AKSPlayerState::GetDehacks()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDehacks");

	AKSPlayerState_GetDehacks_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetDeaths
// ()

void AKSPlayerState::GetDeaths()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetDeaths");

	AKSPlayerState_GetDeaths_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetCurrentTimePlayed
// ()

void AKSPlayerState::GetCurrentTimePlayed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCurrentTimePlayed");

	AKSPlayerState_GetCurrentTimePlayed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetCurrentRankedLevel
// ()

void AKSPlayerState::GetCurrentRankedLevel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCurrentRankedLevel");

	AKSPlayerState_GetCurrentRankedLevel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetCurrentModTier
// ()

void AKSPlayerState::GetCurrentModTier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCurrentModTier");

	AKSPlayerState_GetCurrentModTier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetCurrentCash
// ()

void AKSPlayerState::GetCurrentCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCurrentCash");

	AKSPlayerState_GetCurrentCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetCharacterOwner
// ()

void AKSPlayerState::GetCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetCharacterOwner");

	AKSPlayerState_GetCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetBonusProgressionMultiplier
// ()

void AKSPlayerState::GetBonusProgressionMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetBonusProgressionMultiplier");

	AKSPlayerState_GetBonusProgressionMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetBestCharacterOwner
// ()

void AKSPlayerState::GetBestCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetBestCharacterOwner");

	AKSPlayerState_GetBestCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetBackupCharacterOwner
// ()

void AKSPlayerState::GetBackupCharacterOwner()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetBackupCharacterOwner");

	AKSPlayerState_GetBackupCharacterOwner_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetAssists
// ()

void AKSPlayerState::GetAssists()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetAssists");

	AKSPlayerState_GetAssists_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetActiveMods
// ()

void AKSPlayerState::GetActiveMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetActiveMods");

	AKSPlayerState_GetActiveMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.GetActivatableMods
// ()

void AKSPlayerState::GetActivatableMods()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.GetActivatableMods");

	AKSPlayerState_GetActivatableMods_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.FriendlyFirePenalty
// ()

void AKSPlayerState::FriendlyFirePenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.FriendlyFirePenalty");

	AKSPlayerState_FriendlyFirePenalty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.EnterPlay
// ()

void AKSPlayerState::EnterPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.EnterPlay");

	AKSPlayerState_EnterPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.EliminatePlayer
// ()

void AKSPlayerState::EliminatePlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.EliminatePlayer");

	AKSPlayerState_EliminatePlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.EarnCash
// ()

void AKSPlayerState::EarnCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.EarnCash");

	AKSPlayerState_EarnCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.DisallowGiveUpTimerTick
// ()

void AKSPlayerState::DisallowGiveUpTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.DisallowGiveUpTimerTick");

	AKSPlayerState_DisallowGiveUpTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.DisallowGiveUpTimerComplete
// ()

void AKSPlayerState::DisallowGiveUpTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.DisallowGiveUpTimerComplete");

	AKSPlayerState_DisallowGiveUpTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.DisallowGiveUpTimerActive
// ()

void AKSPlayerState::DisallowGiveUpTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.DisallowGiveUpTimerActive");

	AKSPlayerState_DisallowGiveUpTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ClientPollProposalFailed
// ()

void AKSPlayerState::ClientPollProposalFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ClientPollProposalFailed");

	AKSPlayerState_ClientPollProposalFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ClientNotifyFriendlyFireDamageApplied
// ()

void AKSPlayerState::ClientNotifyFriendlyFireDamageApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ClientNotifyFriendlyFireDamageApplied");

	AKSPlayerState_ClientNotifyFriendlyFireDamageApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ClientNotifyExceededReverseFriendlyFireThreshold
// ()

void AKSPlayerState::ClientNotifyExceededReverseFriendlyFireThreshold()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ClientNotifyExceededReverseFriendlyFireThreshold");

	AKSPlayerState_ClientNotifyExceededReverseFriendlyFireThreshold_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ChangeMoney
// ()

void AKSPlayerState::ChangeMoney()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ChangeMoney");

	AKSPlayerState_ChangeMoney_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AnyActivatableModsActive
// ()

void AKSPlayerState::AnyActivatableModsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AnyActivatableModsActive");

	AKSPlayerState_AnyActivatableModsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddScore
// ()

void AKSPlayerState::AddScore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddScore");

	AKSPlayerState_AddScore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddRevive
// ()

void AKSPlayerState::AddRevive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddRevive");

	AKSPlayerState_AddRevive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddPerSecondCharge
// ()

void AKSPlayerState::AddPerSecondCharge()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddPerSecondCharge");

	AKSPlayerState_AddPerSecondCharge_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddKill
// ()

void AKSPlayerState::AddKill()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddKill");

	AKSPlayerState_AddKill_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddHack
// ()

void AKSPlayerState::AddHack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddHack");

	AKSPlayerState_AddHack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddElimination
// ()

void AKSPlayerState::AddElimination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddElimination");

	AKSPlayerState_AddElimination_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddDown
// ()

void AKSPlayerState::AddDown()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddDown");

	AKSPlayerState_AddDown_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddDehack
// ()

void AKSPlayerState::AddDehack()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddDehack");

	AKSPlayerState_AddDehack_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddDeath
// ()

void AKSPlayerState::AddDeath()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddDeath");

	AKSPlayerState_AddDeath_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.AddAssist
// ()

void AKSPlayerState::AddAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.AddAssist");

	AKSPlayerState_AddAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState.ActivatableModAtIndexActive
// ()

void AKSPlayerState::ActivatableModAtIndexActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState.ActivatableModAtIndexActive");

	AKSPlayerState_ActivatableModAtIndexActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState_Heist.GetSoftCash
// ()

void AKSPlayerState_Heist::GetSoftCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState_Heist.GetSoftCash");

	AKSPlayerState_Heist_GetSoftCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerState_Heist.GetHardCash
// ()

void AKSPlayerState_Heist::GetHardCash()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerState_Heist.GetHardCash");

	AKSPlayerState_Heist_GetHardCash_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStatsManager.GetActivityInstanceByType
// ()

void UKSPlayerStatsManager::GetActivityInstanceByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStatsManager.GetActivityInstanceByType");

	UKSPlayerStatsManager_GetActivityInstanceByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerStatsManager.FindActivityByType
// ()

void UKSPlayerStatsManager::FindActivityByType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerStatsManager.FindActivityByType");

	UKSPlayerStatsManager_FindActivityByType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPollBase.OnPollStarted
// ()

void UKSPollBase::OnPollStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPollBase.OnPollStarted");

	UKSPollBase_OnPollStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPollBase.OnPollPassed
// ()

void UKSPollBase::OnPollPassed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPollBase.OnPollPassed");

	UKSPollBase_OnPollPassed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPollBase.OnPollFailed
// ()

void UKSPollBase::OnPollFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPollBase.OnPollFailed");

	UKSPollBase_OnPollFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPollBase.GetNumberOfVotesToEnd
// ()

void UKSPollBase::GetNumberOfVotesToEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPollBase.GetNumberOfVotesToEnd");

	UKSPollBase_GetNumberOfVotesToEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPollBase.CanPlayerProposeThisPoll
// ()

void UKSPollBase::CanPlayerProposeThisPoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPollBase.CanPlayerProposeThisPoll");

	UKSPollBase_CanPlayerProposeThisPoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPollBase.CanGameProposeThisPoll
// ()

void UKSPollBase::CanGameProposeThisPoll()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPollBase.CanGameProposeThisPoll");

	UKSPollBase_CanGameProposeThisPoll_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.UpdateSpinRotation
// ()

void AKSProjectile::UpdateSpinRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.UpdateSpinRotation");

	AKSProjectile_UpdateSpinRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.TriggerExplosionFromHitResult
// ()

void AKSProjectile::TriggerExplosionFromHitResult()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.TriggerExplosionFromHitResult");

	AKSProjectile_TriggerExplosionFromHitResult_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.TriggerExplosion
// ()

void AKSProjectile::TriggerExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.TriggerExplosion");

	AKSProjectile_TriggerExplosion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.TakeoverDelayComplete
// ()

void AKSProjectile::TakeoverDelayComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.TakeoverDelayComplete");

	AKSProjectile_TakeoverDelayComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SpawnSpang
// ()

void AKSProjectile::SpawnSpang()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SpawnSpang");

	AKSProjectile_SpawnSpang_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SimulateExplosion
// ()

void AKSProjectile::SimulateExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SimulateExplosion");

	AKSProjectile_SimulateExplosion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ShouldBounceOff
// ()

void AKSProjectile::ShouldBounceOff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ShouldBounceOff");

	AKSProjectile_ShouldBounceOff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SetWeaponAsset
// ()

void AKSProjectile::SetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SetWeaponAsset");

	AKSProjectile_SetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SetHorizontalThrowSpeed
// ()

void AKSProjectile::SetHorizontalThrowSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SetHorizontalThrowSpeed");

	AKSProjectile_SetHorizontalThrowSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SetFumbled
// ()

void AKSProjectile::SetFumbled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SetFumbled");

	AKSProjectile_SetFumbled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.SetDamageOverrideWeaponAsset
// ()

void AKSProjectile::SetDamageOverrideWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.SetDamageOverrideWeaponAsset");

	AKSProjectile_SetDamageOverrideWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ServerProcessPredictedHits
// ()

void AKSProjectile::ServerProcessPredictedHits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ServerProcessPredictedHits");

	AKSProjectile_ServerProcessPredictedHits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.RecordPredictedHits
// ()

void AKSProjectile::RecordPredictedHits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.RecordPredictedHits");

	AKSProjectile_RecordPredictedHits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.RecordPredictedHit
// ()

void AKSProjectile::RecordPredictedHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.RecordPredictedHit");

	AKSProjectile_RecordPredictedHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.PlayFizzle
// ()

void AKSProjectile::PlayFizzle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.PlayFizzle");

	AKSProjectile_PlayFizzle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.PlayExplosion
// ()

void AKSProjectile::PlayExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.PlayExplosion");

	AKSProjectile_PlayExplosion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRootComponentDetached
// ()

void AKSProjectile::OnRootComponentDetached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRootComponentDetached");

	AKSProjectile_OnRootComponentDetached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_WeaponAsset
// ()

void AKSProjectile::OnRep_WeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_WeaponAsset");

	AKSProjectile_OnRep_WeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_StoppingHit
// ()

void AKSProjectile::OnRep_StoppingHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_StoppingHit");

	AKSProjectile_OnRep_StoppingHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_ProjectileHit
// ()

void AKSProjectile::OnRep_ProjectileHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_ProjectileHit");

	AKSProjectile_OnRep_ProjectileHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnRep_CurrentHealth
// ()

void AKSProjectile::OnRep_CurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnRep_CurrentHealth");

	AKSProjectile_OnRep_CurrentHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnProjectileStopped
// ()

void AKSProjectile::OnProjectileStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnProjectileStopped");

	AKSProjectile_OnProjectileStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnProjectileBounced
// ()

void AKSProjectile::OnProjectileBounced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnProjectileBounced");

	AKSProjectile_OnProjectileBounced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.OnKilled
// ()

void AKSProjectile::OnKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.OnKilled");

	AKSProjectile_OnKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.NativeOnProjectileStopped
// ()

void AKSProjectile::NativeOnProjectileStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.NativeOnProjectileStopped");

	AKSProjectile_NativeOnProjectileStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.NativeOnProjectileBounced
// ()

void AKSProjectile::NativeOnProjectileBounced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.NativeOnProjectileBounced");

	AKSProjectile_NativeOnProjectileBounced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ModifyDamageDealt
// ()

void AKSProjectile::ModifyDamageDealt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ModifyDamageDealt");

	AKSProjectile_ModifyDamageDealt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.IsActive
// ()

void AKSProjectile::IsActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.IsActive");

	AKSProjectile_IsActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetWeaponAsset
// ()

void AKSProjectile::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetWeaponAsset");

	AKSProjectile_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetSpawnRotation
// ()

void AKSProjectile::GetSpawnRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetSpawnRotation");

	AKSProjectile_GetSpawnRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetSpawnLocation
// ()

void AKSProjectile::GetSpawnLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetSpawnLocation");

	AKSProjectile_GetSpawnLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetSpawningWeapon
// ()

void AKSProjectile::GetSpawningWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetSpawningWeapon");

	AKSProjectile_GetSpawningWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetProjectileUpdatedComponent
// ()

void AKSProjectile::GetProjectileUpdatedComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetProjectileUpdatedComponent");

	AKSProjectile_GetProjectileUpdatedComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetOutlineableMeshes
// ()

void AKSProjectile::GetOutlineableMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetOutlineableMeshes");

	AKSProjectile_GetOutlineableMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetMovementComponent
// ()

void AKSProjectile::GetMovementComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetMovementComponent");

	AKSProjectile_GetMovementComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetHorizontalThrowSpeed
// ()

void AKSProjectile::GetHorizontalThrowSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetHorizontalThrowSpeed");

	AKSProjectile_GetHorizontalThrowSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetDamageWeaponAsset
// ()

void AKSProjectile::GetDamageWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetDamageWeaponAsset");

	AKSProjectile_GetDamageWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetDamageInstigator
// ()

void AKSProjectile::GetDamageInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetDamageInstigator");

	AKSProjectile_GetDamageInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetDamageFalloffRangeScaler
// ()

void AKSProjectile::GetDamageFalloffRangeScaler()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetDamageFalloffRangeScaler");

	AKSProjectile_GetDamageFalloffRangeScaler_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetComponentToRotate
// ()

void AKSProjectile::GetComponentToRotate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetComponentToRotate");

	AKSProjectile_GetComponentToRotate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.GetClusterComponent
// ()

void AKSProjectile::GetClusterComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.GetClusterComponent");

	AKSProjectile_GetClusterComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.DoRadialDamageDefault
// ()

void AKSProjectile::DoRadialDamageDefault()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.DoRadialDamageDefault");

	AKSProjectile_DoRadialDamageDefault_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.DetermineIgnoredActors
// ()

void AKSProjectile::DetermineIgnoredActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.DetermineIgnoredActors");

	AKSProjectile_DetermineIgnoredActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.Deactivate
// ()

void AKSProjectile::Deactivate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.Deactivate");

	AKSProjectile_Deactivate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.CreateClusterSegmentsFromStoppingHit
// ()

void AKSProjectile::CreateClusterSegmentsFromStoppingHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.CreateClusterSegmentsFromStoppingHit");

	AKSProjectile_CreateClusterSegmentsFromStoppingHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.ComponentTakeDamage
// ()

void AKSProjectile::ComponentTakeDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.ComponentTakeDamage");

	AKSProjectile_ComponentTakeDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.BroadcastExplosion
// ()

void AKSProjectile::BroadcastExplosion()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.BroadcastExplosion");

	AKSProjectile_BroadcastExplosion_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile.AffectsActor
// ()

void AKSProjectile::AffectsActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile.AffectsActor");

	AKSProjectile_AffectsActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.UnregisterTouchEvent
// ()

void AKSProjectile_Grenade::UnregisterTouchEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.UnregisterTouchEvent");

	AKSProjectile_Grenade_UnregisterTouchEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.ShouldExplodeOnBounce
// ()

void AKSProjectile_Grenade::ShouldExplodeOnBounce()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.ShouldExplodeOnBounce");

	AKSProjectile_Grenade_ShouldExplodeOnBounce_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.SetFuseTime
// ()

void AKSProjectile_Grenade::SetFuseTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.SetFuseTime");

	AKSProjectile_Grenade_SetFuseTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.RegisterTouchEvent
// ()

void AKSProjectile_Grenade::RegisterTouchEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.RegisterTouchEvent");

	AKSProjectile_Grenade_RegisterTouchEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.OnRep_FuseTimeRemaining
// ()

void AKSProjectile_Grenade::OnRep_FuseTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.OnRep_FuseTimeRemaining");

	AKSProjectile_Grenade_OnRep_FuseTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.IsInProximityOfLocalCharacter
// ()

void AKSProjectile_Grenade::IsInProximityOfLocalCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.IsInProximityOfLocalCharacter");

	AKSProjectile_Grenade_IsInProximityOfLocalCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.IsFuseActive
// ()

void AKSProjectile_Grenade::IsFuseActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.IsFuseActive");

	AKSProjectile_Grenade_IsFuseActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.GetCurrentFuseTime
// ()

void AKSProjectile_Grenade::GetCurrentFuseTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.GetCurrentFuseTime");

	AKSProjectile_Grenade_GetCurrentFuseTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.FuseTimeExpired
// ()

void AKSProjectile_Grenade::FuseTimeExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.FuseTimeExpired");

	AKSProjectile_Grenade_FuseTimeExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.CanSeeProximityWarning
// ()

void AKSProjectile_Grenade::CanSeeProximityWarning()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.CanSeeProximityWarning");

	AKSProjectile_Grenade_CanSeeProximityWarning_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Grenade.CallOnLocalViewTargetChanged
// ()

void AKSProjectile_Grenade::CallOnLocalViewTargetChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Grenade.CallOnLocalViewTargetChanged");

	AKSProjectile_Grenade_CallOnLocalViewTargetChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpreadProjectile.OnProjectileStopped
// ()

void AKSSpreadProjectile::OnProjectileStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.OnProjectileStopped");

	AKSSpreadProjectile_OnProjectileStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpreadProjectile.OnProjectileBounced
// ()

void AKSSpreadProjectile::OnProjectileBounced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.OnProjectileBounced");

	AKSSpreadProjectile_OnProjectileBounced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpreadProjectile.NativeOnProjectileStopped
// ()

void AKSSpreadProjectile::NativeOnProjectileStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.NativeOnProjectileStopped");

	AKSSpreadProjectile_NativeOnProjectileStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpreadProjectile.NativeOnProjectileBounced
// ()

void AKSSpreadProjectile::NativeOnProjectileBounced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpreadProjectile.NativeOnProjectileBounced");

	AKSSpreadProjectile_NativeOnProjectileBounced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSGrenadeSpreadRule.GetSpread
// ()

void UKSGrenadeSpreadRule::GetSpread()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSGrenadeSpreadRule.GetSpread");

	UKSGrenadeSpreadRule_GetSpread_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.ProcessNextSpreadTransform
// ()

void AKSProjectile_GrenadeSpread::ProcessNextSpreadTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.ProcessNextSpreadTransform");

	AKSProjectile_GrenadeSpread_ProcessNextSpreadTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformRemoved
// ()

void AKSProjectile_GrenadeSpread::OnSpreadTransformRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformRemoved");

	AKSProjectile_GrenadeSpread_OnSpreadTransformRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformAdded
// ()

void AKSProjectile_GrenadeSpread::OnSpreadTransformAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTransformAdded");

	AKSProjectile_GrenadeSpread_OnSpreadTransformAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTick
// ()

void AKSProjectile_GrenadeSpread::OnSpreadTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadTick");

	AKSProjectile_GrenadeSpread_OnSpreadTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadProjectileStopped
// ()

void AKSProjectile_GrenadeSpread::OnSpreadProjectileStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnSpreadProjectileStopped");

	AKSProjectile_GrenadeSpread_OnSpreadProjectileStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnLingerEnd
// ()

void AKSProjectile_GrenadeSpread::OnLingerEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnLingerEnd");

	AKSProjectile_GrenadeSpread_OnLingerEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnDamageTick
// ()

void AKSProjectile_GrenadeSpread::OnDamageTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnDamageTick");

	AKSProjectile_GrenadeSpread_OnDamageTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnBeginLingering
// ()

void AKSProjectile_GrenadeSpread::OnBeginLingering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnBeginLingering");

	AKSProjectile_GrenadeSpread_OnBeginLingering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnAllSpreadTransformsRemoved
// ()

void AKSProjectile_GrenadeSpread::OnAllSpreadTransformsRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnAllSpreadTransformsRemoved");

	AKSProjectile_GrenadeSpread_OnAllSpreadTransformsRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnAffectedDestroyed
// ()

void AKSProjectile_GrenadeSpread::OnAffectedDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnAffectedDestroyed");

	AKSProjectile_GrenadeSpread_OnAffectedDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnActorUnaffected
// ()

void AKSProjectile_GrenadeSpread::OnActorUnaffected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnActorUnaffected");

	AKSProjectile_GrenadeSpread_OnActorUnaffected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnActorDamaged
// ()

void AKSProjectile_GrenadeSpread::OnActorDamaged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnActorDamaged");

	AKSProjectile_GrenadeSpread_OnActorDamaged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.OnActorAffected
// ()

void AKSProjectile_GrenadeSpread::OnActorAffected()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.OnActorAffected");

	AKSProjectile_GrenadeSpread_OnActorAffected_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.ConfigureSpreadTransformParticleSystem
// ()

void AKSProjectile_GrenadeSpread::ConfigureSpreadTransformParticleSystem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.ConfigureSpreadTransformParticleSystem");

	AKSProjectile_GrenadeSpread_ConfigureSpreadTransformParticleSystem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.CleanupParticleSystemComponents
// ()

void AKSProjectile_GrenadeSpread::CleanupParticleSystemComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.CleanupParticleSystemComponents");

	AKSProjectile_GrenadeSpread_CleanupParticleSystemComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.CleanupMeshComponents
// ()

void AKSProjectile_GrenadeSpread::CleanupMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.CleanupMeshComponents");

	AKSProjectile_GrenadeSpread_CleanupMeshComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_GrenadeSpread.BeginLingering
// ()

void AKSProjectile_GrenadeSpread::BeginLingering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_GrenadeSpread.BeginLingering");

	AKSProjectile_GrenadeSpread_BeginLingering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.PredictDamage
// ()

void AKSProjectile_Melee::PredictDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.PredictDamage");

	AKSProjectile_Melee_PredictDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.LookAheadHit
// ()

void AKSProjectile_Melee::LookAheadHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.LookAheadHit");

	AKSProjectile_Melee_LookAheadHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.FlushHitIgnoreActors
// ()

void AKSProjectile_Melee::FlushHitIgnoreActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.FlushHitIgnoreActors");

	AKSProjectile_Melee_FlushHitIgnoreActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_Melee.AllowFutureHitOnActor
// ()

void AKSProjectile_Melee::AllowFutureHitOnActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_Melee.AllowFutureHitOnActor");

	AKSProjectile_Melee_AllowFutureHitOnActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_ProximityGrenade.ProximityActorUpdated
// ()

void AKSProjectile_ProximityGrenade::ProximityActorUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ProximityGrenade.ProximityActorUpdated");

	AKSProjectile_ProximityGrenade_ProximityActorUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_ProximityGrenade.GetProximityTraceRelativeLocation
// ()

void AKSProjectile_ProximityGrenade::GetProximityTraceRelativeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ProximityGrenade.GetProximityTraceRelativeLocation");

	AKSProjectile_ProximityGrenade_GetProximityTraceRelativeLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_ProximityGrenade.GetProximityComponent
// ()

void AKSProjectile_ProximityGrenade::GetProximityComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ProximityGrenade.GetProximityComponent");

	AKSProjectile_ProximityGrenade_GetProximityComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_RemoteTrigger.ReportOwningClientLoaded
// ()

void AKSProjectile_RemoteTrigger::ReportOwningClientLoaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_RemoteTrigger.ReportOwningClientLoaded");

	AKSProjectile_RemoteTrigger_ReportOwningClientLoaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_RemoteTrigger.OnRealActorStopped
// ()

void AKSProjectile_RemoteTrigger::OnRealActorStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_RemoteTrigger.OnRealActorStopped");

	AKSProjectile_RemoteTrigger_OnRealActorStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_RemoteTrigger.IsDetonatable
// ()

void AKSProjectile_RemoteTrigger::IsDetonatable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_RemoteTrigger.IsDetonatable");

	AKSProjectile_RemoteTrigger_IsDetonatable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectile_ReviveDart.OnReviveEnd
// ()

void AKSProjectile_ReviveDart::OnReviveEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectile_ReviveDart.OnReviveEnd");

	AKSProjectile_ReviveDart_OnReviveEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectileClusterComponent.OnSegmentKilled
// ()

void UKSProjectileClusterComponent::OnSegmentKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.OnSegmentKilled");

	UKSProjectileClusterComponent_OnSegmentKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectileClusterComponent.GetSpawnedSegments
// ()

void UKSProjectileClusterComponent::GetSpawnedSegments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.GetSpawnedSegments");

	UKSProjectileClusterComponent_GetSpawnedSegments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectileClusterComponent.GetClusterTransform
// ()

void UKSProjectileClusterComponent::GetClusterTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.GetClusterTransform");

	UKSProjectileClusterComponent_GetClusterTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProjectileClusterComponent.CreateClusterSegments
// ()

void UKSProjectileClusterComponent::CreateClusterSegments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProjectileClusterComponent.CreateClusterSegments");

	UKSProjectileClusterComponent_CreateClusterSegments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.UnregisterOverlapShape
// ()

void UKSProximityComponent::UnregisterOverlapShape()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.UnregisterOverlapShape");

	UKSProximityComponent_UnregisterOverlapShape_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.ShouldTrackActor
// ()

void UKSProximityComponent::ShouldTrackActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.ShouldTrackActor");

	UKSProximityComponent_ShouldTrackActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.SetProximityTraceOffset
// ()

void UKSProximityComponent::SetProximityTraceOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.SetProximityTraceOffset");

	UKSProximityComponent_SetProximityTraceOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.SetProximityCheckingEnabled
// ()

void UKSProximityComponent::SetProximityCheckingEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.SetProximityCheckingEnabled");

	UKSProximityComponent_SetProximityCheckingEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.RegisterOverlapShape
// ()

void UKSProximityComponent::RegisterOverlapShape()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.RegisterOverlapShape");

	UKSProximityComponent_RegisterOverlapShape_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.ProximityOverlapStart
// ()

void UKSProximityComponent::ProximityOverlapStart()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.ProximityOverlapStart");

	UKSProximityComponent_ProximityOverlapStart_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.ProximityOverlapEnd
// ()

void UKSProximityComponent::ProximityOverlapEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.ProximityOverlapEnd");

	UKSProximityComponent_ProximityOverlapEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSProximityComponent.OnProximityActorDestroyed
// ()

void UKSProximityComponent::OnProximityActorDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSProximityComponent.OnProximityActorDestroyed");

	UKSProximityComponent_OnProximityActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSReverseTracker.StoreDamageTakenEvent
// ()

void UKSReverseTracker::StoreDamageTakenEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSReverseTracker.StoreDamageTakenEvent");

	UKSReverseTracker_StoreDamageTakenEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSReverseTracker.HandleTrackerAccolade
// ()

void UKSReverseTracker::HandleTrackerAccolade()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSReverseTracker.HandleTrackerAccolade");

	UKSReverseTracker_HandleTrackerAccolade_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSReverseTracker.CheckVictimDamageInstigator
// ()

void UKSReverseTracker::CheckVictimDamageInstigator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSReverseTracker.CheckVictimDamageInstigator");

	UKSReverseTracker_CheckVictimDamageInstigator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRewardsCalculator.GetStatsOrdering
// ()

void UKSRewardsCalculator::GetStatsOrdering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRewardsCalculator.GetStatsOrdering");

	UKSRewardsCalculator_GetStatsOrdering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRewardsCalculator.GetRewardsFromStat
// ()

void UKSRewardsCalculator::GetRewardsFromStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRewardsCalculator.GetRewardsFromStat");

	UKSRewardsCalculator_GetRewardsFromStat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRewardsCalculator.CalcPlayerRewards
// ()

void UKSRewardsCalculator::CalcPlayerRewards()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRewardsCalculator.CalcPlayerRewards");

	UKSRewardsCalculator_CalcPlayerRewards_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpectatorPawn.GamepadLookUp
// ()

void AKSSpectatorPawn::GamepadLookUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpectatorPawn.GamepadLookUp");

	AKSSpectatorPawn_GamepadLookUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpectatorPawn.GamepadLookRight
// ()

void AKSSpectatorPawn::GamepadLookRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpectatorPawn.GamepadLookRight");

	AKSSpectatorPawn_GamepadLookRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.OnRep_FlightDurationTimer
// ()

void AKSRocket::OnRep_FlightDurationTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.OnRep_FlightDurationTimer");

	AKSRocket_OnRep_FlightDurationTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.OnIgnitionKickoff
// ()

void AKSRocket::OnIgnitionKickoff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.OnIgnitionKickoff");

	AKSRocket_OnIgnitionKickoff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.NativeOnProjectileStopped
// ()

void AKSRocket::NativeOnProjectileStopped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.NativeOnProjectileStopped");

	AKSRocket_NativeOnProjectileStopped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.NativeOnIgnitionKickoff
// ()

void AKSRocket::NativeOnIgnitionKickoff()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.NativeOnIgnitionKickoff");

	AKSRocket_NativeOnIgnitionKickoff_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.NativeDetonate
// ()

void AKSRocket::NativeDetonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.NativeDetonate");

	AKSRocket_NativeDetonate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.GetWeaponAsset
// ()

void AKSRocket::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GetWeaponAsset");

	AKSRocket_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.GetFlightDuration
// ()

void AKSRocket::GetFlightDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GetFlightDuration");

	AKSRocket_GetFlightDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.GamepadLookUp
// ()

void AKSRocket::GamepadLookUp()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GamepadLookUp");

	AKSRocket_GamepadLookUp_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.GamepadLookRight
// ()

void AKSRocket::GamepadLookRight()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.GamepadLookRight");

	AKSRocket_GamepadLookRight_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.FlightDurationTimerTick
// ()

void AKSRocket::FlightDurationTimerTick()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.FlightDurationTimerTick");

	AKSRocket_FlightDurationTimerTick_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.FlightDurationTimerComplete
// ()

void AKSRocket::FlightDurationTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.FlightDurationTimerComplete");

	AKSRocket_FlightDurationTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.FlightDurationTimerActive
// ()

void AKSRocket::FlightDurationTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.FlightDurationTimerActive");

	AKSRocket_FlightDurationTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.EnableCameraControl
// ()

void AKSRocket::EnableCameraControl()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.EnableCameraControl");

	AKSRocket_EnableCameraControl_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.Detonate
// ()

void AKSRocket::Detonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.Detonate");

	AKSRocket_Detonate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocket.BroadcastDetonate
// ()

void AKSRocket::BroadcastDetonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocket.BroadcastDetonate");

	AKSRocket_BroadcastDetonate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRocketMovementComponent.StopSimulating
// ()

void UKSRocketMovementComponent::StopSimulating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRocketMovementComponent.StopSimulating");

	UKSRocketMovementComponent_StopSimulating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.KSRocketMovementComponent.OnRocketStopDelegate__DelegateSignature
// ()

void UKSRocketMovementComponent::OnRocketStopDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.KSRocketMovementComponent.OnRocketStopDelegate__DelegateSignature");

	UKSRocketMovementComponent_OnRocketStopDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.KSRocketMovementComponent.OnIgnitionKickoffDelegate__DelegateSignature
// ()

void UKSRocketMovementComponent::OnIgnitionKickoffDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.KSRocketMovementComponent.OnIgnitionKickoffDelegate__DelegateSignature");

	UKSRocketMovementComponent_OnIgnitionKickoffDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.ReceiveGameSetup
// ()

void AKSRoundBasedObject::ReceiveGameSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.ReceiveGameSetup");

	AKSRoundBasedObject_ReceiveGameSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnSkyDiveStarted
// ()

void AKSRoundBasedObject::OnSkyDiveStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnSkyDiveStarted");

	AKSRoundBasedObject_OnSkyDiveStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnSkyDiveSkipped
// ()

void AKSRoundBasedObject::OnSkyDiveSkipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnSkyDiveSkipped");

	AKSRoundBasedObject_OnSkyDiveSkipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnSkyDiveEnded
// ()

void AKSRoundBasedObject::OnSkyDiveEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnSkyDiveEnded");

	AKSRoundBasedObject_OnSkyDiveEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnRoundStarted
// ()

void AKSRoundBasedObject::OnRoundStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnRoundStarted");

	AKSRoundBasedObject_OnRoundStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnRoundEnded
// ()

void AKSRoundBasedObject::OnRoundEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnRoundEnded");

	AKSRoundBasedObject_OnRoundEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.OnGameSetup
// ()

void AKSRoundBasedObject::OnGameSetup()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.OnGameSetup");

	AKSRoundBasedObject_OnGameSetup_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.IsSkyDivingActive
// ()

void AKSRoundBasedObject::IsSkyDivingActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.IsSkyDivingActive");

	AKSRoundBasedObject_IsSkyDivingActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.CheckPlayerForMatchingTeam
// ()

void AKSRoundBasedObject::CheckPlayerForMatchingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.CheckPlayerForMatchingTeam");

	AKSRoundBasedObject_CheckPlayerForMatchingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.CheckLocalPlayerForMatchingTeam
// ()

void AKSRoundBasedObject::CheckLocalPlayerForMatchingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.CheckLocalPlayerForMatchingTeam");

	AKSRoundBasedObject_CheckLocalPlayerForMatchingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoundBasedObject.CheckCharacterForMatchingTeam
// ()

void AKSRoundBasedObject::CheckCharacterForMatchingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoundBasedObject.CheckCharacterForMatchingTeam");

	AKSRoundBasedObject_CheckCharacterForMatchingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.TryToDamage
// ()

void AKSRoyaleSafeZone::TryToDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.TryToDamage");

	AKSRoyaleSafeZone_TryToDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.StartShrink
// ()

void AKSRoyaleSafeZone::StartShrink()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.StartShrink");

	AKSRoyaleSafeZone_StartShrink_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.SetNewZoneParams
// ()

void AKSRoyaleSafeZone::SetNewZoneParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.SetNewZoneParams");

	AKSRoyaleSafeZone_SetNewZoneParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnZoneActivated
// ()

void AKSRoyaleSafeZone::OnZoneActivated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnZoneActivated");

	AKSRoyaleSafeZone_OnZoneActivated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnRep_ZoneActive
// ()

void AKSRoyaleSafeZone::OnRep_ZoneActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnRep_ZoneActive");

	AKSRoyaleSafeZone_OnRep_ZoneActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnRep_NewParams
// ()

void AKSRoyaleSafeZone::OnRep_NewParams()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnRep_NewParams");

	AKSRoyaleSafeZone_OnRep_NewParams_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.OnCircleUpdate
// ()

void AKSRoyaleSafeZone::OnCircleUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.OnCircleUpdate");

	AKSRoyaleSafeZone_OnCircleUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRoyaleSafeZone.IsZoneActive
// ()

void AKSRoyaleSafeZone::IsZoneActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRoyaleSafeZone.IsZoneActive");

	AKSRoyaleSafeZone_IsZoneActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRuleBasedPhaseProxy.StartRuleBasedPhase
// ()

void UKSRuleBasedPhaseProxy::StartRuleBasedPhase()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRuleBasedPhaseProxy.StartRuleBasedPhase");

	UKSRuleBasedPhaseProxy_StartRuleBasedPhase_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRuleBasedPhaseProxy.OnCompletedWithLeadingTeam
// ()

void UKSRuleBasedPhaseProxy::OnCompletedWithLeadingTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRuleBasedPhaseProxy.OnCompletedWithLeadingTeam");

	UKSRuleBasedPhaseProxy_OnCompletedWithLeadingTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSRuleBasedPhaseProxy.OnCompleted
// ()

void UKSRuleBasedPhaseProxy::OnCompleted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSRuleBasedPhaseProxy.OnCompleted");

	UKSRuleBasedPhaseProxy_OnCompleted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSafeZone.RevealOverlappedCharacter
// ()

void AKSSafeZone::RevealOverlappedCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSafeZone.RevealOverlappedCharacter");

	AKSSafeZone_RevealOverlappedCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitterWithRotation
// ()

void UKSSceneComponentPoolStatics::SpawnTracerEmitterWithRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitterWithRotation");

	UKSSceneComponentPoolStatics_SpawnTracerEmitterWithRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitter
// ()

void UKSSceneComponentPoolStatics::SpawnTracerEmitter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnTracerEmitter");

	UKSSceneComponentPoolStatics_SpawnTracerEmitter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracerWithRotation
// ()

void UKSSceneComponentPoolStatics::SpawnMeshTracerWithRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracerWithRotation");

	UKSSceneComponentPoolStatics_SpawnMeshTracerWithRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracer
// ()

void UKSSceneComponentPoolStatics::SpawnMeshTracer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnMeshTracer");

	UKSSceneComponentPoolStatics_SpawnMeshTracer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SpawnAkComponentAtLocation
// ()

void UKSSceneComponentPoolStatics::SpawnAkComponentAtLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SpawnAkComponentAtLocation");

	UKSSceneComponentPoolStatics_SpawnAkComponentAtLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SetSwitchOnNextAkComponentInPool
// ()

void UKSSceneComponentPoolStatics::SetSwitchOnNextAkComponentInPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SetSwitchOnNextAkComponentInPool");

	UKSSceneComponentPoolStatics_SetSwitchOnNextAkComponentInPool_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSceneComponentPoolStatics.SetRTPCValueOnNextAkComponentInPool
// ()

void UKSSceneComponentPoolStatics::SetRTPCValueOnNextAkComponentInPool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSceneComponentPoolStatics.SetRTPCValueOnNextAkComponentInPool");

	UKSSceneComponentPoolStatics_SetRTPCValueOnNextAkComponentInPool_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShield.SetShieldEnabled
// ()

void AKSShield::SetShieldEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShield.SetShieldEnabled");

	AKSShield_SetShieldEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShield.OnRep_ShieldEnabled
// ()

void AKSShield::OnRep_ShieldEnabled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShield.OnRep_ShieldEnabled");

	AKSShield_OnRep_ShieldEnabled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShield.OnRep_Health
// ()

void AKSShield::OnRep_Health()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShield.OnRep_Health");

	AKSShield_OnRep_Health_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShopRuleComponent.OnGamePhaseChanged
// ()

void UKSShopRuleComponent::OnGamePhaseChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShopRuleComponent.OnGamePhaseChanged");

	UKSShopRuleComponent_OnGamePhaseChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSShopRuleComponent.GetShopForPlayer
// ()

void UKSShopRuleComponent::GetShopForPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSShopRuleComponent.GetShopForPlayer");

	UKSShopRuleComponent_GetShopForPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkinBundle.IsStarterSkin
// ()

void UKSSkinBundle::IsStarterSkin()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkinBundle.IsStarterSkin");

	UKSSkinBundle_IsStarterSkin_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSkinBundle.GetSkinImage
// ()

void UKSSkinBundle::GetSkinImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSkinBundle.GetSkinImage");

	UKSSkinBundle_GetSkinImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule.Initialize
// ()

void UKSSpawnRule::Initialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule.Initialize");

	UKSSpawnRule_Initialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule.GetScoreForSpawn
// ()

void UKSSpawnRule::GetScoreForSpawn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule.GetScoreForSpawn");

	UKSSpawnRule_GetScoreForSpawn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule.GetGameModePropertyInt
// ()

void UKSSpawnRule::GetGameModePropertyInt()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule.GetGameModePropertyInt");

	UKSSpawnRule_GetGameModePropertyInt_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule.GetGameModePropertyFloat
// ()

void UKSSpawnRule::GetGameModePropertyFloat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule.GetGameModePropertyFloat");

	UKSSpawnRule_GetGameModePropertyFloat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule.GetGameModePropertyBool
// ()

void UKSSpawnRule::GetGameModePropertyBool()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule.GetGameModePropertyBool");

	UKSSpawnRule_GetGameModePropertyBool_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule_Proximity.GetScoreForDistance
// ()

void UKSSpawnRule_Proximity::GetScoreForDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule_Proximity.GetScoreForDistance");

	UKSSpawnRule_Proximity_GetScoreForDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule_PlayerEventProximity.OnPlayerEventRecordExpire
// ()

void UKSSpawnRule_PlayerEventProximity::OnPlayerEventRecordExpire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule_PlayerEventProximity.OnPlayerEventRecordExpire");

	UKSSpawnRule_PlayerEventProximity_OnPlayerEventRecordExpire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule_PlayerEventProximity.OnPlayerEvent
// ()

void UKSSpawnRule_PlayerEventProximity::OnPlayerEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule_PlayerEventProximity.OnPlayerEvent");

	UKSSpawnRule_PlayerEventProximity_OnPlayerEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpawnRule_PlayerEventProximity.BindToEvent
// ()

void UKSSpawnRule_PlayerEventProximity::BindToEvent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpawnRule_PlayerEventProximity.BindToEvent");

	UKSSpawnRule_PlayerEventProximity_BindToEvent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSpecialty.GetDynamicPoseImage
// ()

void UKSSpecialty::GetDynamicPoseImage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSpecialty.GetDynamicPoseImage");

	UKSSpecialty_GetDynamicPoseImage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSprayInstance.ServerPlaySpray
// ()

void AKSSprayInstance::ServerPlaySpray()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSprayInstance.ServerPlaySpray");

	AKSSprayInstance_ServerPlaySpray_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSprintCameraShake.StopShakeOnStopSprint
// ()

void UKSSprintCameraShake::StopShakeOnStopSprint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSprintCameraShake.StopShakeOnStopSprint");

	UKSSprintCameraShake_StopShakeOnStopSprint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSPlayerMatchStats.GetStat
// ()

void UKSPlayerMatchStats::GetStat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSPlayerMatchStats.GetStat");

	UKSPlayerMatchStats_GetStat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSStoreItemHelper.RedeemDLCVoucher
// ()

void UKSStoreItemHelper::RedeemDLCVoucher()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSStoreItemHelper.RedeemDLCVoucher");

	UKSStoreItemHelper_RedeemDLCVoucher_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSStoreItemHelper.HasUnseenItems
// ()

void UKSStoreItemHelper::HasUnseenItems()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSStoreItemHelper.HasUnseenItems");

	UKSStoreItemHelper_HasUnseenItems_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSStoreItemHelper.HasRecentlySeenItem
// ()

void UKSStoreItemHelper::HasRecentlySeenItem()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSStoreItemHelper.HasRecentlySeenItem");

	UKSStoreItemHelper_HasRecentlySeenItem_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSStoreItemHelper.HasPortalOffers
// ()

void UKSStoreItemHelper::HasPortalOffers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSStoreItemHelper.HasPortalOffers");

	UKSStoreItemHelper_HasPortalOffers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionStateLock
// ()

void UKSSwimmingAnimInst::SwimNotifyTransitionStateLock()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionStateLock");

	UKSSwimmingAnimInst_SwimNotifyTransitionStateLock_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionEnd
// ()

void UKSSwimmingAnimInst::SwimNotifyTransitionEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSSwimmingAnimInst.SwimNotifyTransitionEnd");

	UKSSwimmingAnimInst_SwimNotifyTransitionEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.OpenTablet
// ()

void UKSTabletAnimInstance::OpenTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.OpenTablet");

	UKSTabletAnimInstance_OpenTablet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.FullyOpened
// ()

void UKSTabletAnimInstance::FullyOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.FullyOpened");

	UKSTabletAnimInstance_FullyOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.FullyClosed
// ()

void UKSTabletAnimInstance::FullyClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.FullyClosed");

	UKSTabletAnimInstance_FullyClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.CloseTablet
// ()

void UKSTabletAnimInstance::CloseTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.CloseTablet");

	UKSTabletAnimInstance_CloseTablet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.CheckFullyOpened
// ()

void UKSTabletAnimInstance::CheckFullyOpened()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.CheckFullyOpened");

	UKSTabletAnimInstance_CheckFullyOpened_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletAnimInstance.CheckFullyClosed
// ()

void UKSTabletAnimInstance::CheckFullyClosed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletAnimInstance.CheckFullyClosed");

	UKSTabletAnimInstance_CheckFullyClosed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletMeshComponent.OpenTablet
// ()

void UKSTabletMeshComponent::OpenTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.OpenTablet");

	UKSTabletMeshComponent_OpenTablet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletMeshComponent.OnOpenComplete
// ()

void UKSTabletMeshComponent::OnOpenComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.OnOpenComplete");

	UKSTabletMeshComponent_OnOpenComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletMeshComponent.OnCloseComplete
// ()

void UKSTabletMeshComponent::OnCloseComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.OnCloseComplete");

	UKSTabletMeshComponent_OnCloseComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTabletMeshComponent.CloseTablet
// ()

void UKSTabletMeshComponent::CloseTablet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTabletMeshComponent.CloseTablet");

	UKSTabletMeshComponent_CloseTablet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTargeter.GetCurrentTarget
// ()

void UKSTargeter::GetCurrentTarget()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTargeter.GetCurrentTarget");

	UKSTargeter_GetCurrentTarget_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTargetingDetailsWidget.OnCurrentDistanceChanged
// ()

void UKSTargetingDetailsWidget::OnCurrentDistanceChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTargetingDetailsWidget.OnCurrentDistanceChanged");

	UKSTargetingDetailsWidget_OnCurrentDistanceChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamKillTracker.StoreCombatInfo
// ()

void UKSTeamKillTracker::StoreCombatInfo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.StoreCombatInfo");

	UKSTeamKillTracker_StoreCombatInfo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamKillTracker.HasEliminateVictim
// ()

void UKSTeamKillTracker::HasEliminateVictim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.HasEliminateVictim");

	UKSTeamKillTracker_HasEliminateVictim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamKillTracker.ContainsPlayer
// ()

void UKSTeamKillTracker::ContainsPlayer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.ContainsPlayer");

	UKSTeamKillTracker_ContainsPlayer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamKillTracker.CheckRequirements
// ()

void UKSTeamKillTracker::CheckRequirements()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamKillTracker.CheckRequirements");

	UKSTeamKillTracker_CheckRequirements_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.SubtractTickets
// ()

void AKSTeamState::SubtractTickets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.SubtractTickets");

	AKSTeamState_SubtractTickets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.ShouldKeepTeamAlive
// ()

void AKSTeamState::ShouldKeepTeamAlive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.ShouldKeepTeamAlive");

	AKSTeamState_ShouldKeepTeamAlive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.ResetTeamElimination
// ()

void AKSTeamState::ResetTeamElimination()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.ResetTeamElimination");

	AKSTeamState_ResetTeamElimination_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamUpdated
// ()

void AKSTeamState::OnTeamUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamUpdated");

	AKSTeamState_OnTeamUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberRemoved
// ()

void AKSTeamState::OnTeamMemberRemoved()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberRemoved");

	AKSTeamState_OnTeamMemberRemoved_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberEliminated
// ()

void AKSTeamState::OnTeamMemberEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberEliminated");

	AKSTeamState_OnTeamMemberEliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberDowned
// ()

void AKSTeamState::OnTeamMemberDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberDowned");

	AKSTeamState_OnTeamMemberDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnTeamMemberAdded
// ()

void AKSTeamState::OnTeamMemberAdded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnTeamMemberAdded");

	AKSTeamState_OnTeamMemberAdded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnSurrenderPollStarted
// ()

void AKSTeamState::OnSurrenderPollStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnSurrenderPollStarted");

	AKSTeamState_OnSurrenderPollStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnSurrenderPollFailed
// ()

void AKSTeamState::OnSurrenderPollFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnSurrenderPollFailed");

	AKSTeamState_OnSurrenderPollFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_TeamEliminatedOrDowned
// ()

void AKSTeamState::OnRep_TeamEliminatedOrDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_TeamEliminatedOrDowned");

	AKSTeamState_OnRep_TeamEliminatedOrDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_TeamEliminated
// ()

void AKSTeamState::OnRep_TeamEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_TeamEliminated");

	AKSTeamState_OnRep_TeamEliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_TeamCanProposeSurrender
// ()

void AKSTeamState::OnRep_TeamCanProposeSurrender()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_TeamCanProposeSurrender");

	AKSTeamState_OnRep_TeamCanProposeSurrender_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_Score
// ()

void AKSTeamState::OnRep_Score()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_Score");

	AKSTeamState_OnRep_Score_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_Respawns
// ()

void AKSTeamState::OnRep_Respawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_Respawns");

	AKSTeamState_OnRep_Respawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnRep_JobSelectionComponent
// ()

void AKSTeamState::OnRep_JobSelectionComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnRep_JobSelectionComponent");

	AKSTeamState_OnRep_JobSelectionComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.OnPlayerLogout
// ()

void AKSTeamState::OnPlayerLogout()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.OnPlayerLogout");

	AKSTeamState_OnPlayerLogout_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.NewPingRequest
// ()

void AKSTeamState::NewPingRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.NewPingRequest");

	AKSTeamState_NewPingRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.NewPingRemoveRequest
// ()

void AKSTeamState::NewPingRemoveRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.NewPingRemoveRequest");

	AKSTeamState_NewPingRemoveRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.NewPingChangeRequest
// ()

void AKSTeamState::NewPingChangeRequest()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.NewPingChangeRequest");

	AKSTeamState_NewPingChangeRequest_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.IsEliminated
// ()

void AKSTeamState::IsEliminated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.IsEliminated");

	AKSTeamState_IsEliminated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.IsDefending
// ()

void AKSTeamState::IsDefending()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.IsDefending");

	AKSTeamState_IsDefending_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.IsAttacking
// ()

void AKSTeamState::IsAttacking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.IsAttacking");

	AKSTeamState_IsAttacking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetTeamType
// ()

void AKSTeamState::GetTeamType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetTeamType");

	AKSTeamState_GetTeamType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetRespawnConfig
// ()

void AKSTeamState::GetRespawnConfig()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetRespawnConfig");

	AKSTeamState_GetRespawnConfig_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetRemainingRespawns
// ()

void AKSTeamState::GetRemainingRespawns()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetRemainingRespawns");

	AKSTeamState_GetRemainingRespawns_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetPlayersRemaining
// ()

void AKSTeamState::GetPlayersRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetPlayersRemaining");

	AKSTeamState_GetPlayersRemaining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetNumberOfPlayers
// ()

void AKSTeamState::GetNumberOfPlayers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetNumberOfPlayers");

	AKSTeamState_GetNumberOfPlayers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetLivesRemaining
// ()

void AKSTeamState::GetLivesRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetLivesRemaining");

	AKSTeamState_GetLivesRemaining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetExpectedTeamSize
// ()

void AKSTeamState::GetExpectedTeamSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetExpectedTeamSize");

	AKSTeamState_GetExpectedTeamSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetAllPersistentTeamMembers
// ()

void AKSTeamState::GetAllPersistentTeamMembers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetAllPersistentTeamMembers");

	AKSTeamState_GetAllPersistentTeamMembers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.GetAllMembers
// ()

void AKSTeamState::GetAllMembers()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.GetAllMembers");

	AKSTeamState_GetAllMembers_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.EliminateTeam
// ()

void AKSTeamState::EliminateTeam()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.EliminateTeam");

	AKSTeamState_EliminateTeam_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTeamState.AllPlayersEliminatedOrDowned
// ()

void AKSTeamState::AllPlayersEliminatedOrDowned()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTeamState.AllPlayersEliminatedOrDowned");

	AKSTeamState_AllPlayersEliminatedOrDowned_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSThreatComponent.DebugThreatLevels
// ()

void UKSThreatComponent::DebugThreatLevels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSThreatComponent.DebugThreatLevels");

	UKSThreatComponent_DebugThreatLevels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.StopTimer
// ()

void UKSTimerComponent::StopTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.StopTimer");

	UKSTimerComponent_StopTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.StartTimer
// ()

void UKSTimerComponent::StartTimer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.StartTimer");

	UKSTimerComponent_StartTimer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.OnRep_TimerState
// ()

void UKSTimerComponent::OnRep_TimerState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.OnRep_TimerState");

	UKSTimerComponent_OnRep_TimerState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.IsTimerComplete
// ()

void UKSTimerComponent::IsTimerComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.IsTimerComplete");

	UKSTimerComponent_IsTimerComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.IsTimerActive
// ()

void UKSTimerComponent::IsTimerActive()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.IsTimerActive");

	UKSTimerComponent_IsTimerActive_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.GetTimeRemaining
// ()

void UKSTimerComponent::GetTimeRemaining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.GetTimeRemaining");

	UKSTimerComponent_GetTimeRemaining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSTimerComponent.GetInitialTime
// ()

void UKSTimerComponent::GetInitialTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSTimerComponent.GetInitialTime");

	UKSTimerComponent_GetInitialTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleHit
// ()

void AKSVehicle::VehicleHit()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleHit");

	AKSVehicle_VehicleHit_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleFeatureReleased
// ()

void AKSVehicle::VehicleFeatureReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleFeatureReleased");

	AKSVehicle_VehicleFeatureReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleFeaturePressed
// ()

void AKSVehicle::VehicleFeaturePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleFeaturePressed");

	AKSVehicle_VehicleFeaturePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.VehicleFeature
// ()

void AKSVehicle::VehicleFeature()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.VehicleFeature");

	AKSVehicle_VehicleFeature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.UseReleased
// ()

void AKSVehicle::UseReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.UseReleased");

	AKSVehicle_UseReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.UsePressed
// ()

void AKSVehicle::UsePressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.UsePressed");

	AKSVehicle_UsePressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.TurnCameraY
// ()

void AKSVehicle::TurnCameraY()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.TurnCameraY");

	AKSVehicle_TurnCameraY_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.TurnCameraX
// ()

void AKSVehicle::TurnCameraX()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.TurnCameraX");

	AKSVehicle_TurnCameraX_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.SwapReleased
// ()

void AKSVehicle::SwapReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.SwapReleased");

	AKSVehicle_SwapReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.SwapPressed
// ()

void AKSVehicle::SwapPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.SwapPressed");

	AKSVehicle_SwapPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.StopParachute
// ()

void AKSVehicle::StopParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.StopParachute");

	AKSVehicle_StopParachute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Steer
// ()

void AKSVehicle::Steer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Steer");

	AKSVehicle_Steer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.StartParachute
// ()

void AKSVehicle::StartParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.StartParachute");

	AKSVehicle_StartParachute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerVehicleFeature
// ()

void AKSVehicle::ServerVehicleFeature()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerVehicleFeature");

	AKSVehicle_ServerVehicleFeature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerUpdateRotation
// ()

void AKSVehicle::ServerUpdateRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerUpdateRotation");

	AKSVehicle_ServerUpdateRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerHorn
// ()

void AKSVehicle::ServerHorn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerHorn");

	AKSVehicle_ServerHorn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerGetOut
// ()

void AKSVehicle::ServerGetOut()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerGetOut");

	AKSVehicle_ServerGetOut_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerGetInNextEmptySeat
// ()

void AKSVehicle::ServerGetInNextEmptySeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerGetInNextEmptySeat");

	AKSVehicle_ServerGetInNextEmptySeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ServerAirSpeed
// ()

void AKSVehicle::ServerAirSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ServerAirSpeed");

	AKSVehicle_ServerAirSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.RiderDestroyed
// ()

void AKSVehicle::RiderDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.RiderDestroyed");

	AKSVehicle_RiderDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ResetVehicle
// ()

void AKSVehicle::ResetVehicle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ResetVehicle");

	AKSVehicle_ResetVehicle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ResetInput
// ()

void AKSVehicle::ResetInput()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ResetInput");

	AKSVehicle_ResetInput_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ResetCameraRotations
// ()

void AKSVehicle::ResetCameraRotations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ResetCameraRotations");

	AKSVehicle_ResetCameraRotations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.PlayHealthStageChange
// ()

void AKSVehicle::PlayHealthStageChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.PlayHealthStageChange");

	AKSVehicle_PlayHealthStageChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_Riders
// ()

void AKSVehicle::OnRep_Riders()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_Riders");

	AKSVehicle_OnRep_Riders_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_Driver
// ()

void AKSVehicle::OnRep_Driver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_Driver");

	AKSVehicle_OnRep_Driver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_Destroyed
// ()

void AKSVehicle::OnRep_Destroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_Destroyed");

	AKSVehicle_OnRep_Destroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_CurrentHealthStage
// ()

void AKSVehicle::OnRep_CurrentHealthStage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_CurrentHealthStage");

	AKSVehicle_OnRep_CurrentHealthStage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.OnRep_CurrentHealth
// ()

void AKSVehicle::OnRep_CurrentHealth()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.OnRep_CurrentHealth");

	AKSVehicle_OnRep_CurrentHealth_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.MoveForward
// ()

void AKSVehicle::MoveForward()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.MoveForward");

	AKSVehicle_MoveForward_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.HornReleased
// ()

void AKSVehicle::HornReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.HornReleased");

	AKSVehicle_HornReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.HornPressed
// ()

void AKSVehicle::HornPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.HornPressed");

	AKSVehicle_HornPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Horn
// ()

void AKSVehicle::Horn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Horn");

	AKSVehicle_Horn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.HideParachute
// ()

void AKSVehicle::HideParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.HideParachute");

	AKSVehicle_HideParachute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.GetInHighestPriorityEmptySeat
// ()

void AKSVehicle::GetInHighestPriorityEmptySeat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.GetInHighestPriorityEmptySeat");

	AKSVehicle_GetInHighestPriorityEmptySeat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.GetDriver
// ()

void AKSVehicle::GetDriver()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.GetDriver");

	AKSVehicle_GetDriver_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Explode
// ()

void AKSVehicle::Explode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Explode");

	AKSVehicle_Explode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.ExitPressed
// ()

void AKSVehicle::ExitPressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.ExitPressed");

	AKSVehicle_ExitPressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Deteriorate
// ()

void AKSVehicle::Deteriorate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Deteriorate");

	AKSVehicle_Deteriorate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.BroadcastVehicleFeature
// ()

void AKSVehicle::BroadcastVehicleFeature()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.BroadcastVehicleFeature");

	AKSVehicle_BroadcastVehicleFeature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.BroadcastHorn
// ()

void AKSVehicle::BroadcastHorn()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.BroadcastHorn");

	AKSVehicle_BroadcastHorn_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.Brake
// ()

void AKSVehicle::Brake()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.Brake");

	AKSVehicle_Brake_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle.AirSpeed
// ()

void AKSVehicle::AirSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle.AirSpeed");

	AKSVehicle_AirSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.SetOwningCharacter
// ()

void AKSVehicle_Remote::SetOwningCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.SetOwningCharacter");

	AKSVehicle_Remote_SetOwningCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.OnRep_OwningCharacter
// ()

void AKSVehicle_Remote::OnRep_OwningCharacter()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.OnRep_OwningCharacter");

	AKSVehicle_Remote_OnRep_OwningCharacter_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.Jump
// ()

void AKSVehicle_Remote::Jump()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.Jump");

	AKSVehicle_Remote_Jump_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.GetRemainingBattery
// ()

void AKSVehicle_Remote::GetRemainingBattery()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.GetRemainingBattery");

	AKSVehicle_Remote_GetRemainingBattery_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicle_Remote.ExecuteReveal
// ()

void AKSVehicle_Remote::ExecuteReveal()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicle_Remote.ExecuteReveal");

	AKSVehicle_Remote_ExecuteReveal_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.StopParachute
// ()

void UKSVehicleMovementComponent4W::StopParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.StopParachute");

	UKSVehicleMovementComponent4W_StopParachute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.StartParachute
// ()

void UKSVehicleMovementComponent4W::StartParachute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.StartParachute");

	UKSVehicleMovementComponent4W_StartParachute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.OnRep_ParachuteDeployed
// ()

void UKSVehicleMovementComponent4W::OnRep_ParachuteDeployed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.OnRep_ParachuteDeployed");

	UKSVehicleMovementComponent4W_OnRep_ParachuteDeployed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.OnRep_ManualDetachmentAllowed
// ()

void UKSVehicleMovementComponent4W::OnRep_ManualDetachmentAllowed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.OnRep_ManualDetachmentAllowed");

	UKSVehicleMovementComponent4W_OnRep_ManualDetachmentAllowed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleMovementComponent4W.AttemptManualDetachment
// ()

void UKSVehicleMovementComponent4W::AttemptManualDetachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleMovementComponent4W.AttemptManualDetachment");

	UKSVehicleMovementComponent4W_AttemptManualDetachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVehicleSeatComponent.GetSeatSpringArm
// ()

void UKSVehicleSeatComponent::GetSeatSpringArm()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVehicleSeatComponent.GetSeatSpringArm");

	UKSVehicleSeatComponent_GetSeatSpringArm_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSViewModel.BeginRotationReset
// ()

void AKSViewModel::BeginRotationReset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSViewModel.BeginRotationReset");

	AKSViewModel_BeginRotationReset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSViewModelInterface.GetViewModelName
// ()

void UKSViewModelInterface::GetViewModelName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSViewModelInterface.GetViewModelName");

	UKSViewModelInterface_GetViewModelName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.TeamStateChanged
// ()

void UKSVOComponent::TeamStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.TeamStateChanged");

	UKSVOComponent_TeamStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.ServerPostVO
// ()

void UKSVOComponent::ServerPostVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.ServerPostVO");

	UKSVOComponent_ServerPostVO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PostVOToServer
// ()

void UKSVOComponent::PostVOToServer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PostVOToServer");

	UKSVOComponent_PostVOToServer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PostVO
// ()

void UKSVOComponent::PostVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PostVO");

	UKSVOComponent_PostVO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PlayVO
// ()

void UKSVOComponent::PlayVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PlayVO");

	UKSVOComponent_PlayVO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.PlayerStateChanged
// ()

void UKSVOComponent::PlayerStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.PlayerStateChanged");

	UKSVOComponent_PlayerStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.OwnerPossessedBy
// ()

void UKSVOComponent::OwnerPossessedBy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.OwnerPossessedBy");

	UKSVOComponent_OwnerPossessedBy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.OnReadyToPlay
// ()

void UKSVOComponent::OnReadyToPlay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.OnReadyToPlay");

	UKSVOComponent_OnReadyToPlay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.ForcePlayVO
// ()

void UKSVOComponent::ForcePlayVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.ForcePlayVO");

	UKSVOComponent_ForcePlayVO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.ConditionalPlayVO
// ()

void UKSVOComponent::ConditionalPlayVO()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.ConditionalPlayVO");

	UKSVOComponent_ConditionalPlayVO_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToTeamStateEvents
// ()

void UKSVOComponent::BindToTeamStateEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToTeamStateEvents");

	UKSVOComponent_BindToTeamStateEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToPlayerStateEvents
// ()

void UKSVOComponent::BindToPlayerStateEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToPlayerStateEvents");

	UKSVOComponent_BindToPlayerStateEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToPlayerControllerEvents
// ()

void UKSVOComponent::BindToPlayerControllerEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToPlayerControllerEvents");

	UKSVOComponent_BindToPlayerControllerEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToPingManagerEvents
// ()

void UKSVOComponent::BindToPingManagerEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToPingManagerEvents");

	UKSVOComponent_BindToPingManagerEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToGameStateEvents
// ()

void UKSVOComponent::BindToGameStateEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToGameStateEvents");

	UKSVOComponent_BindToGameStateEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToEvents
// ()

void UKSVOComponent::BindToEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToEvents");

	UKSVOComponent_BindToEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToCharacterEvents
// ()

void UKSVOComponent::BindToCharacterEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToCharacterEvents");

	UKSVOComponent_BindToCharacterEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.BindToActivatableModEvents
// ()

void UKSVOComponent::BindToActivatableModEvents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.BindToActivatableModEvents");

	UKSVOComponent_BindToActivatableModEvents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSVOComponent.AnnounceBombSpotted
// ()

void UKSVOComponent::AnnounceBombSpotted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSVOComponent.AnnounceBombSpotted");

	UKSVOComponent_AnnounceBombSpotted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWaterFXVolume.OnWaterFXTriggered
// ()

void AKSWaterFXVolume::OnWaterFXTriggered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWaterFXVolume.OnWaterFXTriggered");

	AKSWaterFXVolume_OnWaterFXTriggered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWaterFXVolume.OnWaterExited
// ()

void AKSWaterFXVolume::OnWaterExited()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWaterFXVolume.OnWaterExited");

	AKSWaterFXVolume_OnWaterExited_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWaterFXVolume.OnWaterEntered
// ()

void AKSWaterFXVolume::OnWaterEntered()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWaterFXVolume.OnWaterEntered");

	AKSWaterFXVolume_OnWaterEntered_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_ParentEquipmentId
// ()

void UKSWeaponAttachmentCosmeticInst::OnRep_ParentEquipmentId()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_ParentEquipmentId");

	UKSWeaponAttachmentCosmeticInst_OnRep_ParentEquipmentId_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachPoint
// ()

void UKSWeaponAttachmentCosmeticInst::OnRep_AttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachPoint");

	UKSWeaponAttachmentCosmeticInst_OnRep_AttachPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachmentAsset
// ()

void UKSWeaponAttachmentCosmeticInst::OnRep_AttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.OnRep_AttachmentAsset");

	UKSWeaponAttachmentCosmeticInst_OnRep_AttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.IsInitialized
// ()

void UKSWeaponAttachmentCosmeticInst::IsInitialized()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.IsInitialized");

	UKSWeaponAttachmentCosmeticInst_IsInitialized_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetParentComponent
// ()

void UKSWeaponAttachmentCosmeticInst::GetParentComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetParentComponent");

	UKSWeaponAttachmentCosmeticInst_GetParentComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetLoadedMeshAnimAnimOverrideData
// ()

void UKSWeaponAttachmentCosmeticInst::GetLoadedMeshAnimAnimOverrideData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetLoadedMeshAnimAnimOverrideData");

	UKSWeaponAttachmentCosmeticInst_GetLoadedMeshAnimAnimOverrideData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachPoint
// ()

void UKSWeaponAttachmentCosmeticInst::GetAttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachPoint");

	UKSWeaponAttachmentCosmeticInst_GetAttachPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachmentAsset
// ()

void UKSWeaponAttachmentCosmeticInst::GetAttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAttachmentAsset");

	UKSWeaponAttachmentCosmeticInst_GetAttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAccumulatedMeshAndAnimOverrideData
// ()

void UKSWeaponAttachmentCosmeticInst::GetAccumulatedMeshAndAnimOverrideData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentCosmeticInst.GetAccumulatedMeshAndAnimOverrideData");

	UKSWeaponAttachmentCosmeticInst_GetAccumulatedMeshAndAnimOverrideData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWAttachmentCosmetic_VarScope.OnRep_ScopeZoomIndex
// ()

void UKSWAttachmentCosmetic_VarScope::OnRep_ScopeZoomIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWAttachmentCosmetic_VarScope.OnRep_ScopeZoomIndex");

	UKSWAttachmentCosmetic_VarScope_OnRep_ScopeZoomIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWayPoint.GetNextWayPoints
// ()

void AKSWayPoint::GetNextWayPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPoint.GetNextWayPoints");

	AKSWayPoint_GetNextWayPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWayPointSet.UpdateWayPointVisuals
// ()

void AKSWayPointSet::UpdateWayPointVisuals()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPointSet.UpdateWayPointVisuals");

	AKSWayPointSet_UpdateWayPointVisuals_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWayPointSet.ShouldSideReverseOnThisWaypointSet
// ()

void AKSWayPointSet::ShouldSideReverseOnThisWaypointSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPointSet.ShouldSideReverseOnThisWaypointSet");

	AKSWayPointSet_ShouldSideReverseOnThisWaypointSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWayPointSet.LinkWayPoints
// ()

void AKSWayPointSet::LinkWayPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPointSet.LinkWayPoints");

	AKSWayPointSet_LinkWayPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWayPointSet.CanSideUseThisWaypointSet
// ()

void AKSWayPointSet::CanSideUseThisWaypointSet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWayPointSet.CanSideUseThisWaypointSet");

	AKSWayPointSet_CanSideUseThisWaypointSet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ValidateReceivedAimData
// ()

void AKSWeapon_Aimed::ValidateReceivedAimData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ValidateReceivedAimData");

	AKSWeapon_Aimed_ValidateReceivedAimData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ValidateHitWithAimData
// ()

void AKSWeapon_Aimed::ValidateHitWithAimData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ValidateHitWithAimData");

	AKSWeapon_Aimed_ValidateHitWithAimData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.StaticDefaultGetAim
// ()

void AKSWeapon_Aimed::StaticDefaultGetAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.StaticDefaultGetAim");

	AKSWeapon_Aimed_StaticDefaultGetAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ServerSetAimOverShoulder
// ()

void AKSWeapon_Aimed::ServerSetAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerSetAimOverShoulder");

	AKSWeapon_Aimed_ServerSetAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ServerReFireWeaponAimed
// ()

void AKSWeapon_Aimed::ServerReFireWeaponAimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerReFireWeaponAimed");

	AKSWeapon_Aimed_ServerReFireWeaponAimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ServerProcessHits
// ()

void AKSWeapon_Aimed::ServerProcessHits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerProcessHits");

	AKSWeapon_Aimed_ServerProcessHits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ServerFireWeaponAimedCompressed
// ()

void AKSWeapon_Aimed::ServerFireWeaponAimedCompressed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerFireWeaponAimedCompressed");

	AKSWeapon_Aimed_ServerFireWeaponAimedCompressed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ServerFireWeaponAimed
// ()

void AKSWeapon_Aimed::ServerFireWeaponAimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ServerFireWeaponAimed");

	AKSWeapon_Aimed_ServerFireWeaponAimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAOS
// ()

void AKSWeapon_Aimed::IsInOrTransitioningToAOS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAOS");

	AKSWeapon_Aimed_IsInOrTransitioningToAOS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAlternate
// ()

void AKSWeapon_Aimed::IsInOrTransitioningToAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToAlternate");

	AKSWeapon_Aimed_IsInOrTransitioningToAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToADS
// ()

void AKSWeapon_Aimed::IsInOrTransitioningToADS()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsInOrTransitioningToADS");

	AKSWeapon_Aimed_IsInOrTransitioningToADS_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsAimingOverShoulder
// ()

void AKSWeapon_Aimed::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAimingOverShoulder");

	AKSWeapon_Aimed_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsAimingDownSights
// ()

void AKSWeapon_Aimed::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAimingDownSights");

	AKSWeapon_Aimed_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsAimingAlternate
// ()

void AKSWeapon_Aimed::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAimingAlternate");

	AKSWeapon_Aimed_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.IsAiming
// ()

void AKSWeapon_Aimed::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.IsAiming");

	AKSWeapon_Aimed_IsAiming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.InternalGetActorsToIgnore
// ()

void AKSWeapon_Aimed::InternalGetActorsToIgnore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.InternalGetActorsToIgnore");

	AKSWeapon_Aimed_InternalGetActorsToIgnore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetRange
// ()

void AKSWeapon_Aimed::GetRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetRange");

	AKSWeapon_Aimed_GetRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetOwnerAimMode
// ()

void AKSWeapon_Aimed::GetOwnerAimMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetOwnerAimMode");

	AKSWeapon_Aimed_GetOwnerAimMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionRange
// ()

void AKSWeapon_Aimed::GetHeadAimCorrectionRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionRange");

	AKSWeapon_Aimed_GetHeadAimCorrectionRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionOffset
// ()

void AKSWeapon_Aimed::GetHeadAimCorrectionOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetHeadAimCorrectionOffset");

	AKSWeapon_Aimed_GetHeadAimCorrectionOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetFullFireRepData
// ()

void AKSWeapon_Aimed::GetFullFireRepData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetFullFireRepData");

	AKSWeapon_Aimed_GetFullFireRepData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetCurrentAccuracy
// ()

void AKSWeapon_Aimed::GetCurrentAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetCurrentAccuracy");

	AKSWeapon_Aimed_GetCurrentAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetCachedAim
// ()

void AKSWeapon_Aimed::GetCachedAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetCachedAim");

	AKSWeapon_Aimed_GetCachedAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetAim
// ()

void AKSWeapon_Aimed::GetAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetAim");

	AKSWeapon_Aimed_GetAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.GetActorsToIgnore
// ()

void AKSWeapon_Aimed::GetActorsToIgnore()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.GetActorsToIgnore");

	AKSWeapon_Aimed_GetActorsToIgnore_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ApplyView
// ()

void AKSWeapon_Aimed::ApplyView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ApplyView");

	AKSWeapon_Aimed_ApplyView_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ApplyAimAssist
// ()

void AKSWeapon_Aimed::ApplyAimAssist()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ApplyAimAssist");

	AKSWeapon_Aimed_ApplyAimAssist_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.ApplyAccuracy
// ()

void AKSWeapon_Aimed::ApplyAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.ApplyAccuracy");

	AKSWeapon_Aimed_ApplyAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Aimed.AllowAimCorrection
// ()

void AKSWeapon_Aimed::AllowAimCorrection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Aimed.AllowAimCorrection");

	AKSWeapon_Aimed_AllowAimCorrection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Build.OnRep_BuildState
// ()

void AKSWeapon_Build::OnRep_BuildState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.OnRep_BuildState");

	AKSWeapon_Build_OnRep_BuildState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Build.GetDesiredBuildLocationAndRotation
// ()

void AKSWeapon_Build::GetDesiredBuildLocationAndRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.GetDesiredBuildLocationAndRotation");

	AKSWeapon_Build_GetDesiredBuildLocationAndRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Build.GetBuildPreviewActorClass
// ()

void AKSWeapon_Build::GetBuildPreviewActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.GetBuildPreviewActorClass");

	AKSWeapon_Build_GetBuildPreviewActorClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Build.GetBuildActorClass
// ()

void AKSWeapon_Build::GetBuildActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Build.GetBuildActorClass");

	AKSWeapon_Build_GetBuildActorClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_DirectTarget.SubmitTargetSelection
// ()

void AKSWeapon_DirectTarget::SubmitTargetSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.SubmitTargetSelection");

	AKSWeapon_DirectTarget_SubmitTargetSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_DirectTarget.PopulateValidTargets
// ()

void AKSWeapon_DirectTarget::PopulateValidTargets()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.PopulateValidTargets");

	AKSWeapon_DirectTarget_PopulateValidTargets_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_DirectTarget.OnActiveTargetDestroyed
// ()

void AKSWeapon_DirectTarget::OnActiveTargetDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.OnActiveTargetDestroyed");

	AKSWeapon_DirectTarget_OnActiveTargetDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_DirectTarget.IsTargetValid
// ()

void AKSWeapon_DirectTarget::IsTargetValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.IsTargetValid");

	AKSWeapon_DirectTarget_IsTargetValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_DirectTarget.ClientRejectTargetSelection
// ()

void AKSWeapon_DirectTarget::ClientRejectTargetSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_DirectTarget.ClientRejectTargetSelection");

	AKSWeapon_DirectTarget_ClientRejectTargetSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_GrenadeThrow.OnFuseTimerExpired
// ()

void AKSWeapon_GrenadeThrow::OnFuseTimerExpired()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_GrenadeThrow.OnFuseTimerExpired");

	AKSWeapon_GrenadeThrow_OnFuseTimerExpired_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_GrenadeThrow.DoFumble
// ()

void AKSWeapon_GrenadeThrow::DoFumble()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_GrenadeThrow.DoFumble");

	AKSWeapon_GrenadeThrow_DoFumble_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.OnRep_Projectile
// ()

void AKSWeapon_Melee::OnRep_Projectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.OnRep_Projectile");

	AKSWeapon_Melee_OnRep_Projectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.OnProjectileReclaimed
// ()

void AKSWeapon_Melee::OnProjectileReclaimed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.OnProjectileReclaimed");

	AKSWeapon_Melee_OnProjectileReclaimed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.OnOwnerAimStateChanged
// ()

void AKSWeapon_Melee::OnOwnerAimStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.OnOwnerAimStateChanged");

	AKSWeapon_Melee_OnOwnerAimStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.OnLungingChanged
// ()

void AKSWeapon_Melee::OnLungingChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.OnLungingChanged");

	AKSWeapon_Melee_OnLungingChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.JumpToFire
// ()

void AKSWeapon_Melee::JumpToFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.JumpToFire");

	AKSWeapon_Melee_JumpToFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.IncPrefireSkipWindow
// ()

void AKSWeapon_Melee::IncPrefireSkipWindow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.IncPrefireSkipWindow");

	AKSWeapon_Melee_IncPrefireSkipWindow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Melee.GetProjectile
// ()

void AKSWeapon_Melee::GetProjectile()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Melee.GetProjectile");

	AKSWeapon_Melee_GetProjectile_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Proximity.ProximityActorUpdated
// ()

void AKSWeapon_Proximity::ProximityActorUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.ProximityActorUpdated");

	AKSWeapon_Proximity_ProximityActorUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Proximity.OnCachedProximityActorsUpdated
// ()

void AKSWeapon_Proximity::OnCachedProximityActorsUpdated()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.OnCachedProximityActorsUpdated");

	AKSWeapon_Proximity_OnCachedProximityActorsUpdated_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Proximity.GetProximityTraceRelativeLocation
// ()

void AKSWeapon_Proximity::GetProximityTraceRelativeLocation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.GetProximityTraceRelativeLocation");

	AKSWeapon_Proximity_GetProximityTraceRelativeLocation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Proximity.GetProximityComponent
// ()

void AKSWeapon_Proximity::GetProximityComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.GetProximityComponent");

	AKSWeapon_Proximity_GetProximityComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Proximity.GetCachedProximityActors
// ()

void AKSWeapon_Proximity::GetCachedProximityActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Proximity.GetCachedProximityActors");

	AKSWeapon_Proximity_GetCachedProximityActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteRocket.OnRocketDestroyed
// ()

void AKSWeapon_RemoteRocket::OnRocketDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.OnRocketDestroyed");

	AKSWeapon_RemoteRocket_OnRocketDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteRocket.OnPostDestroyDelayComplete
// ()

void AKSWeapon_RemoteRocket::OnPostDestroyDelayComplete()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.OnPostDestroyDelayComplete");

	AKSWeapon_RemoteRocket_OnPostDestroyDelayComplete_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteRocket.GetSpawnedRocket
// ()

void AKSWeapon_RemoteRocket::GetSpawnedRocket()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.GetSpawnedRocket");

	AKSWeapon_RemoteRocket_GetSpawnedRocket_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteRocket.GetRocketSpawnWorldTransform
// ()

void AKSWeapon_RemoteRocket::GetRocketSpawnWorldTransform()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteRocket.GetRocketSpawnWorldTransform");

	AKSWeapon_RemoteRocket_GetRocketSpawnWorldTransform_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteThrow.SwapToDetonator
// ()

void AKSWeapon_RemoteThrow::SwapToDetonator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.SwapToDetonator");

	AKSWeapon_RemoteThrow_SwapToDetonator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteThrow.OnProjectileReleased
// ()

void AKSWeapon_RemoteThrow::OnProjectileReleased()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.OnProjectileReleased");

	AKSWeapon_RemoteThrow_OnProjectileReleased_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteThrow.OnAttachedChargeDestroyed
// ()

void AKSWeapon_RemoteThrow::OnAttachedChargeDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.OnAttachedChargeDestroyed");

	AKSWeapon_RemoteThrow_OnAttachedChargeDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteThrow.GetAttachedCharges
// ()

void AKSWeapon_RemoteThrow::GetAttachedCharges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteThrow.GetAttachedCharges");

	AKSWeapon_RemoteThrow_GetAttachedCharges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteTrigger.SwapOffDetonator
// ()

void AKSWeapon_RemoteTrigger::SwapOffDetonator()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.SwapOffDetonator");

	AKSWeapon_RemoteTrigger_SwapOffDetonator_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteTrigger.OnAttachedChargeKilled
// ()

void AKSWeapon_RemoteTrigger::OnAttachedChargeKilled()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.OnAttachedChargeKilled");

	AKSWeapon_RemoteTrigger_OnAttachedChargeKilled_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteTrigger.OnAttachedChargeDestroyed
// ()

void AKSWeapon_RemoteTrigger::OnAttachedChargeDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.OnAttachedChargeDestroyed");

	AKSWeapon_RemoteTrigger_OnAttachedChargeDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteTrigger.GetAttachedCharges
// ()

void AKSWeapon_RemoteTrigger::GetAttachedCharges()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.GetAttachedCharges");

	AKSWeapon_RemoteTrigger_GetAttachedCharges_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteTrigger.Detonate
// ()

void AKSWeapon_RemoteTrigger::Detonate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteTrigger.Detonate");

	AKSWeapon_RemoteTrigger_Detonate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_RemoteVehicle.VehicleDestroyed
// ()

void AKSWeapon_RemoteVehicle::VehicleDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_RemoteVehicle.VehicleDestroyed");

	AKSWeapon_RemoteVehicle_VehicleDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveSucceed
// ()

void AKSWeapon_ReviveDartDirect::OnReviveSucceed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveSucceed");

	AKSWeapon_ReviveDartDirect_OnReviveSucceed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveFailed
// ()

void AKSWeapon_ReviveDartDirect::OnReviveFailed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDartDirect.OnReviveFailed");

	AKSWeapon_ReviveDartDirect_OnReviveFailed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Targeted.TargetCurrentlyValid
// ()

void AKSWeapon_Targeted::TargetCurrentlyValid()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.TargetCurrentlyValid");

	AKSWeapon_Targeted_TargetCurrentlyValid_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Targeted.SubmitTargetedActor
// ()

void AKSWeapon_Targeted::SubmitTargetedActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.SubmitTargetedActor");

	AKSWeapon_Targeted_SubmitTargetedActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Targeted.ConfirmTargetSelection
// ()

void AKSWeapon_Targeted::ConfirmTargetSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.ConfirmTargetSelection");

	AKSWeapon_Targeted_ConfirmTargetSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_Targeted.CancelTargetSelection
// ()

void AKSWeapon_Targeted::CancelTargetSelection()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_Targeted.CancelTargetSelection");

	AKSWeapon_Targeted_CancelTargetSelection_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.OnRep_DroneActor
// ()

void AKSWeapon_ReviveDroneDirect::OnRep_DroneActor()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.OnRep_DroneActor");

	AKSWeapon_ReviveDroneDirect_OnRep_DroneActor_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneDestroy
// ()

void AKSWeapon_ReviveDroneDirect::OnDroneDestroy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneDestroy");

	AKSWeapon_ReviveDroneDirect_OnDroneDestroy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneAborted
// ()

void AKSWeapon_ReviveDroneDirect::OnDroneAborted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.OnDroneAborted");

	AKSWeapon_ReviveDroneDirect_OnDroneAborted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeapon_ReviveDroneDirect.GetDesiredSpawnLocationAndRotation
// ()

void AKSWeapon_ReviveDroneDirect::GetDesiredSpawnLocationAndRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeapon_ReviveDroneDirect.GetDesiredSpawnLocationAndRotation");

	AKSWeapon_ReviveDroneDirect_GetDesiredSpawnLocationAndRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAnimInstance.PlayFireAnimationBP
// ()

void UKSWeaponAnimInstance::PlayFireAnimationBP()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAnimInstance.PlayFireAnimationBP");

	UKSWeaponAnimInstance_PlayFireAnimationBP_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Build.GetSoftBuildPreviewActorClass
// ()

void UKSWeaponAsset_Build::GetSoftBuildPreviewActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Build.GetSoftBuildPreviewActorClass");

	UKSWeaponAsset_Build_GetSoftBuildPreviewActorClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Build.GetSoftBuildActorClass
// ()

void UKSWeaponAsset_Build::GetSoftBuildActorClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Build.GetSoftBuildActorClass");

	UKSWeaponAsset_Build_GetSoftBuildActorClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Build.GetBuildActivationDelay
// ()

void UKSWeaponAsset_Build::GetBuildActivationDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Build.GetBuildActivationDelay");

	UKSWeaponAsset_Build_GetBuildActivationDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetRadialDamageOriginOffsetDistance
// ()

void UKSWeaponAsset_WithProjectile::GetRadialDamageOriginOffsetDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetRadialDamageOriginOffsetDistance");

	UKSWeaponAsset_WithProjectile_GetRadialDamageOriginOffsetDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileWeaponAsset
// ()

void UKSWeaponAsset_WithProjectile::GetProjectileWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileWeaponAsset");

	UKSWeaponAsset_WithProjectile_GetProjectileWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileRadius
// ()

void UKSWeaponAsset_WithProjectile::GetProjectileRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileRadius");

	UKSWeaponAsset_WithProjectile_GetProjectileRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationTimeStep
// ()

void UKSWeaponAsset_WithProjectile::GetProjectileMaxSimulationTimeStep()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationTimeStep");

	UKSWeaponAsset_WithProjectile_GetProjectileMaxSimulationTimeStep_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationIterations
// ()

void UKSWeaponAsset_WithProjectile::GetProjectileMaxSimulationIterations()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileMaxSimulationIterations");

	UKSWeaponAsset_WithProjectile_GetProjectileMaxSimulationIterations_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileInitialSpeed
// ()

void UKSWeaponAsset_WithProjectile::GetProjectileInitialSpeed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileInitialSpeed");

	UKSWeaponAsset_WithProjectile_GetProjectileInitialSpeed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileGravityScale
// ()

void UKSWeaponAsset_WithProjectile::GetProjectileGravityScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileGravityScale");

	UKSWeaponAsset_WithProjectile_GetProjectileGravityScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileClass
// ()

void UKSWeaponAsset_WithProjectile::GetProjectileClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_WithProjectile.GetProjectileClass");

	UKSWeaponAsset_WithProjectile_GetProjectileClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetMinimumCookTime
// ()

void UKSWeaponAsset_Grenade::GetMinimumCookTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetMinimumCookTime");

	UKSWeaponAsset_Grenade_GetMinimumCookTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetMinHandRemainingFuse
// ()

void UKSWeaponAsset_Grenade::GetMinHandRemainingFuse()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetMinHandRemainingFuse");

	UKSWeaponAsset_Grenade_GetMinHandRemainingFuse_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetFuseTime
// ()

void UKSWeaponAsset_Grenade::GetFuseTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetFuseTime");

	UKSWeaponAsset_Grenade_GetFuseTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Grenade.GetFuseTicksInHand
// ()

void UKSWeaponAsset_Grenade::GetFuseTicksInHand()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.GetFuseTicksInHand");

	UKSWeaponAsset_Grenade_GetFuseTicksInHand_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Grenade.AllowCooking
// ()

void UKSWeaponAsset_Grenade::AllowCooking()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Grenade.AllowCooking");

	UKSWeaponAsset_Grenade_AllowCooking_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Melee.GetOverlapObjectTypes
// ()

void UKSWeaponAsset_Melee::GetOverlapObjectTypes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetOverlapObjectTypes");

	UKSWeaponAsset_Melee_GetOverlapObjectTypes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMeleeTraceChannel
// ()

void UKSWeaponAsset_Melee::GetMeleeTraceChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMeleeTraceChannel");

	UKSWeaponAsset_Melee_GetMeleeTraceChannel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMeleeSphereRadius
// ()

void UKSWeaponAsset_Melee::GetMeleeSphereRadius()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMeleeSphereRadius");

	UKSWeaponAsset_Melee_GetMeleeSphereRadius_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMeleeSphereOffset
// ()

void UKSWeaponAsset_Melee::GetMeleeSphereOffset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMeleeSphereOffset");

	UKSWeaponAsset_Melee_GetMeleeSphereOffset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDuration
// ()

void UKSWeaponAsset_Melee::GetMaxLungeDuration()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDuration");

	UKSWeaponAsset_Melee_GetMaxLungeDuration_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDistance
// ()

void UKSWeaponAsset_Melee::GetMaxLungeDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetMaxLungeDistance");

	UKSWeaponAsset_Melee_GetMaxLungeDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Melee.GetLungeConeHalfAngle
// ()

void UKSWeaponAsset_Melee::GetLungeConeHalfAngle()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Melee.GetLungeConeHalfAngle");

	UKSWeaponAsset_Melee_GetLungeConeHalfAngle_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Pierce.GetDamageScalarAfterWalls
// ()

void UKSWeaponAsset_Pierce::GetDamageScalarAfterWalls()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Pierce.GetDamageScalarAfterWalls");

	UKSWeaponAsset_Pierce_GetDamageScalarAfterWalls_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetSpreadPattern
// ()

void UKSWeaponAsset_Shotgun::GetSpreadPattern()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetSpreadPattern");

	UKSWeaponAsset_Shotgun_GetSpreadPattern_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetPelletsPerShot
// ()

void UKSWeaponAsset_Shotgun::GetPelletsPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetPelletsPerShot");

	UKSWeaponAsset_Shotgun_GetPelletsPerShot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetHitPercentageForHeadshot
// ()

void UKSWeaponAsset_Shotgun::GetHitPercentageForHeadshot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetHitPercentageForHeadshot");

	UKSWeaponAsset_Shotgun_GetHitPercentageForHeadshot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Shotgun.GetAimDownSightsAccuracy
// ()

void UKSWeaponAsset_Shotgun::GetAimDownSightsAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.GetAimDownSightsAccuracy");

	UKSWeaponAsset_Shotgun_GetAimDownSightsAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAsset_Shotgun.DoesUseSpreadPattern
// ()

void UKSWeaponAsset_Shotgun::DoesUseSpreadPattern()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAsset_Shotgun.DoesUseSpreadPattern");

	UKSWeaponAsset_Shotgun_DoesUseSpreadPattern_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.GetValidAttachPoints
// ()

void UKSWeaponAttachment::GetValidAttachPoints()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.GetValidAttachPoints");

	UKSWeaponAttachment_GetValidAttachPoints_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.GetFunctionalClass
// ()

void UKSWeaponAttachment::GetFunctionalClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.GetFunctionalClass");

	UKSWeaponAttachment_GetFunctionalClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.GetCosmeticClass
// ()

void UKSWeaponAttachment::GetCosmeticClass()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.GetCosmeticClass");

	UKSWeaponAttachment_GetCosmeticClass_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.GetCompatibleWeaponTypes
// ()

void UKSWeaponAttachment::GetCompatibleWeaponTypes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.GetCompatibleWeaponTypes");

	UKSWeaponAttachment_GetCompatibleWeaponTypes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.CanAttachToWeaponType
// ()

void UKSWeaponAttachment::CanAttachToWeaponType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.CanAttachToWeaponType");

	UKSWeaponAttachment_CanAttachToWeaponType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment.CanAttachTo
// ()

void UKSWeaponAttachment::CanAttachTo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment.CanAttachTo");

	UKSWeaponAttachment_CanAttachTo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_ExtMagazine.GetClipSize
// ()

void UKSWeaponAttachment_ExtMagazine::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_ExtMagazine.GetClipSize");

	UKSWeaponAttachment_ExtMagazine_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_QuickMag.GetReloadPeriodMultiplier
// ()

void UKSWeaponAttachment_QuickMag::GetReloadPeriodMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_QuickMag.GetReloadPeriodMultiplier");

	UKSWeaponAttachment_QuickMag_GetReloadPeriodMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_ScopeFixedFOV.GetAimDownSightsFieldOfView
// ()

void UKSWeaponAttachment_ScopeFixedFOV::GetAimDownSightsFieldOfView()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_ScopeFixedFOV.GetAimDownSightsFieldOfView");

	UKSWeaponAttachment_ScopeFixedFOV_GetAimDownSightsFieldOfView_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_ScopeMultiply.GetScopeMultiplier
// ()

void UKSWeaponAttachment_ScopeMultiply::GetScopeMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_ScopeMultiply.GetScopeMultiplier");

	UKSWeaponAttachment_ScopeMultiply_GetScopeMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_Silencer.GetAudibleRange
// ()

void UKSWeaponAttachment_Silencer::GetAudibleRange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_Silencer.GetAudibleRange");

	UKSWeaponAttachment_Silencer_GetAudibleRange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOVOptions
// ()

void UKSWeaponAttachment_VarScope::GetScopeFOVOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOVOptions");

	UKSWeaponAttachment_VarScope_GetScopeFOVOptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOV
// ()

void UKSWeaponAttachment_VarScope::GetScopeFOV()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_VarScope.GetScopeFOV");

	UKSWeaponAttachment_VarScope_GetScopeFOV_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachment_VarScope.GetNumScopeOptions
// ()

void UKSWeaponAttachment_VarScope::GetNumScopeOptions()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachment_VarScope.GetNumScopeOptions");

	UKSWeaponAttachment_VarScope_GetNumScopeOptions_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.SetPersistsOnWeaponDrop
// ()

void UKSWeaponAttachmentInstance::SetPersistsOnWeaponDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.SetPersistsOnWeaponDrop");

	UKSWeaponAttachmentInstance_SetPersistsOnWeaponDrop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnUnattached
// ()

void UKSWeaponAttachmentInstance::OnUnattached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnUnattached");

	UKSWeaponAttachmentInstance_OnUnattached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachPoint
// ()

void UKSWeaponAttachmentInstance::OnRep_AttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachPoint");

	UKSWeaponAttachmentInstance_OnRep_AttachPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachmentAsset
// ()

void UKSWeaponAttachmentInstance::OnRep_AttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnRep_AttachmentAsset");

	UKSWeaponAttachmentInstance_OnRep_AttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.OnAttached
// ()

void UKSWeaponAttachmentInstance::OnAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.OnAttached");

	UKSWeaponAttachmentInstance_OnAttached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.IsAttached
// ()

void UKSWeaponAttachmentInstance::IsAttached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.IsAttached");

	UKSWeaponAttachmentInstance_IsAttached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetPersistsOnWeaponDrop
// ()

void UKSWeaponAttachmentInstance::GetPersistsOnWeaponDrop()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetPersistsOnWeaponDrop");

	UKSWeaponAttachmentInstance_GetPersistsOnWeaponDrop_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetOwningWeapon
// ()

void UKSWeaponAttachmentInstance::GetOwningWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetOwningWeapon");

	UKSWeaponAttachmentInstance_GetOwningWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetAttachPoint
// ()

void UKSWeaponAttachmentInstance::GetAttachPoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetAttachPoint");

	UKSWeaponAttachmentInstance_GetAttachPoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInstance.GetAttachmentAsset
// ()

void UKSWeaponAttachmentInstance::GetAttachmentAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInstance.GetAttachmentAsset");

	UKSWeaponAttachmentInstance_GetAttachmentAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponAttachmentInst_VarScope.ServerSetScopeZoomIndex
// ()

void UKSWeaponAttachmentInst_VarScope::ServerSetScopeZoomIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponAttachmentInst_VarScope.ServerSetScopeZoomIndex");

	UKSWeaponAttachmentInst_VarScope_ServerSetScopeZoomIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.UpdateOwnerLocallyViewed
// ()

void UKSWeaponComponent::UpdateOwnerLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.UpdateOwnerLocallyViewed");

	UKSWeaponComponent_UpdateOwnerLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.UpdateAimDownSightsBlurValues
// ()

void UKSWeaponComponent::UpdateAimDownSightsBlurValues()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.UpdateAimDownSightsBlurValues");

	UKSWeaponComponent_UpdateAimDownSightsBlurValues_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TriggerEngagement
// ()

void UKSWeaponComponent::TriggerEngagement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TriggerEngagement");

	UKSWeaponComponent_TriggerEngagement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TriggerCombat
// ()

void UKSWeaponComponent::TriggerCombat()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TriggerCombat");

	UKSWeaponComponent_TriggerCombat_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TickViewerAim
// ()

void UKSWeaponComponent::TickViewerAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TickViewerAim");

	UKSWeaponComponent_TickViewerAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.TickNonViewerAim
// ()

void UKSWeaponComponent::TickNonViewerAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.TickNonViewerAim");

	UKSWeaponComponent_TickNonViewerAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopDefaultAim
// ()

void UKSWeaponComponent::StopDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopDefaultAim");

	UKSWeaponComponent_StopDefaultAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopAimOverShoulder
// ()

void UKSWeaponComponent::StopAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopAimOverShoulder");

	UKSWeaponComponent_StopAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopAimDownSights
// ()

void UKSWeaponComponent::StopAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopAimDownSights");

	UKSWeaponComponent_StopAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StopAimAlternate
// ()

void UKSWeaponComponent::StopAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StopAimAlternate");

	UKSWeaponComponent_StopAimAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartDefaultAim
// ()

void UKSWeaponComponent::StartDefaultAim()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartDefaultAim");

	UKSWeaponComponent_StartDefaultAim_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartAimOverShoulder
// ()

void UKSWeaponComponent::StartAimOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartAimOverShoulder");

	UKSWeaponComponent_StartAimOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartAimDownSights
// ()

void UKSWeaponComponent::StartAimDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartAimDownSights");

	UKSWeaponComponent_StartAimDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.StartAimAlternate
// ()

void UKSWeaponComponent::StartAimAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.StartAimAlternate");

	UKSWeaponComponent_StartAimAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ShouldBroadcastWeaponStateChange
// ()

void UKSWeaponComponent::ShouldBroadcastWeaponStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ShouldBroadcastWeaponStateChange");

	UKSWeaponComponent_ShouldBroadcastWeaponStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.SetWeaponVisibility
// ()

void UKSWeaponComponent::SetWeaponVisibility()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.SetWeaponVisibility");

	UKSWeaponComponent_SetWeaponVisibility_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ReportNewWeaponLowerAlpha
// ()

void UKSWeaponComponent::ReportNewWeaponLowerAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ReportNewWeaponLowerAlpha");

	UKSWeaponComponent_ReportNewWeaponLowerAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.PostCreateWeaponSkeletalMeshComponent
// ()

void UKSWeaponComponent::PostCreateWeaponSkeletalMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.PostCreateWeaponSkeletalMeshComponent");

	UKSWeaponComponent_PostCreateWeaponSkeletalMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnWeaponStateChanged
// ()

void UKSWeaponComponent::OnWeaponStateChanged()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnWeaponStateChanged");

	UKSWeaponComponent_OnWeaponStateChanged_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnUnsetAsActivePrimaryWeapon
// ()

void UKSWeaponComponent::OnUnsetAsActivePrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnUnsetAsActivePrimaryWeapon");

	UKSWeaponComponent_OnUnsetAsActivePrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnSkyDiveStarted
// ()

void UKSWeaponComponent::OnSkyDiveStarted()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnSkyDiveStarted");

	UKSWeaponComponent_OnSkyDiveStarted_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnSkyDiveSkipped
// ()

void UKSWeaponComponent::OnSkyDiveSkipped()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnSkyDiveSkipped");

	UKSWeaponComponent_OnSkyDiveSkipped_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnSkyDiveEnded
// ()

void UKSWeaponComponent::OnSkyDiveEnded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnSkyDiveEnded");

	UKSWeaponComponent_OnSkyDiveEnded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnSetAsActivePrimaryWeapon
// ()

void UKSWeaponComponent::OnSetAsActivePrimaryWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnSetAsActivePrimaryWeapon");

	UKSWeaponComponent_OnSetAsActivePrimaryWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_WeaponState
// ()

void UKSWeaponComponent::OnRep_WeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_WeaponState");

	UKSWeaponComponent_OnRep_WeaponState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_WeaponAsset
// ()

void UKSWeaponComponent::OnRep_WeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_WeaponAsset");

	UKSWeaponComponent_OnRep_WeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_InitialState
// ()

void UKSWeaponComponent::OnRep_InitialState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_InitialState");

	UKSWeaponComponent_OnRep_InitialState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnRep_AmmoInClip
// ()

void UKSWeaponComponent::OnRep_AmmoInClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnRep_AmmoInClip");

	UKSWeaponComponent_OnRep_AmmoInClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnInvalidFire
// ()

void UKSWeaponComponent::OnInvalidFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnInvalidFire");

	UKSWeaponComponent_OnInvalidFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnInitialize
// ()

void UKSWeaponComponent::OnInitialize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnInitialize");

	UKSWeaponComponent_OnInitialize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnFireWeaponFull
// ()

void UKSWeaponComponent::OnFireWeaponFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnFireWeaponFull");

	UKSWeaponComponent_OnFireWeaponFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnFireWeapon
// ()

void UKSWeaponComponent::OnFireWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnFireWeapon");

	UKSWeaponComponent_OnFireWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnEmptyFire
// ()

void UKSWeaponComponent::OnEmptyFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnEmptyFire");

	UKSWeaponComponent_OnEmptyFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.OnActiveMaterialsApplied
// ()

void UKSWeaponComponent::OnActiveMaterialsApplied()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.OnActiveMaterialsApplied");

	UKSWeaponComponent_OnActiveMaterialsApplied_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.NotifyStopFireReceived
// ()

void UKSWeaponComponent::NotifyStopFireReceived()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.NotifyStopFireReceived");

	UKSWeaponComponent_NotifyStopFireReceived_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsWeaponSilenced
// ()

void UKSWeaponComponent::IsWeaponSilenced()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsWeaponSilenced");

	UKSWeaponComponent_IsWeaponSilenced_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsWeaponPendingFireWithValidAmmo
// ()

void UKSWeaponComponent::IsWeaponPendingFireWithValidAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsWeaponPendingFireWithValidAmmo");

	UKSWeaponComponent_IsWeaponPendingFireWithValidAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsReloading
// ()

void UKSWeaponComponent::IsReloading()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsReloading");

	UKSWeaponComponent_IsReloading_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsPrimaryActiveWeapon
// ()

void UKSWeaponComponent::IsPrimaryActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsPrimaryActiveWeapon");

	UKSWeaponComponent_IsPrimaryActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsModelViewer
// ()

void UKSWeaponComponent::IsModelViewer()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsModelViewer");

	UKSWeaponComponent_IsModelViewer_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsClipEmpty
// ()

void UKSWeaponComponent::IsClipEmpty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsClipEmpty");

	UKSWeaponComponent_IsClipEmpty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsAimingOverShoulder
// ()

void UKSWeaponComponent::IsAimingOverShoulder()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimingOverShoulder");

	UKSWeaponComponent_IsAimingOverShoulder_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsAimingDownSights
// ()

void UKSWeaponComponent::IsAimingDownSights()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimingDownSights");

	UKSWeaponComponent_IsAimingDownSights_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsAimingAlternate
// ()

void UKSWeaponComponent::IsAimingAlternate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimingAlternate");

	UKSWeaponComponent_IsAimingAlternate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsAiming
// ()

void UKSWeaponComponent::IsAiming()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAiming");

	UKSWeaponComponent_IsAiming_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsAimedAtFriendly
// ()

void UKSWeaponComponent::IsAimedAtFriendly()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimedAtFriendly");

	UKSWeaponComponent_IsAimedAtFriendly_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsAimedAtEnemy
// ()

void UKSWeaponComponent::IsAimedAtEnemy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsAimedAtEnemy");

	UKSWeaponComponent_IsAimedAtEnemy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.IsActiveWeapon
// ()

void UKSWeaponComponent::IsActiveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.IsActiveWeapon");

	UKSWeaponComponent_IsActiveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetWeaponState
// ()

void UKSWeaponComponent::GetWeaponState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponState");

	UKSWeaponComponent_GetWeaponState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponents
// ()

void UKSWeaponComponent::GetWeaponSkeletalMeshComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponents");

	UKSWeaponComponent_GetWeaponSkeletalMeshComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponentNew
// ()

void UKSWeaponComponent::GetWeaponSkeletalMeshComponentNew()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponentNew");

	UKSWeaponComponent_GetWeaponSkeletalMeshComponentNew_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponent
// ()

void UKSWeaponComponent::GetWeaponSkeletalMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponSkeletalMeshComponent");

	UKSWeaponComponent_GetWeaponSkeletalMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetWeaponAsset
// ()

void UKSWeaponComponent::GetWeaponAsset()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponAsset");

	UKSWeaponComponent_GetWeaponAsset_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetWeaponAnimInstance
// ()

void UKSWeaponComponent::GetWeaponAnimInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWeaponAnimInstance");

	UKSWeaponComponent_GetWeaponAnimInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetWalkSpeedModifier
// ()

void UKSWeaponComponent::GetWalkSpeedModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetWalkSpeedModifier");

	UKSWeaponComponent_GetWalkSpeedModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetViewModelScale
// ()

void UKSWeaponComponent::GetViewModelScale()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetViewModelScale");

	UKSWeaponComponent_GetViewModelScale_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetViewModelRotation
// ()

void UKSWeaponComponent::GetViewModelRotation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetViewModelRotation");

	UKSWeaponComponent_GetViewModelRotation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetViewModelLocationOffet
// ()

void UKSWeaponComponent::GetViewModelLocationOffet()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetViewModelLocationOffet");

	UKSWeaponComponent_GetViewModelLocationOffet_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetVibrationEffect
// ()

void UKSWeaponComponent::GetVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetVibrationEffect");

	UKSWeaponComponent_GetVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetVFXSpangKeyword
// ()

void UKSWeaponComponent::GetVFXSpangKeyword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetVFXSpangKeyword");

	UKSWeaponComponent_GetVFXSpangKeyword_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetTargetingModuleInstance
// ()

void UKSWeaponComponent::GetTargetingModuleInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetTargetingModuleInstance");

	UKSWeaponComponent_GetTargetingModuleInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetScopeSocketName
// ()

void UKSWeaponComponent::GetScopeSocketName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetScopeSocketName");

	UKSWeaponComponent_GetScopeSocketName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetRetrieveTime
// ()

void UKSWeaponComponent::GetRetrieveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetRetrieveTime");

	UKSWeaponComponent_GetRetrieveTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetReloadTime
// ()

void UKSWeaponComponent::GetReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetReloadTime");

	UKSWeaponComponent_GetReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetMuzzleSocketName
// ()

void UKSWeaponComponent::GetMuzzleSocketName()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMuzzleSocketName");

	UKSWeaponComponent_GetMuzzleSocketName_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetMovementAccuracyPenalty
// ()

void UKSWeaponComponent::GetMovementAccuracyPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMovementAccuracyPenalty");

	UKSWeaponComponent_GetMovementAccuracyPenalty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetMaxFiringAccuracyLoss
// ()

void UKSWeaponComponent::GetMaxFiringAccuracyLoss()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMaxFiringAccuracyLoss");

	UKSWeaponComponent_GetMaxFiringAccuracyLoss_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetMagnifierValue
// ()

void UKSWeaponComponent::GetMagnifierValue()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetMagnifierValue");

	UKSWeaponComponent_GetMagnifierValue_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetLoadedAccumulatedAttachmentOverrideData
// ()

void UKSWeaponComponent::GetLoadedAccumulatedAttachmentOverrideData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetLoadedAccumulatedAttachmentOverrideData");

	UKSWeaponComponent_GetLoadedAccumulatedAttachmentOverrideData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetInAirAccuracyModifier
// ()

void UKSWeaponComponent::GetInAirAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetInAirAccuracyModifier");

	UKSWeaponComponent_GetInAirAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetGrenadeTargetingModuleInstance
// ()

void UKSWeaponComponent::GetGrenadeTargetingModuleInstance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetGrenadeTargetingModuleInstance");

	UKSWeaponComponent_GetGrenadeTargetingModuleInstance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetFiringTime
// ()

void UKSWeaponComponent::GetFiringTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetFiringTime");

	UKSWeaponComponent_GetFiringTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponentNew
// ()

void UKSWeaponComponent::GetDuplicateSkeletalMeshComponentNew()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponentNew");

	UKSWeaponComponent_GetDuplicateSkeletalMeshComponentNew_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponent
// ()

void UKSWeaponComponent::GetDuplicateSkeletalMeshComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetDuplicateSkeletalMeshComponent");

	UKSWeaponComponent_GetDuplicateSkeletalMeshComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetDecalSpangKeyword
// ()

void UKSWeaponComponent::GetDecalSpangKeyword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetDecalSpangKeyword");

	UKSWeaponComponent_GetDecalSpangKeyword_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetCurrentAccuracy
// ()

void UKSWeaponComponent::GetCurrentAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetCurrentAccuracy");

	UKSWeaponComponent_GetCurrentAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetCrouchAccuracyModifier
// ()

void UKSWeaponComponent::GetCrouchAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetCrouchAccuracyModifier");

	UKSWeaponComponent_GetCrouchAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetClipSize
// ()

void UKSWeaponComponent::GetClipSize()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetClipSize");

	UKSWeaponComponent_GetClipSize_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetBaseRetrieveTime
// ()

void UKSWeaponComponent::GetBaseRetrieveTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseRetrieveTime");

	UKSWeaponComponent_GetBaseRetrieveTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetBaseReloadTime
// ()

void UKSWeaponComponent::GetBaseReloadTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseReloadTime");

	UKSWeaponComponent_GetBaseReloadTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetBaseFiringTime
// ()

void UKSWeaponComponent::GetBaseFiringTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseFiringTime");

	UKSWeaponComponent_GetBaseFiringTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetBaseAccuracy
// ()

void UKSWeaponComponent::GetBaseAccuracy()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetBaseAccuracy");

	UKSWeaponComponent_GetBaseAccuracy_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAttachments
// ()

void UKSWeaponComponent::GetAttachments()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAttachments");

	UKSWeaponComponent_GetAttachments_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAttachmentCosmeticInstances
// ()

void UKSWeaponComponent::GetAttachmentCosmeticInstances()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAttachmentCosmeticInstances");

	UKSWeaponComponent_GetAttachmentCosmeticInstances_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAncillaryMeshes
// ()

void UKSWeaponComponent::GetAncillaryMeshes()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAncillaryMeshes");

	UKSWeaponComponent_GetAncillaryMeshes_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAmmoInOwnerInventory
// ()

void UKSWeaponComponent::GetAmmoInOwnerInventory()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAmmoInOwnerInventory");

	UKSWeaponComponent_GetAmmoInOwnerInventory_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAmmoInClip
// ()

void UKSWeaponComponent::GetAmmoInClip()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAmmoInClip");

	UKSWeaponComponent_GetAmmoInClip_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAlternativeVibrationEffect
// ()

void UKSWeaponComponent::GetAlternativeVibrationEffect()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAlternativeVibrationEffect");

	UKSWeaponComponent_GetAlternativeVibrationEffect_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAlternativeVibrationAttenuation
// ()

void UKSWeaponComponent::GetAlternativeVibrationAttenuation()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAlternativeVibrationAttenuation");

	UKSWeaponComponent_GetAlternativeVibrationAttenuation_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAimOverShoulderAccuracyModifier
// ()

void UKSWeaponComponent::GetAimOverShoulderAccuracyModifier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAimOverShoulderAccuracyModifier");

	UKSWeaponComponent_GetAimOverShoulderAccuracyModifier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAimMode
// ()

void UKSWeaponComponent::GetAimMode()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAimMode");

	UKSWeaponComponent_GetAimMode_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAdjustedRetrieveRate
// ()

void UKSWeaponComponent::GetAdjustedRetrieveRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAdjustedRetrieveRate");

	UKSWeaponComponent_GetAdjustedRetrieveRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAdjustedReloadRate
// ()

void UKSWeaponComponent::GetAdjustedReloadRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAdjustedReloadRate");

	UKSWeaponComponent_GetAdjustedReloadRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAdjustedFiringRate
// ()

void UKSWeaponComponent::GetAdjustedFiringRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAdjustedFiringRate");

	UKSWeaponComponent_GetAdjustedFiringRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetActiveIndex
// ()

void UKSWeaponComponent::GetActiveIndex()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetActiveIndex");

	UKSWeaponComponent_GetActiveIndex_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAccuracyReturnRate
// ()

void UKSWeaponComponent::GetAccuracyReturnRate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAccuracyReturnRate");

	UKSWeaponComponent_GetAccuracyReturnRate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAccuracyReturnDelay
// ()

void UKSWeaponComponent::GetAccuracyReturnDelay()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAccuracyReturnDelay");

	UKSWeaponComponent_GetAccuracyReturnDelay_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GetAccuracyLossPerShot
// ()

void UKSWeaponComponent::GetAccuracyLossPerShot()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GetAccuracyLossPerShot");

	UKSWeaponComponent_GetAccuracyLossPerShot_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.GenerateSurfaceBasedKeyword
// ()

void UKSWeaponComponent::GenerateSurfaceBasedKeyword()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.GenerateSurfaceBasedKeyword");

	UKSWeaponComponent_GenerateSurfaceBasedKeyword_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ForceRetrieveWeapon
// ()

void UKSWeaponComponent::ForceRetrieveWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ForceRetrieveWeapon");

	UKSWeaponComponent_ForceRetrieveWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ForceHolsterWeapon
// ()

void UKSWeaponComponent::ForceHolsterWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ForceHolsterWeapon");

	UKSWeaponComponent_ForceHolsterWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.ForceAimUpdate
// ()

void UKSWeaponComponent::ForceAimUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.ForceAimUpdate");

	UKSWeaponComponent_ForceAimUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.EventUpdateOwnerLocallyViewed
// ()

void UKSWeaponComponent::EventUpdateOwnerLocallyViewed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.EventUpdateOwnerLocallyViewed");

	UKSWeaponComponent_EventUpdateOwnerLocallyViewed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.EvaluateWeaponLowering
// ()

void UKSWeaponComponent::EvaluateWeaponLowering()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.EvaluateWeaponLowering");

	UKSWeaponComponent_EvaluateWeaponLowering_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.DropMagazine
// ()

void UKSWeaponComponent::DropMagazine()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.DropMagazine");

	UKSWeaponComponent_DropMagazine_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.DetatchWeaponSkeletalMeshComponentAttachedChildren
// ()

void UKSWeaponComponent::DetatchWeaponSkeletalMeshComponentAttachedChildren()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.DetatchWeaponSkeletalMeshComponentAttachedChildren");

	UKSWeaponComponent_DetatchWeaponSkeletalMeshComponentAttachedChildren_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.CanUseCombatState
// ()

void UKSWeaponComponent::CanUseCombatState()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CanUseCombatState");

	UKSWeaponComponent_CanUseCombatState_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.CanReceiveAttachment
// ()

void UKSWeaponComponent::CanReceiveAttachment()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CanReceiveAttachment");

	UKSWeaponComponent_CanReceiveAttachment_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.CanLowerWeaponNow
// ()

void UKSWeaponComponent::CanLowerWeaponNow()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CanLowerWeaponNow");

	UKSWeaponComponent_CanLowerWeaponNow_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.CancelReloadCosmetic
// ()

void UKSWeaponComponent::CancelReloadCosmetic()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CancelReloadCosmetic");

	UKSWeaponComponent_CancelReloadCosmetic_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.CalcAmmoToBeReloaded
// ()

void UKSWeaponComponent::CalcAmmoToBeReloaded()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.CalcAmmoToBeReloaded");

	UKSWeaponComponent_CalcAmmoToBeReloaded_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastWeaponStateChange
// ()

void UKSWeaponComponent::BroadcastWeaponStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastWeaponStateChange");

	UKSWeaponComponent_BroadcastWeaponStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableWeaponStateChange
// ()

void UKSWeaponComponent::BroadcastReliableWeaponStateChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableWeaponStateChange");

	UKSWeaponComponent_BroadcastReliableWeaponStateChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliablePostReload
// ()

void UKSWeaponComponent::BroadcastReliablePostReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliablePostReload");

	UKSWeaponComponent_BroadcastReliablePostReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliablePostFireWithAmmo
// ()

void UKSWeaponComponent::BroadcastReliablePostFireWithAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliablePostFireWithAmmo");

	UKSWeaponComponent_BroadcastReliablePostFireWithAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableEmptyFire
// ()

void UKSWeaponComponent::BroadcastReliableEmptyFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableEmptyFire");

	UKSWeaponComponent_BroadcastReliableEmptyFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAmmoChange
// ()

void UKSWeaponComponent::BroadcastReliableAmmoChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAmmoChange");

	UKSWeaponComponent_BroadcastReliableAmmoChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireWithAmmo
// ()

void UKSWeaponComponent::BroadcastReliableAimedPostFireWithAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireWithAmmo");

	UKSWeaponComponent_BroadcastReliableAimedPostFireWithAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireFull
// ()

void UKSWeaponComponent::BroadcastReliableAimedPostFireFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFireFull");

	UKSWeaponComponent_BroadcastReliableAimedPostFireFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFire
// ()

void UKSWeaponComponent::BroadcastReliableAimedPostFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastReliableAimedPostFire");

	UKSWeaponComponent_BroadcastReliableAimedPostFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastPostReload
// ()

void UKSWeaponComponent::BroadcastPostReload()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastPostReload");

	UKSWeaponComponent_BroadcastPostReload_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastPostFireWithAmmo
// ()

void UKSWeaponComponent::BroadcastPostFireWithAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastPostFireWithAmmo");

	UKSWeaponComponent_BroadcastPostFireWithAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastEmptyFire
// ()

void UKSWeaponComponent::BroadcastEmptyFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastEmptyFire");

	UKSWeaponComponent_BroadcastEmptyFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAmmoChange
// ()

void UKSWeaponComponent::BroadcastAmmoChange()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAmmoChange");

	UKSWeaponComponent_BroadcastAmmoChange_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireWithAmmo
// ()

void UKSWeaponComponent::BroadcastAimedPostFireWithAmmo()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireWithAmmo");

	UKSWeaponComponent_BroadcastAimedPostFireWithAmmo_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireFull
// ()

void UKSWeaponComponent::BroadcastAimedPostFireFull()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAimedPostFireFull");

	UKSWeaponComponent_BroadcastAimedPostFireFull_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BroadcastAimedPostFire
// ()

void UKSWeaponComponent::BroadcastAimedPostFire()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BroadcastAimedPostFire");

	UKSWeaponComponent_BroadcastAimedPostFire_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintPrepareKillCamPlayback
// ()

void UKSWeaponComponent::BlueprintPrepareKillCamPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintPrepareKillCamPlayback");

	UKSWeaponComponent_BlueprintPrepareKillCamPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintPersistentCosmeticsUpdate
// ()

void UKSWeaponComponent::BlueprintPersistentCosmeticsUpdate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintPersistentCosmeticsUpdate");

	UKSWeaponComponent_BlueprintPersistentCosmeticsUpdate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintFinishKillCamPlayback
// ()

void UKSWeaponComponent::BlueprintFinishKillCamPlayback()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintFinishKillCamPlayback");

	UKSWeaponComponent_BlueprintFinishKillCamPlayback_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.BlueprintFillLegacyDataTable
// ()

void UKSWeaponComponent::BlueprintFillLegacyDataTable()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.BlueprintFillLegacyDataTable");

	UKSWeaponComponent_BlueprintFillLegacyDataTable_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponComponent.AimDownSightsCheckpoint
// ()

void UKSWeaponComponent::AimDownSightsCheckpoint()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponComponent.AimDownSightsCheckpoint");

	UKSWeaponComponent_AimDownSightsCheckpoint_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.KSWeaponFunctionLibrary.OnTraceReactionDelay__DelegateSignature
// ()

void UKSWeaponFunctionLibrary::OnTraceReactionDelay__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.KSWeaponFunctionLibrary.OnTraceReactionDelay__DelegateSignature");

	UKSWeaponFunctionLibrary_OnTraceReactionDelay__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByObjectType
// ()

void UKSWeaponFunctionLibrary::MultiLineWeaponTraceByObjectType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByObjectType");

	UKSWeaponFunctionLibrary_MultiLineWeaponTraceByObjectType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByChannel
// ()

void UKSWeaponFunctionLibrary::MultiLineWeaponTraceByChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MultiLineWeaponTraceByChannel");

	UKSWeaponFunctionLibrary_MultiLineWeaponTraceByChannel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.MeleeSphereOverlapComponents
// ()

void UKSWeaponFunctionLibrary::MeleeSphereOverlapComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MeleeSphereOverlapComponents");

	UKSWeaponFunctionLibrary_MeleeSphereOverlapComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.MeleeSphereOverlapActors
// ()

void UKSWeaponFunctionLibrary::MeleeSphereOverlapActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MeleeSphereOverlapActors");

	UKSWeaponFunctionLibrary_MeleeSphereOverlapActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapComponents
// ()

void UKSWeaponFunctionLibrary::MeleeBoxOverlapComponents()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapComponents");

	UKSWeaponFunctionLibrary_MeleeBoxOverlapComponents_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapActors
// ()

void UKSWeaponFunctionLibrary::MeleeBoxOverlapActors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.MeleeBoxOverlapActors");

	UKSWeaponFunctionLibrary_MeleeBoxOverlapActors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetThrowSpeedMultiplier
// ()

void UKSWeaponFunctionLibrary::GetGadgetThrowSpeedMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetThrowSpeedMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetThrowSpeedMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetOuterRadiusMultiplier
// ()

void UKSWeaponFunctionLibrary::GetGadgetOuterRadiusMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetOuterRadiusMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetOuterRadiusMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetInnerRadiusMultiplier
// ()

void UKSWeaponFunctionLibrary::GetGadgetInnerRadiusMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetInnerRadiusMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetInnerRadiusMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.GetGadgetFXSizeMultiplier
// ()

void UKSWeaponFunctionLibrary::GetGadgetFXSizeMultiplier()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GetGadgetFXSizeMultiplier");

	UKSWeaponFunctionLibrary_GetGadgetFXSizeMultiplier_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2Exact
// ()

void UKSWeaponFunctionLibrary::GenerateShotgunSpreadAimDataV2Exact()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2Exact");

	UKSWeaponFunctionLibrary_GenerateShotgunSpreadAimDataV2Exact_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2
// ()

void UKSWeaponFunctionLibrary::GenerateShotgunSpreadAimDataV2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimDataV2");

	UKSWeaponFunctionLibrary_GenerateShotgunSpreadAimDataV2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimData
// ()

void UKSWeaponFunctionLibrary::GenerateShotgunSpreadAimData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.GenerateShotgunSpreadAimData");

	UKSWeaponFunctionLibrary_GenerateShotgunSpreadAimData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.FrameDelayForTrace
// ()

void UKSWeaponFunctionLibrary::FrameDelayForTrace()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.FrameDelayForTrace");

	UKSWeaponFunctionLibrary_FrameDelayForTrace_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.FindShotgunPelletHitData
// ()

void UKSWeaponFunctionLibrary::FindShotgunPelletHitData()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.FindShotgunPelletHitData");

	UKSWeaponFunctionLibrary_FindShotgunPelletHitData_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannelV2
// ()

void UKSWeaponFunctionLibrary::EventSingleShotgunLineTraceByChannelV2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannelV2");

	UKSWeaponFunctionLibrary_EventSingleShotgunLineTraceByChannelV2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannel
// ()

void UKSWeaponFunctionLibrary::EventSingleShotgunLineTraceByChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventSingleShotgunLineTraceByChannel");

	UKSWeaponFunctionLibrary_EventSingleShotgunLineTraceByChannel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV3
// ()

void UKSWeaponFunctionLibrary::EventMultiShotgunLineTraceByChannelV3()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV3");

	UKSWeaponFunctionLibrary_EventMultiShotgunLineTraceByChannelV3_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV2
// ()

void UKSWeaponFunctionLibrary::EventMultiShotgunLineTraceByChannelV2()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannelV2");

	UKSWeaponFunctionLibrary_EventMultiShotgunLineTraceByChannelV2_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannel
// ()

void UKSWeaponFunctionLibrary::EventMultiShotgunLineTraceByChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.EventMultiShotgunLineTraceByChannel");

	UKSWeaponFunctionLibrary_EventMultiShotgunLineTraceByChannel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamageWithPreventionChannel
// ()

void UKSWeaponFunctionLibrary::DoRadialDamageWithPreventionChannel()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamageWithPreventionChannel");

	UKSWeaponFunctionLibrary_DoRadialDamageWithPreventionChannel_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamage
// ()

void UKSWeaponFunctionLibrary::DoRadialDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.DoRadialDamage");

	UKSWeaponFunctionLibrary_DoRadialDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.DoPointDamage
// ()

void UKSWeaponFunctionLibrary::DoPointDamage()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.DoPointDamage");

	UKSWeaponFunctionLibrary_DoPointDamage_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponFunctionLibrary.CongregateShotgunHits
// ()

void UKSWeaponFunctionLibrary::CongregateShotgunHits()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponFunctionLibrary.CongregateShotgunHits");

	UKSWeaponFunctionLibrary_CongregateShotgunHits_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponMasteryManager.GetKDAForWeapon
// ()

void UKSWeaponMasteryManager::GetKDAForWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetKDAForWeapon");

	UKSWeaponMasteryManager_GetKDAForWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithWeapon
// ()

void UKSWeaponMasteryManager::GetActivityInstancesWithWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithWeapon");

	UKSWeaponMasteryManager_GetActivityInstancesWithWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithType
// ()

void UKSWeaponMasteryManager::GetActivityInstancesWithType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetActivityInstancesWithType");

	UKSWeaponMasteryManager_GetActivityInstancesWithType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponMasteryManager.GetAccuracyForWeapon
// ()

void UKSWeaponMasteryManager::GetAccuracyForWeapon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.GetAccuracyForWeapon");

	UKSWeaponMasteryManager_GetAccuracyForWeapon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWeaponMasteryManager.FindActivityByWeaponAndType
// ()

void UKSWeaponMasteryManager::FindActivityByWeaponAndType()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWeaponMasteryManager.FindActivityByWeaponAndType");

	UKSWeaponMasteryManager_FindActivityByWeaponAndType_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSWorldSettings.LevelActorDestroyed
// ()

void AKSWorldSettings::LevelActorDestroyed()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSWorldSettings.LevelActorDestroyed");

	AKSWorldSettings_LevelActorDestroyed_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.SetReadyToRide
// ()

void AKSZipLine::SetReadyToRide()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.SetReadyToRide");

	AKSZipLine_SetReadyToRide_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.OnPlayerZiplineCooldownEnd
// ()

void AKSZipLine::OnPlayerZiplineCooldownEnd()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.OnPlayerZiplineCooldownEnd");

	AKSZipLine_OnPlayerZiplineCooldownEnd_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.OnPlayerStopZiplining
// ()

void AKSZipLine::OnPlayerStopZiplining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.OnPlayerStopZiplining");

	AKSZipLine_OnPlayerStopZiplining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.OnPlayerStartZiplining
// ()

void AKSZipLine::OnPlayerStartZiplining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.OnPlayerStartZiplining");

	AKSZipLine_OnPlayerStartZiplining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.IsUpline
// ()

void AKSZipLine::IsUpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.IsUpline");

	AKSZipLine_IsUpline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.GetAutoReleaseDistance
// ()

void AKSZipLine::GetAutoReleaseDistance()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.GetAutoReleaseDistance");

	AKSZipLine_GetAutoReleaseDistance_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine.ComputeAutoReleaseVelocity
// ()

void AKSZipLine::ComputeAutoReleaseVelocity()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine.ComputeAutoReleaseVelocity");

	AKSZipLine_ComputeAutoReleaseVelocity_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZipLine_Dynamic.SetDynamicAnchors
// ()

void AKSZipLine_Dynamic::SetDynamicAnchors()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZipLine_Dynamic.SetDynamicAnchors");

	AKSZipLine_Dynamic_SetDynamicAnchors_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZiplineMeshComponent.StartZiplining
// ()

void UKSZiplineMeshComponent::StartZiplining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZiplineMeshComponent.StartZiplining");

	UKSZiplineMeshComponent_StartZiplining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.KSZiplineMeshComponent.EndZiplining
// ()

void UKSZiplineMeshComponent::EndZiplining()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.KSZiplineMeshComponent.EndZiplining");

	UKSZiplineMeshComponent_EndZiplining_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.LobbyPlayerController.UIX_FlushPressedKeys
// ()

void ALobbyPlayerController::UIX_FlushPressedKeys()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.LobbyPlayerController.UIX_FlushPressedKeys");

	ALobbyPlayerController_UIX_FlushPressedKeys_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.LobbyPlayerController.LoadRoute
// ()

void ALobbyPlayerController::LoadRoute()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.LobbyPlayerController.LoadRoute");

	ALobbyPlayerController_LoadRoute_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.LobbyPlayerController.ClearDeserterPenalty
// ()

void ALobbyPlayerController::ClearDeserterPenalty()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.LobbyPlayerController.ClearDeserterPenalty");

	ALobbyPlayerController_ClearDeserterPenalty_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ParticleSystemChannelComponent.UpdateChannels
// ()

void UParticleSystemChannelComponent::UpdateChannels()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ParticleSystemChannelComponent.UpdateChannels");

	UParticleSystemChannelComponent_UpdateChannels_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.PerkCategory.GetSoftCategoryIcon
// ()

void UPerkCategory::GetSoftCategoryIcon()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.PerkCategory.GetSoftCategoryIcon");

	UPerkCategory_GetSoftCategoryIcon_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SmoothRepTimelineActor.SetTimelineComponentToSimulate
// ()

void ASmoothRepTimelineActor::SetTimelineComponentToSimulate()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SmoothRepTimelineActor.SetTimelineComponentToSimulate");

	ASmoothRepTimelineActor_SetTimelineComponentToSimulate_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SmoothRepTimelineActor.OnRep_SmoothTimeline
// ()

void ASmoothRepTimelineActor::OnRep_SmoothTimeline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SmoothRepTimelineActor.OnRep_SmoothTimeline");

	ASmoothRepTimelineActor_OnRep_SmoothTimeline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.StopSimulating
// ()

void USplineMovementComponent::StopSimulating()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.StopSimulating");

	USplineMovementComponent_StopSimulating_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.SetInitialOffsetOnSpline
// ()

void USplineMovementComponent::SetInitialOffsetOnSpline()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.SetInitialOffsetOnSpline");

	USplineMovementComponent_SetInitialOffsetOnSpline_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.RestartMovement
// ()

void USplineMovementComponent::RestartMovement()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.RestartMovement");

	USplineMovementComponent_RestartMovement_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitEndDelegate__DelegateSignature
// ()

void USplineMovementComponent::OnSplineWaitEndDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitEndDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineWaitEndDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitBeginDelegate__DelegateSignature
// ()

void USplineMovementComponent::OnSplineWaitBeginDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineWaitBeginDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineWaitBeginDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineStopDelegate__DelegateSignature
// ()

void USplineMovementComponent::OnSplineStopDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineStopDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineStopDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineReverseDelegate__DelegateSignature
// ()

void USplineMovementComponent::OnSplineReverseDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineReverseDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineReverseDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// DelegateFunction Killstreak.SplineMovementComponent.OnSplineResetDelegate__DelegateSignature
// ()

void USplineMovementComponent::OnSplineResetDelegate__DelegateSignature()
{
	static auto fn = UObject::FindObject<UFunction>("DelegateFunction Killstreak.SplineMovementComponent.OnSplineResetDelegate__DelegateSignature");

	USplineMovementComponent_OnSplineResetDelegate__DelegateSignature_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.GoToTime
// ()

void USplineMovementComponent::GoToTime()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.GoToTime");

	USplineMovementComponent_GoToTime_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.SplineMovementComponent.GetAlpha
// ()

void USplineMovementComponent::GetAlpha()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.SplineMovementComponent.GetAlpha");

	USplineMovementComponent_GetAlpha_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.ThermalScopeManagerComponent.CreateThermalManagerComponent
// ()

void UThermalScopeManagerComponent::CreateThermalManagerComponent()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.ThermalScopeManagerComponent.CreateThermalManagerComponent");

	UThermalScopeManagerComponent_CreateThermalManagerComponent_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.TracerParticlePoolComponent.OnTracerDestinationReached
// ()

void UTracerParticlePoolComponent::OnTracerDestinationReached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.TracerParticlePoolComponent.OnTracerDestinationReached");

	UTracerParticlePoolComponent_OnTracerDestinationReached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


// Function Killstreak.TracerStaticMeshPoolComponent.OnTracerDestinationReached
// ()

void UTracerStaticMeshPoolComponent::OnTracerDestinationReached()
{
	static auto fn = UObject::FindObject<UFunction>("Function Killstreak.TracerStaticMeshPoolComponent.OnTracerDestinationReached");

	UTracerStaticMeshPoolComponent_OnTracerDestinationReached_Params params;

	auto flags = fn->FunctionFlags;

	UObject::ProcessEvent(fn, &params);

	fn->FunctionFlags = flags;
}


}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
